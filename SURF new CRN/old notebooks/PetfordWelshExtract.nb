(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    372279,       8011]
NotebookOptionsPosition[    357129,       7744]
NotebookOutlinePosition[    362783,       7864]
CellTagsIndexPosition[    362740,       7861]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Code from and for the well-mixed stochastic CRN simulator", "Section",
 CellChangeTimes->{{3.8208008885551662`*^9, 3.820800901949781*^9}, {
  3.821763597606181*^9, 
  3.8217636024725533`*^9}},ExpressionUUID->"feb81284-dba6-470d-9997-\
9b6da9c00e2d"],

Cell["\<\
This is the simulator that can pre-process large (many reactions) CRNs for \
faster simulation, as used in the WalkSATCRN paper. \
\>", "Text",
 CellChangeTimes->{{3.821485952270832*^9, 3.821485967695526*^9}, {
  3.8214860024429073`*^9, 3.821486003566992*^9}, {3.8215741333315496`*^9, 
  3.821574165839142*^9}, {3.821574445893565*^9, 3.82157447520442*^9}, {
  3.821575005400693*^9, 3.821575015910357*^9}, {3.821650231109909*^9, 
  3.821650254423472*^9}, {3.821663917928609*^9, 3.821663935111133*^9}, {
  3.821763759556059*^9, 3.821763769244585*^9}, {3.8293084508753357`*^9, 
  3.829308482435864*^9}, {3.829309335623828*^9, 3.8293093447975473`*^9}, {
  3.8293093810059557`*^9, 3.8293094288789797`*^9}, {3.832777128130555*^9, 
  3.832777131300579*^9}, {3.833203797238987*^9, 3.8332038106333427`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"8fcc14f5-fd80-460a-a06a-76044aaebe14"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Get", "[", "\"\<CRNSimulator.m\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Get", "[", "\"\<CRNSimulatorSSA5.m\>\"", "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.756939388737718*^9, 3.7569394056949167`*^9}, 
   3.756939438583961*^9, {3.7572866561186523`*^9, 3.7572866562936563`*^9}, {
   3.757734559281149*^9, 3.757734566896432*^9}, 3.821300854746962*^9, 
   3.821301124988103*^9, 3.8293092004281282`*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"a2fd125c-d676-40ea-b617-822bef79cf83"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Running the \[OpenCurlyDoubleQuote]Homework Solution 6\
\[CloseCurlyDoubleQuote] CRN", "Section",
 CellChangeTimes->{{3.8208008885551662`*^9, 3.820800901949781*^9}, {
  3.821763597606181*^9, 3.8217636024725533`*^9}, {3.833201232343478*^9, 
  3.8332012666072893`*^9}},ExpressionUUID->"af216e18-9615-4b10-af94-\
70efc167390b"],

Cell["\<\
I initially thought that the ColoringCRN can be considered a CRN \
implementation approximating the Petford & Welsh 1989 randomized algorithm.   \
In her final report, Pippa investigates the RandomizedCRN, but I think it is \
the same CRN.   Neither is a good name.  Going forward, I suggest \
\[OpenCurlyDoubleQuote]ConflictColoringCRN\[CloseCurlyDoubleQuote] because \
the essence of this algorithm is directed by coloring conflicts and there is \
little else going on.  (As we will see below, Petford & Welsh actually had \
several variants, and this CRN is closest to one of their not-so-good \
variants.)\
\>", "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQvWIVx4fnFW8cDzh++wiifXT8voHoMypFYJpvzqp/
QpVvHB1u7WISBtJiM/aogug5XWmaILrq0ppsEL1U8W8OiE5oeaxmAaRFe89q
gmit7Xuv2gHp9L7H10G0zemPU/OB9JLL6tNB9AGmmJbL7W8cZ37y7QDRad8+
fwLRTa2SX0D0KYMFP0D0LIU5/8Dimn6lezqA7jSbAKbfNvxfAKLvFD1bCKLF
WAtXgujOiy6rQXRb66zbILop6fo9EH3E7F8oY+cbR6YNzOEgeuN9F+W5fUB3
Tj+tD6If/u52BdGJPBbeINrJZkqBQ/8bx4ZtIXUgGgB/saX0
  "],
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"580f51c3-c72e-4df5-89bf-ec75c6687395"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ColoringCRN", "[", 
   RowBox[{"G_", ",", "k_"}], "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Join", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"rxn", "[", 
        RowBox[{
         RowBox[{"V", "[", "v", "]"}], ",", 
         RowBox[{"V", "[", 
          RowBox[{"v", ",", "c"}], "]"}], ",", "1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"v", ",", 
         RowBox[{"VertexList", "[", "G", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", 
         RowBox[{"Range", "[", "k", "]"}]}], "}"}]}], "]"}], ",", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "a", " ", "vertex", " ", "without", " ", "a", " ", "color", " ", "will",
        " ", "randomly", " ", "choose", " ", "a", " ", "color"}], " ", "*)"}], 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"rxn", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"V", "[", 
           RowBox[{
            RowBox[{"First", "[", "e", "]"}], ",", "c"}], "]"}], "+", 
          RowBox[{"V", "[", 
           RowBox[{
            RowBox[{"Last", "[", "e", "]"}], ",", "c"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"V", "[", 
           RowBox[{"First", "[", "e", "]"}], "]"}], "+", 
          RowBox[{"V", "[", 
           RowBox[{"Last", "[", "e", "]"}], "]"}]}], ",", "1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"e", ",", 
         RowBox[{"EdgeList", "[", "G", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", 
         RowBox[{"Range", "[", "k", "]"}]}], "}"}]}], "]"}], ",", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"conflicting", " ", "edges", " ", "recolor"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"conc", "[", 
        RowBox[{
         RowBox[{"V", "[", "v", "]"}], ",", "1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"v", ",", 
         RowBox[{"VertexList", "[", "G", "]"}]}], "}"}]}], "]"}]}], " ", 
    RowBox[{"(*", " ", 
     RowBox[{"each", " ", "vertex", " ", "starts", " ", "uncolored"}], " ", 
     "*)"}], "\[IndentingNewLine]", "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.821736427603001*^9, 3.8217365452828817`*^9}, {
   3.821736663812303*^9, 3.821736664821167*^9}, {3.821736729941963*^9, 
   3.821736904666264*^9}, {3.821736964475473*^9, 3.8217369854321947`*^9}, 
   3.8217370824168367`*^9, {3.821737386557878*^9, 3.821737397015534*^9}, {
   3.8217374548990517`*^9, 3.8217375616417913`*^9}, {3.821737815071558*^9, 
   3.821737826189953*^9}, 3.821740246217448*^9, {3.8227007999747753`*^9, 
   3.82270080995686*^9}, {3.823456313090473*^9, 3.8234563594662313`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"14661e0a-a7c3-485e-aba1-d4fcfdd869bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"VerifyColoringCRN", "[", 
   RowBox[{"G_", ",", "k_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "rsys", ",", "cputime", ",", "times", ",", "data", ",", "finishconcs", 
      ",", "results"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rsys", "=", 
      RowBox[{"CompiledRxnsysSSA", "[", 
       RowBox[{"ColoringCRN", "[", 
        RowBox[{"G", ",", "k"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"times", ",", "data"}], "}"}], "=", 
      RowBox[{"SimulateRxnsysSSA", "[", 
       RowBox[{"rsys", ",", "Infinity", ",", 
        RowBox[{"Output", "\[Rule]", "\"\<State\>\""}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"finishconcs", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"conc", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"SpeciesInRxnsys", "[", "rsys", "]"}], ",", 
          RowBox[{"Last", "[", "data", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"results", "=", 
      RowBox[{"Cases", "[", 
       RowBox[{"finishconcs", ",", 
        RowBox[{
         RowBox[{"conc", "[", 
          RowBox[{
           RowBox[{"V", "[", 
            RowBox[{"v_", ",", "c_"}], "]"}], ",", 
           RowBox[{"_", "?", "Positive"}]}], "]"}], "\[RuleDelayed]", 
         RowBox[{"(", 
          RowBox[{"v", "\[Rule]", "c"}], ")"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Sort", "[", 
        RowBox[{"First", "/@", "results"}], "]"}], "===", 
       RowBox[{"Sort", "[", 
        RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], " ", "&&", 
      RowBox[{
       RowBox[{"Length", "[", "results", "]"}], "===", 
       RowBox[{"VertexCount", "[", "G", "]"}]}], "&&", "\[IndentingNewLine]", 
      
      RowBox[{"Not", "[", 
       RowBox[{"AnyTrue", "[", 
        RowBox[{
         RowBox[{"EdgeList", "[", "G", "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "/.", "results"}], ")"}], "===", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "/.", "results"}], ")"}]}], 
           ")"}], "&"}]}], "]"}], "]"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8298820585140467`*^9, 3.829882135933886*^9}, {
   3.82988217057253*^9, 3.8298821825113907`*^9}, {3.830699836185714*^9, 
   3.83069987226506*^9}, {3.830706727193357*^9, 3.8307067352567387`*^9}, {
   3.830721992212474*^9, 3.83072199265446*^9}, {3.830722028757256*^9, 
   3.830722029127385*^9}, {3.8313892587940407`*^9, 3.831389262847146*^9}, {
   3.831393931630733*^9, 3.8313939452475977`*^9}, 3.831394053575947*^9, {
   3.831395056810964*^9, 3.8313950600471983`*^9}, {3.8314018219927187`*^9, 
   3.8314018287490473`*^9}, {3.8314031213189487`*^9, 3.831403186118978*^9}, {
   3.8314039262394953`*^9, 3.8314039390957212`*^9}, {3.831430151744495*^9, 
   3.8314301661369753`*^9}, {3.831430537752088*^9, 3.831430544517885*^9}, {
   3.83143185261271*^9, 3.8314318836485987`*^9}, {3.831431921702321*^9, 
   3.831431956391135*^9}, {3.831433823432598*^9, 3.831433849935893*^9}, {
   3.831433886561181*^9, 3.831433949446246*^9}, {3.831434006152587*^9, 
   3.831434127686791*^9}, {3.831434175305982*^9, 3.831434241860962*^9}, 
   3.8314843650598993`*^9, {3.831733629218012*^9, 3.831733638731639*^9}, {
   3.831753142686718*^9, 3.831753146231378*^9}, {3.832869087537986*^9, 
   3.832869102567018*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"21219c1b-bdc0-4005-acc2-859eb486598c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TimeColoringCRN", "[", 
   RowBox[{"G_", ",", "k_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"rsys", ",", "cputime", ",", "times", ",", "states"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rsys", "=", 
      RowBox[{"CompiledRxnsysSSA", "[", 
       RowBox[{"ColoringCRN", "[", 
        RowBox[{"G", ",", "k"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"cputime", ",", 
        RowBox[{"{", 
         RowBox[{"times", ",", "states"}], "}"}]}], "}"}], "=", 
      RowBox[{"AbsoluteTiming", "[", 
       RowBox[{"SimulateRxnsysSSA", "[", 
        RowBox[{"rsys", ",", "Infinity", ",", 
         RowBox[{"Output", "\[Rule]", "\"\<State\>\""}]}], "]"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"cputime", ",", 
       RowBox[{"Length", "[", "times", "]"}], ",", 
       RowBox[{"Last", "[", "times", "]"}]}], "}"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8298820585140467`*^9, 3.829882135933886*^9}, {
  3.82988217057253*^9, 3.8298821825113907`*^9}, {3.831399242214025*^9, 
  3.831399246706147*^9}, {3.832869774377234*^9, 3.832869781465413*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"894eee33-08bb-4be1-9c4c-de6ee58f7a7b"],

Cell["\<\
It will also be useful to ask Mathematica to call MiniSAT to solve coloring \
problems.

Given a graph G with N vertices and E edges, we use variables V[v,c] to mean \
vertex v is colored c.  So for each edge {i,j} we have 
\t(!V[i,1] || !V[j,1]) && ... &&  (!V[i,k] || !V[j,k]) 
and then to ensure that each vertex is given exactly 1 color
\t(V[i,1] || ... || V[i,k]) && (!V[i,1] || !V[i,2]) && ... && (!V[i,k-1] || \
!V[i,k])
This is not 3-SAT, but it is K-SAT.

See \[OpenCurlyDoubleQuote]Another look at graph coloring via propositional \
satisfiability\[CloseCurlyDoubleQuote] by Allen Van Gelder (2008) for \
alternative (possibly much better) ways for encoding graph coloring as SAT \
problems.\
\>", "Text",
 CellChangeTimes->CompressedData["
1:eJwdzmkow3EAxvG1XC9EmIWIZaw5SpKrhb8jyjFpU2pJk2tWsiLmxdDkKCMl
19qmKBveoJRmLcmL4YUrcpSazZsp5xAbv+f/4ulTz6svR9pR08RkMBixZHDF
FPD82OOirJT7BVakVLnhEVdBG6Q1eUN7XVTB9Q4zjMieNSdA7VgzHypP19rh
Mscjhw1qe2I2MXz8mA+Ttncv8ogtGvslFBy+THcQl854M9DKlKjPhl3U3Gvl
CGx2v73CwaHId2hLM3zB+Titl/75VV3mEdKZOUn71P9ngLcK5yJk+3Ya4ehJ
8Sp0SFn30LLHo936Hh3YJcqLlAtQkX2jh9aIaAO0bTelWogaoTgdctR/Anjl
/SmH2nRZNRStsGuhLj6mEU59PdC2bpXJ4KkouRtyPSWbcKN7k/Y20KazEiW5
XD08uKsQO4g+xj4p3NBEtUKR6KMNun8vVVBYV78Ec/YH7XCIG+KArNBEPycx
2PPpD/PPs9oLJlxURlmpHO4XalTwbd3SD/8B5GETFA==
  "],
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"93b629c8-fea7-46df-9e5d-6cc75430f6f3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ColoringSAT", "[", 
   RowBox[{"G_", ",", "k_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"v", "=", 
       RowBox[{"VertexList", "[", "G", "]"}]}], ",", 
      RowBox[{"e", "=", 
       RowBox[{"EdgeList", "[", "G", "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"And", "@@", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Join", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"!", 
            RowBox[{"V", "[", 
             RowBox[{
              RowBox[{"edge", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "c"}], "]"}]}], "||", 
           RowBox[{"!", 
            RowBox[{"V", "[", 
             RowBox[{
              RowBox[{"edge", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "c"}], "]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"c", ",", 
            RowBox[{"Range", "[", "k", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"edge", ",", "e"}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Or", "@@", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"V", "[", 
              RowBox[{"i", ",", "c"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"c", ",", 
               RowBox[{"Range", "[", "k", "]"}]}], "}"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "v"}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"!", 
            RowBox[{"V", "[", 
             RowBox[{"i", ",", "c1"}], "]"}]}], "||", 
           RowBox[{"!", 
            RowBox[{"V", "[", 
             RowBox[{"i", ",", "c2"}], "]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"c1", ",", "1", ",", 
            RowBox[{"k", "-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"c2", ",", 
            RowBox[{"c1", "+", "1"}], ",", "k"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "v"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
       "]"}], "]"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.829862141425124*^9, 3.829862145097288*^9}, {
  3.829862194486775*^9, 3.829862195996364*^9}, {3.829869206486381*^9, 
  3.82986921484153*^9}, {3.829869874685528*^9, 3.8298702275817137`*^9}, {
  3.82987026954095*^9, 3.829870291616658*^9}, {3.83168957180567*^9, 
  3.831689573116705*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"6de3ae31-5188-4fec-990e-21dbf0a89e58"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Reproducing Petford & Welsh\[CloseCurlyQuote]s phase transitions for graph \
coloring\
\>", "Section",
 CellChangeTimes->{{3.8208008885551662`*^9, 3.820800901949781*^9}, {
  3.821763597606181*^9, 3.8217636024725533`*^9}, {3.829785492346664*^9, 
  3.829785511438656*^9}, {3.829785609747588*^9, 3.829785612339377*^9}, {
  3.829785825118154*^9, 3.829785842661312*^9}, {3.829789093671651*^9, 
  3.829789098765925*^9}, {3.829831366199912*^9, 3.829831384506308*^9}, {
  3.829881980385211*^9, 3.829881994298912*^9}, {3.832867584336547*^9, 
  3.83286759827162*^9}},ExpressionUUID->"17105c81-5444-40de-9deb-\
c36a223389e5"],

Cell["\<\
A surprising thing about the Petford & Welsh paper is that it shows the \
algorithm consistently and effectively solving 3-coloring problems of up to \
1000 vertices.  Below, we will see that on random graphs (generated with iid \
edges and selected by MiniSAT to be colorable) ColoringCRN has trouble going \
to even 15-vertex graphs.  Is this because the CRN version of the algorithm \
is somehow significantly different based on some bias in how random moves are \
selected, or is this because Petford & Welsh generated super-easy-to-solve \
graphs?  

Let\[CloseCurlyQuote]s generate graphs their way, and see.  Their method of \
generating 3-colorable graphs is, given n=n1+n2+n3 and p, to color vertices \
1...n1 color 1, vertices n1+1...n1+n2 color 2, and n1+n2+1...n color 3, then \
to add non-conflicting edges with iid probability p each  (and permute all \
vertex names if that makes you feel better).  Generalization to k > 3 is \
straightforward.\
\>", "Text",
 CellChangeTimes->CompressedData["
1:eJwd0FtI02EYBvA1ynYhE7JGR2q5KZsZsmCN8S83OlBo02IJwRDZ3BQVpEWy
jMBqHqEtLMvVmhsUTltd6MADc/zpRpoHcKuMNWSxZhAL0mTZwa3v+S5efvBc
vLzPK9S3XDJyORyOlAz0jvB+fLWk1Kw6vQorjmjScE5kpvKdI5kdN1JqVXSK
m08UDATE0NlrksC2sK8JvhBuNsNaa6JQQdx1b14CpePT708S622JJcjMrva3
EJ9Hih5DlquzRrpSasfahW5oSv9cg3c69qzDUKl7Az455MzQXKK5Hugmd8rv
U7+3Z90wZl7xQMG2q8OwZ/H0S5jU74zD4Jsiqv93z+1pYvOptqfQrPg0CNnd
+90wNG4sCRJtlZdlUGjNMvBj5m85dMoaq6DWK6iGroIDBti38YXa4D/XCMPa
4lYo2jwzBkdbx6ix3JCLJeqUokHIlN2NhYn/lFGq4fOyIEL8k5TvgwF/3UFY
suyi3hSWSaHO4pHBdZVYC8/Oa6rh4eOG7e+IhY4tPFizsDUP8meu5MOmxFER
/Nafdwz29bIKOMFfYeCkPKcdVlV2PoTXzlsGIC/XOAS52blXdB87/Br+8lTU
fkBfu90EozPl+mc28jcmboA5yngDdCQLLFA1ar8FO33BLjj1QPwIKt6eGIIX
O5Z80LrX64f/Aag2cbk=
  "],
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"2e917c37-4df6-4796-80b2-86f92cc94ba6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PetfordWelshRandomGraph", "[", 
   RowBox[{"ns_", ",", "p_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"m", ",", 
      RowBox[{"n", "=", 
       RowBox[{"Total", "[", "ns", "]"}]}], ",", 
      RowBox[{"k", "=", 
       RowBox[{"Length", "[", "ns", "]"}]}], ",", "i"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"m", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"RandomReal", "[", "]"}], "<", 
           RowBox[{"Sqrt", "[", "p", "]"}]}], ",", "1", ",", "0"}], "]"}], 
        ",", "n", ",", "n"}], "]"}]}], ";", " ", 
     RowBox[{"m", "=", 
      RowBox[{"m", "*", 
       RowBox[{"Transpose", "[", "m", "]"}]}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"symmetric", " ", "with", " ", "prob", " ", "p", " ", "off"}], 
       "-", "diagonal"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", "k"}], ",", 
       RowBox[{"i", "++"}], ",", 
       RowBox[{
        RowBox[{"m", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Total", "[", 
              RowBox[{"Take", "[", 
               RowBox[{"ns", ",", 
                RowBox[{"i", "-", "1"}]}], "]"}], "]"}], "+", "1"}], ";;", 
            RowBox[{"Total", "[", 
             RowBox[{"Take", "[", 
              RowBox[{"ns", ",", "i"}], "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Total", "[", 
              RowBox[{"Take", "[", 
               RowBox[{"ns", ",", 
                RowBox[{"i", "-", "1"}]}], "]"}], "]"}], "+", "1"}], ";;", 
            RowBox[{"Total", "[", 
             RowBox[{"Take", "[", 
              RowBox[{"ns", ",", "i"}], "]"}], "]"}]}]}], "]"}], "]"}], "=", 
        "0"}]}], "]"}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"no", " ", "edges", " ", "within", " ", "color", " ", "class"}],
       " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"AdjacencyGraph", "[", "m", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.832868213972385*^9, 3.832868222834632*^9}, {
  3.8328682634131517`*^9, 3.832868282326745*^9}, {3.8328683416073637`*^9, 
  3.8328684074818087`*^9}, {3.8328686196352*^9, 3.83286862014437*^9}, {
  3.832868660899466*^9, 3.832868835676248*^9}, {3.83286888480978*^9, 
  3.832868886755452*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"b63cbb21-cb2e-4b53-907c-003ae51b7dd2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PetfordWelshRandomGraph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "5", ",", "5"}], "}"}], ",", ".2"}], "]"}]], "Input",
 CellChangeTimes->{{3.832868841720518*^9, 3.832868850822488*^9}, {
  3.8328688933628397`*^9, 3.832868893517664*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"00eda19e-f33f-4a74-88af-795aa99492fa"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}, {Null, 
       SparseArray[
       Automatic, {15, 15}, 0, {
        1, {{0, 1, 2, 6, 8, 9, 11, 13, 15, 16, 18, 18, 21, 24, 25, 26}, {{
          13}, {13}, {6}, {8}, {10}, {12}, {6}, {12}, {9}, {3}, {4}, {14}, {
          15}, {3}, {13}, {5}, {3}, {12}, {3}, {4}, {10}, {1}, {2}, {8}, {
          7}, {7}}}, Pattern}]}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{5.282062177492912, -0.5824535146678202}, {
       5.24780617219121, -1.6945891974999423`}, {
       1.869480068948096, -1.0290244294016286`}, {
       0.29344032059597946`, -1.4443121169594721`}, {
       4.151940836805897, -2.281469838691902}, {
       1.0687216892864875`, -1.6903568695908824`}, {
       1.2927510770538397`, -2.2814698386919003`}, {
       3.221664287493194, -1.0763079660734314`}, {
       3.151940836805897, -2.281469838691902}, {
       1.3752721340297152`, -0.293440320595979}, {
       5.010441827745384, -2.281469838691902}, {
       0.9132369931672244, -0.8316530311151006}, {
       4.4963911779113515`, -1.1150264297379384`}, {
       2.2934398458664105`, -2.281469838691904}, {
       0.293440320595979, -2.281469838691904}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 13}, {2, 13}, {3, 6}, {3, 8}, {3, 10}, {3, 12}, {4, 
          6}, {4, 12}, {5, 9}, {7, 14}, {7, 15}, {8, 13}, {10, 12}}, 
          0.042983013123468417`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.042983013123468417], DiskBox[2, 0.042983013123468417], 
         DiskBox[3, 0.042983013123468417], DiskBox[4, 0.042983013123468417], 
         DiskBox[5, 0.042983013123468417], DiskBox[6, 0.042983013123468417], 
         DiskBox[7, 0.042983013123468417], DiskBox[8, 0.042983013123468417], 
         DiskBox[9, 0.042983013123468417], DiskBox[10, 0.042983013123468417], 
         DiskBox[11, 0.042983013123468417], DiskBox[12, 0.042983013123468417],
          DiskBox[13, 0.042983013123468417], 
         DiskBox[14, 0.042983013123468417], 
         DiskBox[15, 0.042983013123468417]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{
  3.8328688514521637`*^9, {3.8328688896399183`*^9, 3.8328688968611193`*^9}, 
   3.832880584564406*^9, {3.832882732341661*^9, 3.832882738698737*^9}, 
   3.833201705697421*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"b3110746-5697-4d52-9181-cbb88a25cd1d"]
}, Open  ]],

Cell["\<\
We\[CloseCurlyQuote]ll use TimeColoringCRN to attempt the coloring.  Just to \
double-check, we\[CloseCurlyQuote]ll also use VerifyColoringCRN, as well as \
ColoringSAT, to make sure the resulting coloring is valid, and that the \
generated graph is colorable.   Surprisingly, ColoringCRN can easily solve \
30-vertex problems when the number of edges is not too many, but utterly \
fails when there are many edges.\
\>", "Text",
 CellChangeTimes->CompressedData["
1:eJwd0F1Ik3EUBvA1SncxJqWtb2q5aVtZsWCNsXLri0SbFksIRsjWlqhgGcky
Aqv5CW2xtKauuUHhNOtCB5pt66WbkW1BWhlriLE0kBVNZVq5rf/zXhx+8Fwc
znN42tpzeiaDwThABroHWL9/GGNKSpmIw5J9qgQM8utoOfaB1IYbMaUiPMbM
JnJtXgG0txuEsGFisBo+5SVrYIUpmiclbrwXEkLRiO/TUeJlc3QKyt/FO2uJ
TybzH0GKqTFNtsSUXQtnWqEhsbgA7zRtWYLjB50rsHuXPUXnQtV1byu5U3Kf
9mdj2gkjdXMuyF13tR+2fTjxDM5qc2ag/00+redP220fseZ4Qw+sk37thdTm
7U44PqIv8BPNpefFkGdKy+GX1L9iaBdXlUG1m1sOHbk7dNC68p220nO6Ck6o
99ZDfvLkMByqH6aNsMcdFFEj4/dCeeHdyARxVRam1X2b5k4S/85KtkGv59JO
WDDtoL3JKxRBjdElhksKgRqeCqnK4e7DusyPxLyuNSx48f3aLMgJXMiG1dH9
fDjfmXUIWtspKRzlzMnhS0lGIywrbe6A14qMNshi6/sgMx18Tu+j+l/AZVdJ
xWf0tVgMMBwo1j42k7/JZ3QwQzZTCbtmc41QMWS5BZsH/S1w7IHgIZS+PdIH
zzZNDULTVrcHBoq8mQ7ia5GNDbmrv7hwtCq4CcYXBR3QLbvSA/V7qi0KS0z5
KrlshfNU9/pjRF86lAP/AxisnYc=
  "],
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"d7fafa0a-b250-4b03-8b74-686e5f659ca4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SatisfiableQ", "[", 
  RowBox[{"ColoringSAT", "[", 
   RowBox[{"PetfordWelshRandomGraph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"50", ",", "50", ",", "50"}], "}"}], ",", ".4"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.832869842333074*^9, 3.832869865423911*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"db715e95-0b84-4f43-bb86-54bdd33d0e23"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.8328698587354307`*^9, 3.83286986592372*^9}, 
   3.833201714454625*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"6aa7bf3c-4be0-41aa-b217-0cc23e863e0a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SatisfiableQ", "[", 
  RowBox[{"ColoringSAT", "[", 
   RowBox[{"PetfordWelshRandomGraph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"300", ",", "300", ",", "400"}], "}"}], ",", ".4"}], "]"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.832869895150186*^9, 3.832869900187825*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"0fa8675e-b038-4449-b94c-938ea9c0dace"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.832869907743224*^9, 3.833201718168784*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"cc85a3e0-dd7d-4e46-abec-97c2a739c6e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VerifyColoringCRN", "[", 
  RowBox[{
   RowBox[{"PetfordWelshRandomGraph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5", ",", "5", ",", "5"}], "}"}], ",", "0.5"}], "]"}], ",", 
   "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8328701188773203`*^9, 3.832870139318434*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"5dbf20b0-fc0e-4322-95df-a346e92b77db"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.832870136374981*^9, 3.832870139989296*^9}, 
   3.833201723690463*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"0dbe34e1-170f-4fd6-ad65-e35777857925"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VerifyColoringCRN", "[", 
  RowBox[{
   RowBox[{"PetfordWelshRandomGraph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5", ",", "5", ",", "5"}], "}"}], ",", "0.9"}], "]"}], ",", 
   "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8328701712374887`*^9, 3.832870176065887*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"31761565-56a6-4c57-8550-e696fb0e5bd1"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.832870177169752*^9, 3.8328805921632633`*^9, 
  3.8332017299145947`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"27480fc5-591f-40f5-b239-1b0e0d1fc774"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"TimeColoringCRN", "[", 
   RowBox[{
    RowBox[{"PetfordWelshRandomGraph", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"10", ",", "10", ",", "10"}], "}"}], ",", "0.2"}], "]"}], ",", 
    "3"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.832868951243626*^9, 3.832869024786838*^9}, {
  3.832870148282074*^9, 3.832870148336174*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"1a898ea3-50f3-4f9c-9aaa-6a8bf629eb7f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.049576`", ",", "2", ",", "343.4266646696991`"}], "}"}]], "Output",\

 CellChangeTimes->{3.832869042638811*^9, 3.832870017520133*^9, 
  3.8328701605265417`*^9, 3.832882746954638*^9, 3.8332017334661837`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"f654f0e7-1922-47c9-8cb4-6f0b37e21228"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"TimeColoringCRN", "[", 
   RowBox[{
    RowBox[{"PetfordWelshRandomGraph", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"10", ",", "10", ",", "10"}], "}"}], ",", "0.5"}], "]"}], ",", 
    "3"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.832870192490237*^9, 3.832870192557288*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"a00968d5-1e62-477e-876e-aea961f350d4"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.832870214178315*^9, 3.8332018322546883`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"39352188-6b3c-45ca-b2df-81efac5aaf2e"]
}, Open  ]],

Cell[TextData[{
 "Looking more closely at Petford & Welsh, we see that they consider \
different ways of randomly choosing colors when recoloring.  Specifically, \
their algorithm for 3-coloring is a CTMC such that every \
\[OpenCurlyDoubleQuote]bad\[CloseCurlyDoubleQuote] vertex has the same \
propensity for firing, and when a vertex ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]],ExpressionUUID->
  "d53ff8ad-f969-4cdb-8c0a-0c8137beb91c"],
 " fires, it chooses (perhaps unchanged) color ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]],ExpressionUUID->
  "9af61c0f-a967-4080-a15d-46ef05eb2999"],
 " with probability\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "(", 
    RowBox[{
     SubscriptBox["s", "1"], ",", 
     SubscriptBox["s", "2"], ",", 
     RowBox[{
      SubscriptBox["s", "3"], ";", " ", "c"}]}], ")"}], TraditionalForm]],
  ExpressionUUID->"cadf4a4b-f0d2-4613-959b-356568d644cc"],
 "\nwhere ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "i"], TraditionalForm]],ExpressionUUID->
  "80dd9aa2-d4fb-44df-bd87-196812b4a65e"],
 " is the number of neighbors of color ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]],ExpressionUUID->
  "497cde66-e632-4000-bc41-8750bc8c072e"],
 ".  \[OpenCurlyDoubleQuote]Bad\[CloseCurlyDoubleQuote] means that the vertex \
is in conflict with some neighbor.  They consider a few choices:\n\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"p", "(", 
     RowBox[{
      SubscriptBox["s", "1"], ",", 
      SubscriptBox["s", "2"], ",", 
      RowBox[{
       SubscriptBox["s", "3"], ";", " ", "c"}]}], ")"}], "=", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox[
        SubscriptBox["s", "c"], 
        RowBox[{
         SubscriptBox["s", "1"], "+", 
         SubscriptBox["s", "2"], "+", 
         SubscriptBox["s", "3"]}]]}], ")"}]}]}], TraditionalForm]],
  ExpressionUUID->"7a1b71d7-67d6-4db3-af5d-bd6ca1a5e616"],
 "\t\t\tThis corresponds to randomly choosing a neighbor, and coloring \
oneself any color other than that neighbor.\n\t\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"p", "(", 
      RowBox[{
       SubscriptBox["s", "1"], ",", 
       SubscriptBox["s", "2"], ",", 
       RowBox[{
        SubscriptBox["s", "3"], ";", " ", "c"}]}], ")"}], " ", "~", " ", 
     "1"}], "/", 
    SubscriptBox["s", "c"]}], TraditionalForm]],ExpressionUUID->
  "ed01194c-0a76-4b82-a62e-aa27fcdaaf06"],
 "\t\t\t\tNormalize over ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]],ExpressionUUID->
  "f19c2b7c-3f31-4f66-b027-cbc75eb0cbf2"],
 ".  They say this works poorly. [not clear what they mean if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["s", "c"], "=", "0"}], TraditionalForm]],ExpressionUUID->
  "511ea835-6f54-4325-9da7-fe105c12cc11"],
 ".  if available, always choose a color with no neighbors?]\n\t\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"p", "(", 
      RowBox[{
       SubscriptBox["s", "1"], ",", 
       SubscriptBox["s", "2"], ",", 
       RowBox[{
        SubscriptBox["s", "3"], ";", " ", "c"}]}], ")"}], " ", "~", " ", 
     "1"}], "/", 
    SubsuperscriptBox["s", "c", "2"]}], TraditionalForm]],ExpressionUUID->
  "761b9b82-4783-4c32-8a75-c6b4a917e80c"],
 "\t\t\t\tNormalize over ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]],ExpressionUUID->
  "2b05146b-5059-41a0-8a76-a3616817145f"],
 ".  They say this works poorly also. [also not clear what they mean if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["s", "c"], "=", "0"}], TraditionalForm]],ExpressionUUID->
  "2cd4f9a4-3d59-4f25-a591-b4176204177f"],
 ".]\n\t\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"p", "(", 
     RowBox[{
      SubscriptBox["s", "1"], ",", 
      SubscriptBox["s", "2"], ",", 
      RowBox[{
       SubscriptBox["s", "3"], ";", " ", "c"}]}], ")"}], " ", "~", " ", 
    SuperscriptBox["4", 
     RowBox[{"-", 
      SubscriptBox["s", "c"]}]]}], TraditionalForm]],ExpressionUUID->
  "bbe0e1dd-1bc9-4af4-b56e-e27bb83c4893"],
 "\t\t\t\t\tNormalize over ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]],ExpressionUUID->
  "1c0c2e13-75b8-4ac3-97db-d75794c54989"],
 ".  They say this works surprisingly well, observe linear-in-",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "a0c1b571-9bb9-4038-8442-78c19c8df9b6"],
 " time for random graphs of size {n/3,n/3,n/3} and p=0.5.\n\t\nOur CRN doesn\
\[CloseCurlyQuote]t do any of these exactly.   In our CRN, the reactions that \
choose and recolor vertex ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]],ExpressionUUID->
  "6b9dec70-853c-4343-b11e-f716bafb7648"],
 " have total propensity ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"k", "-", "1"}], ")"}], " ", 
    RowBox[{"b", "(", "v", ")"}]}], TraditionalForm]],ExpressionUUID->
  "9e9b8b66-3252-4f4d-b9a2-b227eae941d4"],
 " where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "(", "v", ")"}], TraditionalForm]],ExpressionUUID->
  "721315c6-5ed6-44f0-9615-0c557354f0f3"],
 " is the number of same-colored neighbors.  So unlike P&W, we recolor \
vertices with more conflicts faster than vertices with fewer conflicts.   \
However, when we recolor, we always change the color; P&W might choose the \
current color and stick with it.  But we could imaging including CRN \
reactions not just for conflicts, but also for each neighbor that is OK -- \
but these reactions do nothing.  If we also scale every reaction for vertex \
",
 Cell[BoxData[
  FormBox["v", TraditionalForm]],ExpressionUUID->
  "62ebd656-331e-467f-8c68-c9524431ee61"],
 " (whether it recolors it or not) by ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "/", "d"}], TraditionalForm]],ExpressionUUID->
  "6991325e-d114-4b45-98e7-514e9e9d015b"],
 " where ",
 Cell[BoxData[
  FormBox["d", TraditionalForm]],ExpressionUUID->
  "1e0e8266-9192-491b-a286-228cca662303"],
 " is its degree, then the total rate of reactions that change (or don\
\[CloseCurlyQuote]t change) ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]],ExpressionUUID->
  "7eb030bb-26ed-44f4-adf3-803ea8dbcf58"],
 " is the same for all ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]],ExpressionUUID->
  "0ee3ef49-c4ea-4a70-b5d5-c4154eb9efc2"],
 ".   Thus, our CRN will effectively be choosing a vertex at random, then \
choosing an edge at random, then choosing a random new color if there was a \
conflict.   This seems to correspond closely to P&W\[CloseCurlyQuote]s first \
case, but not quite: P&W allow choosing a vertex that has a conflict and an \
edge that is not a conflict, yet still flipping the color.  Ignoring such \
hypothetical changes, the actual ColoringCRN as defined above is equivalent \
to: choose a vertex in proportion to its degree, choose an edge at random, if \
the edge is a conflict then recolor with a non-conflicting color.  Still \
seems similar enough to P&W\[CloseCurlyQuote]s first case that I wouldn\
\[CloseCurlyQuote]t expect significantly different performance. \n\nP&W\
\[CloseCurlyQuote]s fourth case, which they examine extensively because it \
worked well in their hands, could be described as: \n\tchoose a vertex with a \
conflict\n\tcreate species \[OpenCurlyDoubleQuote]change to 1\
\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]change to 2\
\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]change to 3\
\[CloseCurlyDoubleQuote].\n\tfor each edge to neighbor ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]],ExpressionUUID->
  "24e43a12-8496-4877-b299-3d3653b3adcf"],
 " colored ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]],ExpressionUUID->
  "570b6e78-e1db-4a21-9669-cb98b6cb16ae"],
 ", allow reaction \[OpenCurlyDoubleQuote]neighbor ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]],ExpressionUUID->
  "4cb5cbc2-356a-45d5-8c18-7dcb299fe039"],
 "\[CloseCurlyDoubleQuote] + \[OpenCurlyDoubleQuote]change to ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]],ExpressionUUID->
  "9d597d96-f98a-411a-8f38-eed01b24cbfa"],
 "\[CloseCurlyDoubleQuote] --> \[OpenCurlyDoubleQuote]neighbor ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]],ExpressionUUID->
  "b6b61ccd-71ec-4e37-bfdc-e7830530f063"],
 "\[CloseCurlyDoubleQuote].    \n\t\tso probability that \
\[OpenCurlyDoubleQuote]change to ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]],ExpressionUUID->
  "d1fb137a-2961-41fc-ba2d-7f5a3d6b9914"],
 "\[CloseCurlyDoubleQuote] is still present after time ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "2cdf2ad8-e303-455a-ace1-c1b356184cfc"],
 " is ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["e", 
    RowBox[{
     RowBox[{"-", 
      SubscriptBox["s", "c"]}], " ", "t"}]], TraditionalForm]],ExpressionUUID->
  "fabef46e-dca6-4e8e-9d6d-8c1445b8074a"],
 ".\n\tat time ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "=", " ", 
    RowBox[{"ln", " ", "4"}]}], TraditionalForm]],ExpressionUUID->
  "2474738d-f705-458b-9606-309ef3f3be9b"],
 ", execute any change that is remaining, and clean up the others.\n\nIt \
would be interesting to design a CRN that explicitly attempts to borrow the \
principles of P&W\[CloseCurlyQuote]s fourth case, but we \
won\[CloseCurlyQuote]t do that here.\n\nInstead, we\[CloseCurlyQuote]ll \
implement P&W#4 as a direct algorithm rather than as a CRN, and try to write \
fast-to-compile code."
}], "Text",
 CellChangeTimes->{{3.821485952270832*^9, 3.821485967695526*^9}, {
   3.8214860024429073`*^9, 3.821486003566992*^9}, {3.8215741333315496`*^9, 
   3.821574165839142*^9}, {3.821574445893565*^9, 3.82157447520442*^9}, {
   3.821575005400693*^9, 3.821575015910357*^9}, {3.821650231109909*^9, 
   3.821650254423472*^9}, {3.821663917928609*^9, 3.821663935111133*^9}, {
   3.821763759556059*^9, 3.821763769244585*^9}, {3.8293084508753357`*^9, 
   3.829308482435864*^9}, {3.829309335623828*^9, 3.8293093447975473`*^9}, {
   3.8293093810059557`*^9, 3.8293094288789797`*^9}, {3.829785514442567*^9, 
   3.829785516506628*^9}, {3.829785863984488*^9, 3.829785871201521*^9}, {
   3.829785931531871*^9, 3.829785946150578*^9}, {3.829786368637072*^9, 
   3.8297863692425222`*^9}, {3.8297876603117313`*^9, 3.82978786782073*^9}, {
   3.8297879028506403`*^9, 3.8297879048780212`*^9}, {3.829789035178685*^9, 
   3.8297890746659613`*^9}, {3.829789159984879*^9, 3.829789279874859*^9}, {
   3.829789315318678*^9, 3.829789360708048*^9}, {3.829789464910598*^9, 
   3.829789471155343*^9}, {3.8297895222720222`*^9, 3.829789617354104*^9}, {
   3.829790106187151*^9, 3.829790109608239*^9}, {3.8297940383140697`*^9, 
   3.829794041132124*^9}, {3.829831396101469*^9, 3.8298313988197002`*^9}, {
   3.829831862965013*^9, 3.8298318977155733`*^9}, {3.8298319311470623`*^9, 
   3.829831932964621*^9}, {3.829832017972837*^9, 3.8298320850459423`*^9}, {
   3.829832353164179*^9, 3.829832370462558*^9}, {3.82983378710048*^9, 
   3.829833792049945*^9}, {3.8298338481501913`*^9, 3.8298338828055487`*^9}, {
   3.829834017465261*^9, 3.82983413648705*^9}, {3.8298341820169153`*^9, 
   3.8298342151892967`*^9}, {3.82983475219418*^9, 3.8298349161971817`*^9}, {
   3.829834947758966*^9, 3.8298350671577187`*^9}, {3.829835118406129*^9, 
   3.829835125304694*^9}, {3.829838594394771*^9, 3.829838644486306*^9}, {
   3.832867602368146*^9, 3.83286761500734*^9}, {3.832867655007083*^9, 
   3.832867777121777*^9}, {3.832867820490509*^9, 3.83286790195856*^9}, {
   3.832868017174283*^9, 3.832868153930813*^9}, {3.832868198735024*^9, 
   3.832868261253237*^9}, {3.832868925884006*^9, 3.832868964755218*^9}, {
   3.832869047468272*^9, 3.832869054388027*^9}, {3.832870049186028*^9, 
   3.83287010750716*^9}, {3.832870219401305*^9, 3.832870233463278*^9}, {
   3.832870273810357*^9, 3.832870298509384*^9}, {3.832870408935626*^9, 
   3.832870419461062*^9}, {3.832870490381571*^9, 3.8328705238695307`*^9}, {
   3.8328705650682364`*^9, 3.832870681286107*^9}, {3.832870717418317*^9, 
   3.832870786567616*^9}, {3.8328708360810137`*^9, 3.832870914995624*^9}, {
   3.832870972293674*^9, 3.8328709957775707`*^9}, {3.832871049530139*^9, 
   3.8328712882159357`*^9}, {3.8328713234847183`*^9, 3.832871332806266*^9}, {
   3.832871769479518*^9, 3.832871771908293*^9}, {3.8328718795312347`*^9, 
   3.832871891049597*^9}, {3.832871926377087*^9, 3.832871988604821*^9}, {
   3.832872082886394*^9, 3.8328721708902597`*^9}, {3.832872832597645*^9, 
   3.8328728492440233`*^9}, {3.832872977236492*^9, 3.832872981535408*^9}, {
   3.8328730381642733`*^9, 3.8328731124839363`*^9}, {3.8328735258619413`*^9, 
   3.832873873436863*^9}, {3.832874951654079*^9, 3.832875055996373*^9}, {
   3.8328751163847113`*^9, 3.832875142740671*^9}, {3.832875174094754*^9, 
   3.832875243224444*^9}, {3.832875292765733*^9, 3.8328755330115013`*^9}, {
   3.832875898348853*^9, 3.832875923521819*^9}, {3.832875954693151*^9, 
   3.8328761000397663`*^9}, {3.8328761564045057`*^9, 3.832876271469191*^9}, 
   3.833201839475336*^9, {3.8332018941266003`*^9, 3.833201923324648*^9}, {
   3.833201953786758*^9, 3.833202000302348*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"d6b99f1c-1d07-4724-b850-96bf2e330eb7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"G", "=", 
  RowBox[{"PetfordWelshRandomGraph", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"5", ",", "5", ",", "5"}], "}"}], ",", ".2"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.8328774565071917`*^9, 3.832877456706661*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"23b765d6-bdef-401e-8400-0b301f079a25"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}, {Null, 
       SparseArray[
       Automatic, {15, 15}, 0, {
        1, {{0, 4, 8, 10, 11, 14, 15, 19, 21, 23, 25, 28, 28, 30, 33, 36}, {{
          7}, {8}, {9}, {15}, {7}, {9}, {11}, {13}, {6}, {15}, {14}, {10}, {
          11}, {14}, {3}, {1}, {2}, {14}, {15}, {1}, {13}, {1}, {2}, {5}, {
          11}, {2}, {5}, {10}, {2}, {8}, {4}, {5}, {7}, {1}, {3}, {7}}}, 
         Pattern}]}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{3.8753288939093666`, -3.046263125244024}, {
       2.468470529458356, -3.160446078253017}, {
       5.598993806637995, -1.9174655853042486`}, {
       1.9505991622885326`, -0.5889890535633326}, {
       1.230266461859605, -1.9605000410895337`}, {
       6.476975981363894, -1.6423711800401777`}, {
       3.234453570933357, -2.3321119556899514`}, {
       3.733456760129063, -4.052249276579469}, {
       3.2043767262723644`, -3.3540695084023477`}, {
       0.5889890535633322, -2.3901840765155145`}, {
       1.3561333917963443`, -2.738262560740923}, {
       0.5889890535633325, -5.302645089902757}, {
       2.877670980633544, -4.124666982776093}, {
       2.1969110849975646`, -1.5328116114849606`}, {
       4.452155323461396, -2.2903048838885574`}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 7}, {1, 8}, {1, 9}, {1, 15}, {2, 7}, {2, 9}, {2, 11}, {
          2, 13}, {3, 6}, {3, 15}, {4, 14}, {5, 10}, {5, 11}, {5, 14}, {7, 
          14}, {7, 15}, {8, 13}, {10, 11}}, 0.047896603292017295`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.047896603292017295], DiskBox[2, 0.047896603292017295], 
         DiskBox[3, 0.047896603292017295], DiskBox[4, 0.047896603292017295], 
         DiskBox[5, 0.047896603292017295], DiskBox[6, 0.047896603292017295], 
         DiskBox[7, 0.047896603292017295], DiskBox[8, 0.047896603292017295], 
         DiskBox[9, 0.047896603292017295], DiskBox[10, 0.047896603292017295], 
         DiskBox[11, 0.047896603292017295], DiskBox[12, 0.047896603292017295],
          DiskBox[13, 0.047896603292017295], 
         DiskBox[14, 0.047896603292017295], 
         DiskBox[15, 0.047896603292017295]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{
  3.832877457964191*^9, 3.832880597021799*^9, 3.832880944636669*^9, 
   3.832882757190824*^9, {3.833201925919322*^9, 3.833201931677558*^9}, {
   3.833204040259886*^9, 3.833204042513671*^9}},
 CellLabel->"Out[46]=",ExpressionUUID->"2b2b91dc-0d03-4317-93a5-4eb8b1507740"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"PetfordWelshColoring", "[", 
   RowBox[{"G_", ",", "k_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"neighborlists", ",", "degree", ",", "paddedNL"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"neighborlists", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"AdjacencyList", "[", 
         RowBox[{"G", ",", "#"}], "]"}], "&"}], "/@", 
       RowBox[{"VertexList", "[", "G", "]"}]}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"degree", "=", 
      RowBox[{"Max", "[", 
       RowBox[{"Length", "/@", "neighborlists"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"paddedNL", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Length", "[", "#", "]"}], "}"}], ",", 
          RowBox[{"PadRight", "[", 
           RowBox[{"#", ",", "degree"}], "]"}]}], "]"}], "&"}], "/@", 
       "neighborlists"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "Mathematica", " ", "compiled", " ", "functions", " ", "cannot", " ", 
        "accept", " ", "ragged", " ", "list"}], "-", "of", "-", "lists"}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"PetfordWelshEngine", "[", 
      RowBox[{"paddedNL", ",", "k"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8328774829207478`*^9, 3.8328775700394278`*^9}, {
   3.832877711127926*^9, 3.832877877212122*^9}, {3.832880426487877*^9, 
   3.832880431038269*^9}, {3.832882630037849*^9, 3.832882630873637*^9}, 
   3.832882767679812*^9, {3.833203844083395*^9, 
   3.833203885231985*^9}},ExpressionUUID->"131bad42-6906-4d65-a8e1-\
0e4af0e682fc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PetfordWelshEngine", "=", 
  RowBox[{"Compile", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"pnl", ",", "_Integer", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "_Integer"}], "}"}]}], "}"}], ",", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n", "=", 
         RowBox[{"Length", "[", "pnl", "]"}]}], ",", 
        RowBox[{"d", "=", 
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"pnl", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", "1"}]}], ",", "c", 
        ",", "bad", ",", "numbad", ",", "i", ",", "s", ",", "j", ",", "jj", 
        ",", "v", ",", "si"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"c", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"1", ",", 
          RowBox[{"{", "n", "}"}]}], "]"}]}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"initial", " ", "colors", " ", "are", " ", "all", " ", "1"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"bad", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"1", ",", 
          RowBox[{"{", "n", "}"}]}], "]"}]}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "does", " ", "the", " ", "vertex", " ", "have", " ", "a", " ", 
          RowBox[{"conflict", "?", " ", "we"}], " ", "assume", " ", "all", 
          " ", "vertices", " ", "have", " ", "at", " ", "least", " ", "one", 
          " ", 
          RowBox[{"edge", ".", " ", "if"}], " ", "wrong"}], ",", " ", 
         RowBox[{"this", " ", "will", " ", "correct", " ", 
          RowBox[{"itself", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"numbad", "=", "n"}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"numbad", ">", "0"}], " ", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"i", "=", 
           RowBox[{"RandomInteger", "[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "n"}], "}"}], "]"}]}], ";", 
          RowBox[{"While", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"bad", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", "0"}], ",", 
            RowBox[{"i", "=", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"i", "+", "1"}], ",", "n", ",", "1"}], "]"}]}]}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"s", "=", 
           RowBox[{"Table", "[", 
            RowBox[{"0", ",", 
             RowBox[{"{", "k", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "\[LessEqual]", 
             RowBox[{"pnl", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
            RowBox[{"j", "++"}], ",", 
            RowBox[{
             RowBox[{"s", "[", 
              RowBox[{"[", 
               RowBox[{"c", "[", 
                RowBox[{"[", 
                 RowBox[{"pnl", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", 
                    RowBox[{"1", "+", "j"}]}], "]"}], "]"}], "]"}], "]"}], 
               "]"}], "]"}], "++"}]}], "]"}], ";", " ", 
          RowBox[{"(*", " ", 
           RowBox[{
           "count", " ", "how", " ", "many", " ", "neighbors", " ", "of", " ",
             "each", " ", "color"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"c", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{"RandomChoice", "[", 
            RowBox[{
             RowBox[{"4", "^", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.0"}], " ", "s"}], ")"}]}], "\[Rule]", 
             RowBox[{"Range", "[", "k", "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"si", "=", "0"}], ";", 
             RowBox[{"j", "=", "1"}]}], ",", 
            RowBox[{"j", "\[LessEqual]", 
             RowBox[{"pnl", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
            RowBox[{"j", "++"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"c", "[", 
                RowBox[{"[", 
                 RowBox[{"pnl", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", 
                    RowBox[{"1", "+", "j"}]}], "]"}], "]"}], "]"}], "]"}], 
               "\[Equal]", 
               RowBox[{"c", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ",", 
              RowBox[{"si", "++"}]}], "]"}]}], "]"}], ";", " ", 
          RowBox[{"(*", " ", 
           RowBox[{"count", " ", "number", " ", "of", " ", "conflicts"}], " ",
            "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"si", "\[Equal]", "0"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"bad", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "=", "0"}], ";", 
             RowBox[{"numbad", "--"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
          
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "\[LessEqual]", 
             RowBox[{"pnl", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
            RowBox[{"j", "++"}], ",", " ", 
            RowBox[{"(*", " ", 
             RowBox[{
             "now", " ", "update", " ", "badness", " ", "state", " ", "of", 
              " ", "neighbors"}], " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"v", "=", 
              RowBox[{"pnl", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", 
                 RowBox[{"1", "+", "j"}]}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"bad", "[", 
                 RowBox[{"[", "v", "]"}], "]"}], "\[Equal]", "1"}], ",", 
               RowBox[{"numbad", "--"}]}], "]"}], ";", 
             RowBox[{
              RowBox[{"bad", "[", 
               RowBox[{"[", "v", "]"}], "]"}], "=", "0"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"si", "=", "0"}], ";", 
                RowBox[{"jj", "=", "1"}]}], ",", 
               RowBox[{"jj", "\[LessEqual]", 
                RowBox[{"pnl", "[", 
                 RowBox[{"[", 
                  RowBox[{"v", ",", "1"}], "]"}], "]"}]}], ",", 
               RowBox[{"jj", "++"}], ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"c", "[", 
                   RowBox[{"[", 
                    RowBox[{"pnl", "[", 
                    RowBox[{"[", 
                    RowBox[{"v", ",", 
                    RowBox[{"1", "+", "jj"}]}], "]"}], "]"}], "]"}], "]"}], 
                  "\[Equal]", 
                  RowBox[{"c", "[", 
                   RowBox[{"[", "v", "]"}], "]"}]}], ",", 
                 RowBox[{"si", "++"}]}], "]"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"si", ">", "0"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"bad", "[", 
                  RowBox[{"[", "v", "]"}], "]"}], "=", "1"}], ";", 
                RowBox[{"numbad", "++"}]}]}], "]"}]}]}], 
           "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", "c"}]}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQvUNsAe+ivjeOztb7RUB0hPB8GRDtpX1HHkT7zXli
AqJ7Z3wD0ynszelg8U+VOSD6AKdvAYi2yWPrBNHyegG2i4G0iexmFxA9haMk
GkSf3Xs4BkR/CJqSAKJf1rnlgegwLt9aEH3jyNmFIJqB594KEL1Lr3ATiK7O
PPYGRGc/YfwEole4e/8E0SFW/X9BdJbqRq4lQHptToMAiLa5aBcNov9N4y4D
0THfPswD0bHx+5aB6Os53ZvB8k+3bAfRySu094DoXVcLwXRWxLSLILqr9BCY
rl64aKZj/xtHA/mAuSAaAB26pNc=
  "],
 CellLabel->"In[43]:=",ExpressionUUID->"0bee7547-20cc-4714-be27-f6701ab6c659"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  StyleBox[
                   PaneBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "2"}], "}"}], ",", "_Integer"}], 
                    "}"}], ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                   False], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "2"}], "}"}], ",", "_Integer"}], 
                    "}"}], ImageSize -> {{1, 500}, Automatic}, 
                   BaselinePosition -> Baseline, ContentPadding -> False, 
                   FrameMargins -> 0, StripOnInput -> True], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"pnl", ",", "k"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"n", "=", 
                    RowBox[{"Length", "[", "pnl", "]"}]}], ",", 
                    RowBox[{"d", "=", 
                    RowBox[{
                    RowBox[{"Length", "[", 
                    
                    RowBox[{"pnl", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}], "-", "1"}]}], ",", "c", 
                    ",", "bad", ",", "numbad", ",", "i", ",", "s", ",", "j", 
                    ",", "jj", ",", "v", ",", "si"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"c", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{"1", ",", 
                    RowBox[{"{", "n", "}"}]}], "]"}]}], ";", 
                    RowBox[{"bad", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{"1", ",", 
                    RowBox[{"{", "n", "}"}]}], "]"}]}], ";", 
                    RowBox[{"numbad", "=", "n"}], ";", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{"numbad", ">", "0"}], ",", 
                    RowBox[{
                    RowBox[{"i", "=", 
                    RowBox[{"RandomInteger", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "n"}], "}"}], "]"}]}], ";", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"bad", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "0"}], ",", 
                    RowBox[{"i", "=", 
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"i", "+", "1"}], ",", "n", ",", "1"}], "]"}]}]}], 
                    "]"}], ";", 
                    RowBox[{"s", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"{", "k", "}"}]}], "]"}]}], ";", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"j", "=", "1"}], ",", 
                    RowBox[{"j", "\[LessEqual]", 
                    RowBox[{"pnl", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"j", "++"}], ",", 
                    RowBox[{
                    RowBox[{"s", "\[LeftDoubleBracket]", 
                    RowBox[{"c", "\[LeftDoubleBracket]", 
                    RowBox[{"pnl", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", 
                    RowBox[{"1", "+", "j"}]}], "\[RightDoubleBracket]"}], 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], 
                    "++"}]}], "]"}], ";", 
                    RowBox[{
                    
                    RowBox[{"c", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"RandomChoice", "[", 
                    RowBox[{
                    SuperscriptBox["4", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], " ", "s"}]], "\[Rule]", 
                    RowBox[{"Range", "[", "k", "]"}]}], "]"}]}], ";", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"si", "=", "0"}], ";", 
                    RowBox[{"j", "=", "1"}]}], ",", 
                    RowBox[{"j", "\[LessEqual]", 
                    RowBox[{"pnl", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"j", "++"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"c", "\[LeftDoubleBracket]", 
                    RowBox[{"pnl", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", 
                    RowBox[{"1", "+", "j"}]}], "\[RightDoubleBracket]"}], 
                    "\[RightDoubleBracket]"}], "\[Equal]", 
                    
                    RowBox[{"c", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"si", "++"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"si", "\[Equal]", "0"}], ",", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"bad", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "=", "0"}], ";", 
                    RowBox[{"numbad", "--"}]}]}], "]"}], ";", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"j", "=", "1"}], ",", 
                    RowBox[{"j", "\[LessEqual]", 
                    RowBox[{"pnl", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"j", "++"}], ",", 
                    RowBox[{
                    RowBox[{"v", "=", 
                    RowBox[{"pnl", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", 
                    RowBox[{"1", "+", "j"}]}], "\[RightDoubleBracket]"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"bad", "\[LeftDoubleBracket]", "v", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "1"}], ",", 
                    RowBox[{"numbad", "--"}]}], "]"}], ";", 
                    RowBox[{
                    
                    RowBox[{"bad", "\[LeftDoubleBracket]", "v", 
                    "\[RightDoubleBracket]"}], "=", "0"}], ";", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"si", "=", "0"}], ";", 
                    RowBox[{"jj", "=", "1"}]}], ",", 
                    RowBox[{"jj", "\[LessEqual]", 
                    RowBox[{"pnl", "\[LeftDoubleBracket]", 
                    RowBox[{"v", ",", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"jj", "++"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"c", "\[LeftDoubleBracket]", 
                    RowBox[{"pnl", "\[LeftDoubleBracket]", 
                    RowBox[{"v", ",", 
                    RowBox[{"1", "+", "jj"}]}], "\[RightDoubleBracket]"}], 
                    "\[RightDoubleBracket]"}], "\[Equal]", 
                    
                    RowBox[{"c", "\[LeftDoubleBracket]", "v", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"si", "++"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"si", ">", "0"}], ",", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"bad", "\[LeftDoubleBracket]", "v", 
                    "\[RightDoubleBracket]"}], "=", "1"}], ";", 
                    RowBox[{"numbad", "++"}]}]}], "]"}]}]}], "]"}]}]}], "]"}],
                     ";", "c"}]}], "]"}], ImageSize -> {{1, 500}, Automatic}, 
                   BaselinePosition -> Baseline, ContentPadding -> False, 
                   FrameMargins -> 0, StripOnInput -> True], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledFunction[{11, 12.2, 5720}, {{
     Blank[Integer], 2}, 
    Blank[Integer]}, {{2, 2, 0}, {2, 0, 0}, {2, 1, 
   3}}, {{0, {2, 0, 7}}, {4, {2, 0, 13}}, {-1., {3, 0, 0}}, {-1, {2, 0, 4}}, {
    1, {2, 0, 2}}}, {4, 18, 1, 0, 
   7}, {{33, 0, 9}, {38, 0, 0, 2, 1, 3}, {33, 3, 6}, {12, 6, 4, 6}, {6, 9, 
    5}, {6, 7, 1}, {35, 5, 2, 3}, {6, 7, 3}, {3, 2}, {36, 1, 2, 2, 3}, {4, 3, 
    5, -1}, {6, 9, 1}, {6, 7, 5}, {35, 1, 2, 2}, {6, 7, 3}, {3, 2}, {36, 5, 2,
     2, 2}, {4, 3, 1, -1}, {6, 9, 5}, {25, 7, 5, 0}, {2, 0, 120}, {
    42, "RandomInteger", 2, 0, 2, 2, 0, 9, 2, 0, 3}, {38, 2, 0, 3, 0, 1}, {24,
     1, 7, 1}, {2, 1, 10}, {12, 3, 2, 10}, {6, 9, 11}, {12, 10, 4, 12}, {41, 
    262, 2, 0, 12, 2, 0, 11, 2, 0, 8}, {15, 11, 8, 12}, {18, 12, 8}, {12, 10, 
    8, 12}, {6, 12, 3}, {3, -11}, {6, 0, 12}, {6, 7, 11}, {35, 12, 2, 5}, {6, 
    7, 1}, {3, 2}, {36, 11, 7, 2, 5}, {4, 1, 12, -1}, {6, 2, 11}, {38, 0, 0, 
    3, 0, 2, 0, 1}, {26, 11, 1, 1}, {2, 1, 14}, {12, 2, 11, 12}, {38, 0, 0, 3,
     0, 12, 0, 10}, {38, 3, 0, 10, 0, 12}, {38, 5, 0, 12, 0, 10}, {12, 2, 11, 
    12}, {38, 0, 0, 3, 0, 12, 0, 8}, {38, 3, 0, 8, 0, 12}, {12, 10, 2, 8}, {
    39, 5, 0, 12, 0, 8}, {6, 11, 1}, {12, 1, 2, 12}, {6, 12, 11}, {3, -15}, {
    41, 259, 3, 0, 0, 2, 1, 5, 3, 1, 4}, {41, 263, 2, 0, 13, 3, 1, 4, 3, 1, 
    6}, {6, 0, 1}, {6, 7, 10}, {35, 1, 2, 4}, {6, 7, 8}, {3, 2}, {36, 10, 8, 
    2, 4}, {4, 8, 1, -1}, {
    42, "RandomChoiceWeights", 2, 1, 4, 3, 1, 6, 2, 0, 10}, {39, 3, 0, 3, 0, 
    10}, {6, 7, 1}, {6, 2, 11}, {38, 0, 0, 3, 0, 2, 0, 8}, {26, 11, 8, 1}, {2,
     1, 15}, {12, 2, 11, 12}, {38, 0, 0, 3, 0, 12, 0, 14}, {38, 3, 0, 14, 0, 
    12}, {38, 3, 0, 3, 0, 14}, {24, 12, 14, 2}, {2, 2, 5}, {6, 1, 12}, {12, 
    12, 2, 14}, {6, 14, 1}, {3, 1}, {6, 11, 8}, {12, 8, 2, 12}, {6, 12, 11}, {
    3, -16}, {24, 1, 7, 1}, {2, 1, 6}, {39, 2, 0, 3, 0, 7}, {6, 5, 8}, {41, 
    258, 2, 0, 8, 2, 0, 2, 2, 0, 12}, {6, 12, 5}, {3, 1}, {6, 2, 11}, {38, 0, 
    0, 3, 0, 2, 0, 8}, {26, 11, 8, 1}, {2, 1, 41}, {12, 2, 11, 12}, {38, 0, 0,
     3, 0, 12, 0, 14}, {38, 2, 0, 14, 0, 12}, {24, 12, 2, 2}, {2, 2, 5}, {6, 
    5, 12}, {41, 258, 2, 0, 12, 2, 0, 2, 2, 0, 15}, {6, 15, 5}, {3, 1}, {39, 
    2, 0, 14, 0, 7}, {6, 7, 1}, {6, 2, 12}, {38, 0, 0, 14, 0, 2, 0, 15}, {26, 
    12, 15, 2}, {2, 2, 15}, {12, 2, 12, 16}, {38, 0, 0, 14, 0, 16, 0, 17}, {
    38, 3, 0, 17, 0, 16}, {38, 3, 0, 14, 0, 17}, {24, 16, 17, 3}, {2, 3, 5}, {
    6, 1, 16}, {12, 16, 2, 17}, {6, 17, 1}, {3, 1}, {6, 12, 15}, {12, 15, 2, 
    16}, {6, 16, 12}, {3, -16}, {25, 7, 1, 2}, {2, 2, 6}, {39, 2, 0, 14, 0, 
    2}, {6, 5, 15}, {12, 15, 2, 16}, {6, 16, 5}, {3, 1}, {6, 11, 8}, {12, 8, 
    2, 12}, {6, 12, 11}, {3, -42}, {3, -120}, {1}}, 
   Function[{$CellContext`pnl, $CellContext`k}, 
    Module[{$CellContext`n = Length[$CellContext`pnl], $CellContext`d = Length[
         Part[$CellContext`pnl, 1]] - 
       1, $CellContext`c, $CellContext`bad, $CellContext`numbad, \
$CellContext`i, $CellContext`s, $CellContext`j, $CellContext`jj, \
$CellContext`v, $CellContext`si}, $CellContext`c = 
      Table[1, {$CellContext`n}]; $CellContext`bad = 
      Table[1, {$CellContext`n}]; $CellContext`numbad = $CellContext`n; 
     While[$CellContext`numbad > 
       0, $CellContext`i = RandomInteger[{1, $CellContext`n}]; 
       While[Part[$CellContext`bad, $CellContext`i] == 0, $CellContext`i = 
         Mod[$CellContext`i + 1, $CellContext`n, 1]]; $CellContext`s = 
        Table[0, {$CellContext`k}]; 
       For[$CellContext`j = 1, $CellContext`j <= 
         Part[$CellContext`pnl, $CellContext`i, 1], 
         Increment[$CellContext`j], 
         Increment[
          Part[$CellContext`s, 
           Part[$CellContext`c, 
            Part[$CellContext`pnl, $CellContext`i, 1 + $CellContext`j]]]]]; 
       Part[$CellContext`c, $CellContext`i] = 
        RandomChoice[4^(-$CellContext`s) -> Range[$CellContext`k]]; 
       For[$CellContext`si = 0; $CellContext`j = 1, $CellContext`j <= 
         Part[$CellContext`pnl, $CellContext`i, 1], 
         Increment[$CellContext`j], 
         If[Part[$CellContext`c, 
            Part[$CellContext`pnl, $CellContext`i, 1 + $CellContext`j]] == 
          Part[$CellContext`c, $CellContext`i], 
          Increment[$CellContext`si]]]; 
       If[$CellContext`si == 0, Part[$CellContext`bad, $CellContext`i] = 0; 
         Decrement[$CellContext`numbad]]; 
       For[$CellContext`j = 1, $CellContext`j <= 
         Part[$CellContext`pnl, $CellContext`i, 1], 
         Increment[$CellContext`j], $CellContext`v = 
          Part[$CellContext`pnl, $CellContext`i, 1 + $CellContext`j]; 
         If[Part[$CellContext`bad, $CellContext`v] == 1, 
           Decrement[$CellContext`numbad]]; 
         Part[$CellContext`bad, $CellContext`v] = 0; 
         For[$CellContext`si = 0; $CellContext`jj = 1, $CellContext`jj <= 
           Part[$CellContext`pnl, $CellContext`v, 1], 
           Increment[$CellContext`jj], 
           If[Part[$CellContext`c, 
              Part[$CellContext`pnl, $CellContext`v, 1 + $CellContext`jj]] == 
            Part[$CellContext`c, $CellContext`v], 
            Increment[$CellContext`si]]]; 
         If[$CellContext`si > 0, Part[$CellContext`bad, $CellContext`v] = 1; 
           Increment[$CellContext`numbad]]]]; $CellContext`c]], Evaluate, 
   LibraryFunction[
   "/Users/winfree/Library/Mathematica/ApplicationData/CCompilerDriver/\
BuildFolder/EriksMBlame2018-28367/compiledFunction7.dylib", 
    "compiledFunction7", {{Integer, 2, "Constant"}, {
     Integer, 0, "Constant"}}, {Integer, 1}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.832880375023875*^9, 3.8328803990840187`*^9}, 
   3.8328804595612793`*^9, 3.832880608199822*^9, 3.832881133728796*^9, {
   3.8328812456854353`*^9, 3.832881285121037*^9}, 3.832882109547081*^9, 
   3.832882466314341*^9, 3.832882504245315*^9, {3.832882593878344*^9, 
   3.832882622644779*^9}, 3.832882662736021*^9, 3.832882860123255*^9, 
   3.833201949778078*^9, 3.833203984900516*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"5e1fac26-f98e-42e6-b594-b4ab5676b3b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "=", 
  RowBox[{"PetfordWelshColoring", "[", 
   RowBox[{"G", ",", "3"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.832880400838378*^9, 3.832880410492731*^9}, {
  3.8328821565481653`*^9, 3.832882156645565*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"0593190c-865f-4b7b-bf0b-661ef3159cb1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "1", ",", "3", ",", "1", ",", "1", ",", "1", ",", "3", ",", "1", 
   ",", "3", ",", "2", ",", "3", ",", "1", ",", "3", ",", "2", ",", "1"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.832880622783774*^9, {3.832880675783866*^9, 3.832880682229615*^9}, 
   3.8328809492098093`*^9, 3.8328811371525*^9, {3.832881249679316*^9, 
   3.832881287061385*^9}, 3.832882112318286*^9, {3.832882157999292*^9, 
   3.832882182901421*^9}, 3.8328825074683437`*^9, {3.832882596316235*^9, 
   3.832882665338422*^9}, 3.832882862242906*^9, 3.833202005710245*^9, {
   3.8332040356070127`*^9, 3.833204046385482*^9}},
 CellLabel->"Out[47]=",ExpressionUUID->"18607abe-50dd-4c06-83c6-22844bd21510"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"VerifyColoring", "[", 
   RowBox[{"G_", ",", "k_", ",", "c_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Not", "[", 
    RowBox[{"AnyTrue", "[", 
     RowBox[{
      RowBox[{"EdgeList", "[", "G", "]"}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"c", "[", 
          RowBox[{"[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "\[Equal]", 
         RowBox[{"c", "[", 
          RowBox[{"[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}], ")"}], "&"}]}], 
     "]"}], "]"}], "&&", 
   RowBox[{
    RowBox[{"Min", "[", "c", "]"}], "\[GreaterEqual]", "1"}], "&&", 
   RowBox[{
    RowBox[{"Max", "[", "c", "]"}], "\[LessEqual]", "k"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8298820585140467`*^9, 3.829882135933886*^9}, {
   3.82988217057253*^9, 3.8298821825113907`*^9}, {3.830699836185714*^9, 
   3.83069987226506*^9}, {3.830706727193357*^9, 3.8307067352567387`*^9}, {
   3.830721992212474*^9, 3.83072199265446*^9}, {3.830722028757256*^9, 
   3.830722029127385*^9}, {3.8313892587940407`*^9, 3.831389262847146*^9}, {
   3.831393931630733*^9, 3.8313939452475977`*^9}, 3.831394053575947*^9, {
   3.831395056810964*^9, 3.8313950600471983`*^9}, {3.8314018219927187`*^9, 
   3.8314018287490473`*^9}, {3.8314031213189487`*^9, 3.831403186118978*^9}, {
   3.8314039262394953`*^9, 3.8314039390957212`*^9}, {3.831430151744495*^9, 
   3.8314301661369753`*^9}, {3.831430537752088*^9, 3.831430544517885*^9}, {
   3.83143185261271*^9, 3.8314318836485987`*^9}, {3.831431921702321*^9, 
   3.831431956391135*^9}, {3.831433823432598*^9, 3.831433849935893*^9}, {
   3.831433886561181*^9, 3.831433949446246*^9}, {3.831434006152587*^9, 
   3.831434127686791*^9}, {3.831434175305982*^9, 3.831434241860962*^9}, 
   3.8314843650598993`*^9, {3.831733629218012*^9, 3.831733638731639*^9}, {
   3.831753142686718*^9, 3.831753146231378*^9}, {3.832869087537986*^9, 
   3.832869102567018*^9}, {3.8328806902412777`*^9, 3.8328809142265177`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"740d3dec-ddb2-491f-ab15-c2793d0a1780"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VerifyColoring", "[", 
  RowBox[{"G", ",", "3", ",", 
   RowBox[{"c", "=", 
    RowBox[{"PetfordWelshColoring", "[", 
     RowBox[{"G", ",", "3"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.832880919364767*^9, 3.83288092751088*^9}, 
   3.832882163052059*^9, {3.832882675852686*^9, 3.8328826759857473`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"de6f8fc6-e72c-4caf-a020-49ae3598cbf3"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.8328809282042437`*^9, 3.8328809546474257`*^9}, 
   3.832881356138832*^9, 3.832882117615328*^9, {3.832882163381806*^9, 
   3.832882188176042*^9}, 3.83288251553153*^9, 3.832882599203649*^9, {
   3.832882638484949*^9, 3.83288267755793*^9}, {3.832882865197833*^9, 
   3.832882877507431*^9}, 3.8332020144849854`*^9, 3.833204064617261*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"33a31a37-3d14-4ba4-a81f-78038ab89047"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"G", ",", 
   RowBox[{"VertexLabels", "\[Rule]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"i", "\[Rule]", 
       RowBox[{"c", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"VertexList", "[", "G", "]"}]}], "}"}]}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.832882144638269*^9, 3.832882150106488*^9}, {
  3.832882190343561*^9, 3.832882251742139*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"b8fec741-9b05-4236-b766-4857c73470cb"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}, {Null, 
       SparseArray[
       Automatic, {15, 15}, 0, {
        1, {{0, 4, 8, 10, 11, 14, 15, 19, 21, 23, 25, 28, 28, 30, 33, 36}, {{
          7}, {8}, {9}, {15}, {7}, {9}, {11}, {13}, {6}, {15}, {14}, {10}, {
          11}, {14}, {3}, {1}, {2}, {14}, {15}, {1}, {13}, {1}, {2}, {5}, {
          11}, {2}, {5}, {10}, {2}, {8}, {4}, {5}, {7}, {1}, {3}, {7}}}, 
         Pattern}]}, {
      GraphLayout -> {"Dimension" -> 2}, 
       VertexLabels -> {
        6 -> 1, 3 -> 3, 11 -> 3, 5 -> 1, 8 -> 1, 7 -> 3, 14 -> 2, 10 -> 2, 9 -> 
         3, 4 -> 1, 12 -> 1, 13 -> 3, 2 -> 1, 15 -> 1, 1 -> 2}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
        ArrowBox[CompressedData["
1:eJxTTMoPSmVmYGAQAmImKLZam5K/hoHfob6i33h/HMeBZdvmGGo+4HSwSVEK
0FrBdABdvsvt3WS5e7wO3DNmXG0wFcCQ57e67TxhEadD06kfKUpXuTDk615J
n2M8L+jAHfsxtjuI6cAeP8mq3P3MDgyfxL5M9+DEsB9dHt18dHn9spy3OzZ9
tV/yaaLxt+esGPLaBz/HVLCyOzitmL55Rb3AAWXBFwvjUsUcYlIPpnxY+2//
w73OKTkvJB1uLV3EoO7+az+6PLr776rOKl9u+t/exzRi0v8bj/bXuBXJuU1m
dGiTeVKe2vZj/4zrGx5pr/9s7zWlxcs07v9+D4g6+1N5Dlck5JkPoMujux9d
Ht189PAiJI/ufvT4RA8fdPeiuw8A7OkLxg==
         "], 0.047896603292017295`]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{3.8753288939093666, -3.046263125244024}, 
          0.047896603292017295], 
         InsetBox["2", 
          Offset[{2, 2}, {3.923225497201384, -2.998366521952007}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.468470529458356, -3.160446078253017}, 
          0.047896603292017295], 
         InsetBox["1", 
          Offset[{2, 2}, {2.5163671327503736, -3.1125494749609994}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.598993806637995, -1.9174655853042486}, 
          0.047896603292017295], 
         InsetBox["3", 
          Offset[{2, 2}, {5.646890409930012, -1.8695689820122312}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.9505991622885326, -0.5889890535633326}, 
          0.047896603292017295], 
         InsetBox["1", 
          Offset[{2, 2}, {1.99849576558055, -0.5410924502713154}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.230266461859605, -1.9605000410895337}, 
          0.047896603292017295], 
         InsetBox["1", 
          Offset[{2, 2}, {1.2781630651516225, -1.9126034377975163}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.476975981363894, -1.6423711800401777}, 
          0.047896603292017295], 
         InsetBox["1", 
          Offset[{2, 2}, {6.524872584655911, -1.5944745767481603}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.234453570933357, -2.3321119556899514}, 
          0.047896603292017295], 
         InsetBox["3", 
          Offset[{2, 2}, {3.2823501742253742, -2.284215352397934}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.733456760129063, -4.052249276579469}, 
          0.047896603292017295], 
         InsetBox["1", 
          Offset[{2, 2}, {3.7813533634210805, -4.004352673287452}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.2043767262723644, -3.3540695084023477}, 
          0.047896603292017295], 
         InsetBox["3", 
          Offset[{2, 2}, {3.2522733295643818, -3.3061729051103304}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5889890535633322, -2.3901840765155145}, 
          0.047896603292017295], 
         InsetBox["2", 
          Offset[{2, 2}, {0.6368856568553495, -2.342287473223497}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.3561333917963443, -2.738262560740923}, 
          0.047896603292017295], 
         InsetBox["3", 
          Offset[{2, 2}, {1.4040299950883617, -2.6903659574489054}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5889890535633325, -5.302645089902757}, 
          0.047896603292017295], 
         InsetBox["1", 
          Offset[{2, 2}, {0.6368856568553498, -5.25474848661074}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.877670980633544, -4.124666982776093}, 
          0.047896603292017295], 
         InsetBox["3", 
          Offset[{2, 2}, {2.9255675839255613, -4.076770379484076}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.1969110849975646, -1.5328116114849606}, 
          0.047896603292017295], 
         InsetBox["2", 
          Offset[{2, 2}, {2.244807688289582, -1.4849150081929432}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.452155323461396, -2.2903048838885574}, 
          0.047896603292017295], 
         InsetBox["1", Offset[{2, 2}, {4.500051926753413, -2.24240828059654}],
           ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.832882191071254*^9, 3.832882252091577*^9, 
  3.832882603536063*^9, 3.832882645724901*^9, 3.832882680075526*^9, 
  3.832882880888468*^9, 3.832882981250163*^9, 3.833202018092143*^9, 
  3.8332040523209887`*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"78c5f6f7-a9a0-434d-adc2-11ef3cdacc39"]
}, Open  ]],

Cell["\<\
Now let\[CloseCurlyQuote]s see whether our P&W#4 algorithm runs efficiently \
enough to solve large coloring problems -- e.g. up to 1000 vertices -- as the \
paper reports.   No problem.  So then, we should be able to roughly reproduce \
the figures from that paper.\
\>", "Text",
 CellChangeTimes->{{3.833202034585759*^9, 3.8332020718153477`*^9}, {
  3.833202104124597*^9, 3.8332021060457373`*^9}, {3.833202178200992*^9, 
  3.833202194278248*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"0126d238-3177-4efa-a2d1-721e8394c13c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n3", "=", "500"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{"PetfordWelshRandomGraph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n3", ",", "n3", ",", "n3"}], "}"}], ",", ".2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "=", 
   RowBox[{"PetfordWelshColoring", "[", 
    RowBox[{"G", ",", "3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"VerifyColoring", "[", 
  RowBox[{"G", ",", "3", ",", "c"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8328829055105658`*^9, 3.832883003305521*^9}, {
  3.833202110662311*^9, 3.83320211125359*^9}, {3.833202162545597*^9, 
  3.83320216267983*^9}},ExpressionUUID->"52b5ff38-9261-46ca-bfdc-\
6ff68aea3625"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.832882957604002*^9, 3.8328830098477497`*^9}, 
   3.833202095856618*^9, 3.833202156112527*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"0a41ab3a-23aa-48f4-ab3c-1c547e222d0c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"PWtime", "[", 
   RowBox[{"n_", ",", "p_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"G", ",", "c", ",", "t", ",", 
      RowBox[{"n3", "=", 
       RowBox[{"Round", "[", 
        RowBox[{"n", "/", "3"}], "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"G", "=", 
      RowBox[{"PetfordWelshRandomGraph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n3", ",", "n3", ",", "n3"}], "}"}], ",", "p"}], "]"}]}], 
     ";", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<f=\>\"", ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"EdgeCount", "[", "G", "]"}], "/", 
           RowBox[{"VertexCount", "[", "G", "]"}]}], "]"}]}], "]"}], ";"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", "c"}], "}"}], "=", 
      RowBox[{"Timing", "[", 
       RowBox[{"PetfordWelshColoring", "[", 
        RowBox[{"G", ",", "3"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{"VerifyColoring", "[", 
         RowBox[{"G", ",", "3", ",", "c"}], "]"}], "]"}], ",", 
       RowBox[{"Print", "[", "\"\<Miscolored\>\"", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "t"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.832883800408869*^9, 3.832883956942649*^9}, {
  3.832940766437525*^9, 3.8329407945024853`*^9}, {3.832940844850543*^9, 
  3.832940846259369*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"de12b9dc-82f9-4565-ad35-fa8e2ac4e2eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fig1a", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Print", "[", "#", "]"}], ";", "#"}], ")"}], "&"}], "@", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"Mean", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"PWtime", "[", 
            RowBox[{"n", ",", "0.5"}], "]"}], ",", "100"}], "]"}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"{", 
        RowBox[{"60", ",", "120", ",", "180", ",", "240", ",", "300"}], 
        "}"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.832883778714714*^9, 3.83288378427599*^9}, {
  3.832883962823683*^9, 3.832884075517902*^9}, {3.832884143397628*^9, 
  3.832884192898988*^9}, {3.8328846764206247`*^9, 3.832884676494762*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"2c6cff34-9464-4c2f-8364-1987b5fb1f6d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fig1b", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Print", "[", "#", "]"}], ";", "#"}], ")"}], "&"}], "@", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"Mean", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"PWtime", "[", 
            RowBox[{"n", ",", "0.9"}], "]"}], ",", "100"}], "]"}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"{", 
        RowBox[{"60", ",", "120", ",", "180", ",", "240", ",", "300"}], 
        "}"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.832883778714714*^9, 3.83288378427599*^9}, {
  3.832883962823683*^9, 3.832884075517902*^9}, {3.832884143397628*^9, 
  3.832884214297517*^9}, {3.832884685241392*^9, 3.832884685325231*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"502bf88c-868d-48a4-863c-c4655eab5e21"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fig1c", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Print", "[", "#", "]"}], ";", "#"}], ")"}], "&"}], "@", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"Mean", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"PWtime", "[", 
            RowBox[{"n", ",", "0.3"}], "]"}], ",", "100"}], "]"}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"{", 
        RowBox[{"60", ",", "120", ",", "180", ",", "240", ",", "300"}], 
        "}"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.832883778714714*^9, 3.83288378427599*^9}, {
  3.832883962823683*^9, 3.832884075517902*^9}, {3.832884143397628*^9, 
  3.832884192898988*^9}, {3.832884224757967*^9, 3.832884227591058*^9}, {
  3.832884688433947*^9, 3.832884688526363*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"1d404312-ab2a-42a0-b8d2-d2f99fd44715"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Fig1a", ",", "Fig1b", ",", "Fig1c"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Green", ",", "Blue"}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "10"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<p=0.5\>\"", ",", "\"\<p=0.9\>\"", ",", "\"\<p=0.3\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8328842399640102`*^9, 3.832884296326707*^9}, {
  3.83288454437894*^9, 3.832884629209278*^9}, {3.832884690922515*^9, 
  3.8328847236755123`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"130651ea-2460-4ccd-a335-cc0527ebbb10"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[{{60., -6.300291266962226}, {120., -4.461638835028993}, {
         180., -3.2760339151787905`}, {240., -2.3664982097377205`}, {
         300., -0.3088208776361723}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0]], 
        LineBox[{{60., -5.543167306161984}, {120., -3.405542508065974}, {
         180., -2.1642065418460428`}, {240., -1.2473038814629775`}, {300., 
         0.10178070075956816`}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        LineBox[{{60., -6.460687681019459}, {120., -5.0682903606595175`}, {
         180., -4.087740417670421}, {240., -3.2684915797438725`}, {
         300., -1.2236166202333116`}}]}}, {{
        Directive[
         PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               DiskBox[{0, 0}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.012833333333333334`], 
                 AbsoluteThickness[1.6], 
                 RGBColor[1, 0, 0]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[10]], {{{60., -6.300291266962226}}, {{
         120., -4.461638835028993}}, {{180., -3.2760339151787905`}}, {{
         240., -2.3664982097377205`}}, {{300., -0.3088208776361723}}}]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.012833333333333334`], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 1, 0]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[10]], {{{60., -5.543167306161984}}, {{
         120., -3.405542508065974}}, {{180., -2.1642065418460428`}}, {{
         240., -1.2473038814629775`}}, {{300., 0.10178070075956816`}}}]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.012833333333333334`], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 0, 1]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[10]], {{{60., -6.460687681019459}}, {{
         120., -5.0682903606595175`}}, {{180., -4.087740417670421}}, {{
         240., -3.2684915797438725`}}, {{
         300., -1.2236166202333116`}}}]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {55., -6.974238074097746}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {
       Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{55., 300.}, {-6.974238074097746, 0.10178070075956816`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, 
       Charting`ScaledTicks[{Log, Exp}]}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"p=0.5\"", "\"p=0.9\"", "\"p=0.3\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "10", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], ",", 
                    RowBox[{"Offset", "[", "10", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], ",", 
                    RowBox[{"Offset", "[", "10", "]"}]}], "}"}]}], "}"}]}], 
           ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8328844562874203`*^9, {3.832884548495399*^9, 3.832884566411509*^9}, {
   3.832884620444737*^9, 3.8328846297865562`*^9}, {3.832884903119203*^9, 
   3.832884903324607*^9}, 3.833202447691029*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"98531fee-2086-4790-bce6-a5a8cfc1084c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fig2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Print", "[", "#", "]"}], ";", "#"}], ")"}], "&"}], "@", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"Mean", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"PWtime", "[", 
            RowBox[{"n", ",", "0.5"}], "]"}], ",", "10"}], "]"}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"60", ",", "900", ",", "60"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.83288479727699*^9, 3.832884797497368*^9}, 
   3.8328848279231377`*^9, {3.832884866130023*^9, 3.8328848963530416`*^9}, {
   3.83288494815847*^9, 3.832884958526462*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"851b3d3c-2f96-4bf8-b54e-ee1e53e95942"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", " ", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"Fig2", ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "10"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<p=0.5\>\"", "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{"1", "/", "3"}], ")"}]}]}], "}"}], "&"}], "/@", "Fig2"}], 
     ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "10"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<p=0.5\>\"", "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<cube root of time\>\""}]}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"Log", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
      "Fig2"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "10"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<p=0.5\>\"", "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<log of time\>\""}]}], "]"}]}], " ", 
  "}"}]], "Input",
 CellChangeTimes->{{3.832885547298768*^9, 3.832885595336873*^9}, {
  3.832885635280251*^9, 3.832885704985403*^9}, {3.8328884557238693`*^9, 
  3.832888476775813*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"9b218be6-45da-4beb-9bca-57dfbc62ebcf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          
          LineBox[{{60., 0.0021454}, {120., 0.0110103}, {180., 0.0389181}, {
           240., 0.08771530000000001}, {300., 0.7297189000000001}, {360., 
           0.8912142000000001}, {420., 1.0811908}, {480., 1.3173289}, {540., 
           1.6092647}, {600., 2.0409448}, {660., 2.7144912999999997`}, {720., 
           3.5365964000000005`}, {780., 4.3376269}, {840., 
           5.272804800000001}, {900., 6.734320800000001}}]}}, {{
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          GeometricTransformationBox[
           InsetBox[
            BoxData[
             FormBox[
              StyleBox[
               GraphicsBox[{
                 EdgeForm[], 
                 DiskBox[{0, 0}]}], 
               GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                   PointSize[0.012833333333333334`], 
                   AbsoluteThickness[1.6], 
                   RGBColor[1, 0, 0]]}, StripOnInput -> False], 
              TraditionalForm]], {0., 0.}, Automatic, 
            Offset[10]], {{{60., 0.0021454}}, {{120., 0.0110103}}, {{180., 
           0.0389181}}, {{240., 0.08771530000000001}}, {{300., 
           0.7297189000000001}}, {{360., 0.8912142000000001}}, {{420., 
           1.0811908}}, {{480., 1.3173289}}, {{540., 1.6092647}}, {{600., 
           2.0409448}}, {{660., 2.7144912999999997`}}, {{720., 
           3.5365964000000005`}}, {{780., 4.3376269}}, {{840., 
           5.272804800000001}}, {{900., 6.734320800000001}}}]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {42.5, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{42.5, 900.}, {0, 6.734320800000001}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"p=0.5\""}, "PointLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "10", "]"}]}], "}"}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", "True", "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          
          LineBox[{{60., 0.1289741750679332}, {120., 0.22246740253841896`}, {
           180., 0.3388835931369089}, {240., 0.4443158278298612}, {300., 
           0.9002957464263666}, {360., 0.9623374032416208}, {420., 
           1.026362510864273}, {480., 1.0962208882672098`}, {540., 
           1.1718602641821116`}, {600., 1.268460904470311}, {660., 
           1.3949634159202933`}, {720., 1.5235679685991856`}, {780., 
           1.6308626921143283`}, {840., 1.7405261983657094`}, {900., 
           1.8884171400660101`}}]}}, {{
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          GeometricTransformationBox[
           InsetBox[
            BoxData[
             FormBox[
              StyleBox[
               GraphicsBox[{
                 EdgeForm[], 
                 DiskBox[{0, 0}]}], 
               GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                   PointSize[0.012833333333333334`], 
                   AbsoluteThickness[1.6], 
                   RGBColor[1, 0, 0]]}, StripOnInput -> False], 
              TraditionalForm]], {0., 0.}, Automatic, 
            Offset[10]], {{{60., 0.1289741750679332}}, {{120., 
           0.22246740253841896`}}, {{180., 0.3388835931369089}}, {{240., 
           0.4443158278298612}}, {{300., 0.9002957464263666}}, {{360., 
           0.9623374032416208}}, {{420., 1.026362510864273}}, {{480., 
           1.0962208882672098`}}, {{540., 1.1718602641821116`}}, {{600., 
           1.268460904470311}}, {{660., 1.3949634159202933`}}, {{720., 
           1.5235679685991856`}}, {{780., 1.6308626921143283`}}, {{840., 
           1.7405261983657094`}}, {{900., 
           1.8884171400660101`}}}]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {42.5, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"cube root of time\"", TraditionalForm], 
       PlotRange -> {{42.5, 900.}, {0, 1.8884171400660101`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"p=0.5\""}, "PointLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "10", "]"}]}], "}"}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", "True", "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          
          LineBox[{{60., -6.144429263800945}, {120., -4.508924080662364}, {
           180., -3.2462958409443607`}, {240., -2.4336589364392496`}, {
           300., -0.3150958874907609}, {360., -0.11517047636334447`}, {420., 
           0.07806302631995014}, {480., 0.2756061258272333}, {540., 
           0.47577736659894015`}, {600., 0.7134128378960708}, {660., 
           0.9986045693481018}, {720., 1.2631647957113996`}, {780., 
           1.4673274013291648`}, {840., 1.6625624410882303`}, {900., 
           1.907216958451828}}]}}, {{
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          GeometricTransformationBox[
           InsetBox[
            BoxData[
             FormBox[
              StyleBox[
               GraphicsBox[{
                 EdgeForm[], 
                 DiskBox[{0, 0}]}], 
               GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                   PointSize[0.012833333333333334`], 
                   AbsoluteThickness[1.6], 
                   RGBColor[1, 0, 0]]}, StripOnInput -> False], 
              TraditionalForm]], {0., 0.}, Automatic, 
            Offset[10]], {{{60., -6.144429263800945}}, {{
           120., -4.508924080662364}}, {{180., -3.2462958409443607`}}, {{
           240., -2.4336589364392496`}}, {{300., -0.3150958874907609}}, {{
           360., -0.11517047636334447`}}, {{420., 0.07806302631995014}}, {{
           480., 0.2756061258272333}}, {{540., 0.47577736659894015`}}, {{600.,
            0.7134128378960708}}, {{660., 0.9986045693481018}}, {{720., 
           1.2631647957113996`}}, {{780., 1.4673274013291648`}}, {{840., 
           1.6625624410882303`}}, {{900., 
           1.907216958451828}}}]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {42.5, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"log of time\"", TraditionalForm], 
       PlotRange -> {{42.5, 900.}, {-6.144429263800945, 1.907216958451828}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"p=0.5\""}, "PointLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "10", "]"}]}], "}"}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", "True", "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.832885636469061*^9, {3.8328856788853607`*^9, 3.832885705573938*^9}, {
   3.832888465597983*^9, 3.832888477365389*^9}},
 CellLabel->
  "Out[158]=",ExpressionUUID->"a55d9932-26d1-425b-8ff2-7bccad8fde85"]
}, Open  ]],

Cell[TextData[{
 "This doesn\[CloseCurlyQuote]t look linear like P&W\[CloseCurlyQuote]s \
figure 2.  An obvious difference: P&W are plotting the number of vertex \
updates, while we are measuring CPU time.  Thus, our algorithm\
\[CloseCurlyQuote]s implementation and efficiency play a role, not just the \
mathematical Markov Chain.    Each update of our implementation takes ",
 Cell[BoxData[
  FormBox[
   RowBox[{"O", "(", 
    SuperscriptBox["d", 
     RowBox[{" ", "2"}]], ")"}], TraditionalForm]],ExpressionUUID->
  "8f24e5cb-a190-4078-9cbc-9a67597c0ff7"],
 " time where ",
 Cell[BoxData[
  FormBox["d", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f58410e7-240c-484f-b550-b62d7738eb7d"],
 " is the average vertex degree of the graph, and for these graphs ",
 Cell[BoxData[
  FormBox[
   RowBox[{"d", " ", "=", " ", 
    RowBox[{"O", 
     RowBox[{"(", "n", ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "2bb1fa47-c107-4ff5-b7cb-02e624c01aaa"],
 ".  So if the number of steps is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"O", 
    RowBox[{"(", "n", ")"}]}], TraditionalForm]],ExpressionUUID->
  "4a6db014-5edb-4f56-be77-ba194d5d1083"],
 ", our algorithm would take real time ",
 Cell[BoxData[
  FormBox[
   RowBox[{"O", "(", 
    SuperscriptBox[
     RowBox[{"n", " "}], "3"], ")"}], TraditionalForm]],ExpressionUUID->
  "ebe69964-b006-4ef6-9a84-589817d85580"],
 ".   Other than the obvious jump around n=300 that probably (?) has to do \
with memory cache utilization, this is not entirely implausible. \n\nStill, \
going up to 900 vertices and being fast enough to time 100 trials is good \
news.  As a reference point, are we anywhere close to as fast as MiniSAT?"
}], "Text",
 CellChangeTimes->CompressedData["
1:eJwd0F1Ik3EUBnAbqbsQjaz1KbXcFC0jFswxZm5YkU6niQqRhW7NRAXLSJZh
WM1PaitzueV8VVA3TbvQgSbThhdJpmFbfrRkTEyFmNFUzMqP/s97cfjBc3E4
z2HLC1OVDB8fHz4ZaO5k/lpSeSQ2yboXJp6SrcMxThFtoLFze+89j0TsHGAE
E1l6Kxcaa3IiYIm9Kx+2sbcKYJZ6PkxA3P90PAJG9g1OniPe1MxPQ9FHr66Q
2OoIr4c2RqbaUemRGFaSqmDO+uoKfFR+aA2OnmnegK+OG7fpPEJ211pF7uQ/
o10u22mGs0WLLZDle7sDVn8+/xouyPe54dBwOK3lT/XDQWJBXEkDLBJ8a4K2
g0eb4WifMmqIqElO50G2ekcEZ7b/SaGRl5cC08ysDEiFhihg7cZ32lzLpTxo
TztZDDlbF3phT3Ev7WzAKGUjZgo5TVAU+3jWTtwUOmkVcy6Wg/h3gX8EWi03
jsEoF0V7nx0bCTNVLTy4JuamwYvjsgx4Ilrh/4UYZtjFhNc/7Q6CgSNXgmH+
/GkO/KELOgtra2wC2B+4KIJv+X5lMCW5og7eiVfpITNAaYKMnbFuep+t4w38
3ZKYNYW+Wm0OdI5I5Y0a8jeRWwH9hO5caFgIVUFxj7YUVnQNVcKBF9yXUPAh
xgQvl093QfVhswWOxFv9KeK7SH0AZG3+ZMH+vLED0LvKrYNm4a0GWB/SHtNO
lL2PjoOD9tIEOKfPlkI5dS0ZTqUvp8Lhbk2ZiWhfc2phQdUDHXz+pJGCE8qE
VuiqjG2DptAkh1jrkfDk4kmY7TZ8hRN7ZmgFV6k56A3xXYL/Af9322o=
  "],
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"1d9a7091-be82-4df0-985d-687781c423e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PWtimeSAT", "[", 
   RowBox[{"n_", ",", "p_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"G", ",", "v", ",", "t", ",", 
      RowBox[{"n3", "=", 
       RowBox[{"Round", "[", 
        RowBox[{"n", "/", "3"}], "]"}]}], ",", "sat"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"G", "=", 
      RowBox[{"PetfordWelshRandomGraph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n3", ",", "n3", ",", "n3"}], "}"}], ",", "p"}], "]"}]}], 
     ";", 
     RowBox[{"sat", "=", 
      RowBox[{"ColoringSAT", "[", 
       RowBox[{"G", ",", "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", "v"}], "}"}], "=", 
      RowBox[{"Timing", "[", 
       RowBox[{"SatisfiableQ", "[", "sat", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "t"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.832883800408869*^9, 3.832883956942649*^9}, {
  3.832886158336025*^9, 3.832886220782627*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"640df091-c3e0-41a3-99f3-46df5006b7f0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fig2sat", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Print", "[", "#", "]"}], ";", "#"}], ")"}], "&"}], "@", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"Mean", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"PWtimeSAT", "[", 
            RowBox[{"n", ",", "0.5"}], "]"}], ",", "10"}], "]"}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"60", ",", "900", ",", "60"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.83288479727699*^9, 3.832884797497368*^9}, 
   3.8328848279231377`*^9, {3.832884866130023*^9, 3.8328848963530416`*^9}, {
   3.83288494815847*^9, 3.832884958526462*^9}, {3.832886237779324*^9, 
   3.832886241145733*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"393a3abc-0c56-4eda-b576-6a781a24525a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Fig2", ",", "Fig2sat"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Cyan"}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "10"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<p=0.5 PW\>\"", ",", "\"\<p=0.5 MiniSAT\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8328881855514812`*^9, 3.832888238973255*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"38bd6003-698f-497c-8f5a-f8db3bf6343b"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[{{60., 0.0021454}, {120., 0.0110103}, {180., 0.0389181}, {
         240., 0.08771530000000001}, {300., 0.7297189000000001}, {360., 
         0.8912142000000001}, {420., 1.0811908}, {480., 1.3173289}, {540., 
         1.6092647}, {600., 2.0409448}, {660., 2.7144912999999997`}, {720., 
         3.5365964000000005`}, {780., 4.3376269}, {840., 5.272804800000001}, {
         900., 6.734320800000001}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1]], 
        LineBox[{{60., 0.0036950999999999998`}, {120., 0.0127432}, {180., 
         0.027439400000000003`}, {240., 0.0503228}, {300., 0.3139809}, {360., 
         0.2232667}, {420., 0.16152269999999996`}, {480., 0.2095755}, {540., 
         0.28660040000000003`}, {600., 0.3407896}, {660., 
         0.41209660000000004`}, {720., 0.5020859}, {780., 0.5852795}, {840., 
         0.6759930000000001}, {900., 0.7740622}}]}}, {{
        Directive[
         PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               DiskBox[{0, 0}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.012833333333333334`], 
                 AbsoluteThickness[1.6], 
                 RGBColor[1, 0, 0]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[10]], {{{60., 0.0021454}}, {{120., 0.0110103}}, {{180., 
         0.0389181}}, {{240., 0.08771530000000001}}, {{300., 
         0.7297189000000001}}, {{360., 0.8912142000000001}}, {{420., 
         1.0811908}}, {{480., 1.3173289}}, {{540., 1.6092647}}, {{600., 
         2.0409448}}, {{660., 2.7144912999999997`}}, {{720., 
         3.5365964000000005`}}, {{780., 4.3376269}}, {{840., 
         5.272804800000001}}, {{900., 6.734320800000001}}}]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.012833333333333334`], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 1, 1]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[10]], {{{60., 0.0036950999999999998`}}, {{120., 
         0.0127432}}, {{180., 0.027439400000000003`}}, {{240., 0.0503228}}, {{
         300., 0.3139809}}, {{360., 0.2232667}}, {{420., 
         0.16152269999999996`}}, {{480., 0.2095755}}, {{540., 
         0.28660040000000003`}}, {{600., 0.3407896}}, {{660., 
         0.41209660000000004`}}, {{720., 0.5020859}}, {{780., 0.5852795}}, {{
         840., 0.6759930000000001}}, {{900., 0.7740622}}}]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {42.5, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{42.5, 900.}, {0, 6.734320800000001}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"p=0.5 PW\"", "\"p=0.5 MiniSAT\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "10", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], ",", 
                    RowBox[{"Offset", "[", "10", "]"}]}], "}"}]}], "}"}]}], 
           ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.832888224431075*^9, 3.832888239499214*^9}},
 CellLabel->
  "Out[156]=",ExpressionUUID->"032f471b-642a-4da6-a364-37c7cd6dcdce"]
}, Open  ]],

Cell["\<\
Comparing with MiniSAT suggests that the PW method of creating graphs does \
not generally create hard ones -- and further, the n=300 point may actually \
be where the p=0.5 parameter yields hard problems, rather than being a cache \
memory issue. \
\>", "Text",
 CellChangeTimes->CompressedData["
1:eJwd0GtI02EUBnAbpX4Qhax1lVpuiisjjHSMLR1WpLNNRYVghW1tiQqWkSzD
sJpXaqvlZeacCurm0ghdaDLXkEhaU3KWxpKh2AxCo6ksKy+9z//D4QfPh8N5
DkNalCmnBQQEnCIDTebgX9+ViwK7wO+DacdEfuhkFlOG6s2bO28vCpLcQ7Rw
Il1nZUF9rSIGlrp6CmAnY6MQ5qrmozjE3Y/GYiB7YPjzaeI19fw05H3w1RcR
OyajG6GdJlFNVi0KmpYvVEOFf2UZ3q/YtwodJ9rW4LPD+k0qjxHdslaTO+Mf
Uy6Vb7XBmeKFdkjfcaMb1kyceQ690l2z0DYSTWn5U3NvmFiYXNoMizlfW6F9
78E26BiQx9qIanF2HGSotnjwy+Y/IdTH5afDLBM9BxoiI2RQu/aNMs9yPh+6
so6WQObG2X7YV9JPORPiMNiJEi6zFfISH8y4iOtcN6VszkOfJP71xh+AVsvV
QzDWY6C8w0hkQ4myPQ6uJrGy4LkxUQ48kiAL+kSMatoWDC+Pbw+DoaMXw2HB
/HEm/FEfdhJqa+0cOBi6wIOv4wPLYbq4sg7eTFHqYHCI3AhpW85eap+9+wX8
3Z6WO4W+Go0CukeF0hY1+RtvVgYDubN5sMkbqYRJfZoyWNljq4JDT1kNkPOe
b4QZFdM9ULXfZIGjKdYgA/ENWxcC6es/6XAw37kH+lZYddDEvd4MGyO6+F1E
0buEZDjsKkuFc7orQig1XBLDqeylTDjSqy43El2rbg0srL5bD588bDHAj/LU
DuipSuyECn7DS2jWyl7BCO34W5gmEE7A/52N1E0=
  "],
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"dc3a4b80-c216-411a-8ec3-a8477ef1401b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fig4", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Print", "[", "#", "]"}], ";", "#"}], ")"}], "&"}], "@", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"Mean", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"PWtime", "[", 
            RowBox[{"n", ",", "0.1"}], "]"}], ",", "100"}], "]"}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"10", ",", "120"}], "]"}]}], "}"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.832889013287203*^9, 3.832889115296154*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"ac381352-63a7-4b13-a62d-03f43534d6ec"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fig4sat", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Print", "[", "#", "]"}], ";", "#"}], ")"}], "&"}], "@", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"Mean", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"PWtimeSAT", "[", 
            RowBox[{"n", ",", "0.1"}], "]"}], ",", "100"}], "]"}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"10", ",", "120"}], "]"}]}], "}"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.832889306746599*^9, 3.832889311180461*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"661258d9-878d-412d-82aa-cff555cec7a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Fig4", ",", "Fig4sat"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Cyan"}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "10"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<p=0.1 PW\>\"", ",", "\"\<p=0.1 MiniSAT\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8328881855514812`*^9, 3.832888238973255*^9}, {
  3.832889551001042*^9, 3.832889560736554*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"5d787d41-d27c-47de-ba32-79a8f9db7714"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJw1kglQlHUYhzfETEfDjFQQRDzQMSRZAQFX+HEsLufuwt4LyJoSCB4sKyAs
uoIi6uBBBiWmIMckR+VgkIj6KZaK6BLpGGWGoZFAoDiGOB7R8P53Zmfnmed7
3v+xn+OaTZHrLHg83qbR7/+/Y5/5GFDvnGNVZO07xk6Ie22b1XzKjngRIlor
8jx4s4gXo8FQk/R7iQ2xMzSP7qn2ttgTu+Ccfs7nuhrGSzG+5MszwgTGrmj5
sfxJscqRmA/N7OHBIS3jZSj3Cwxuu8vYDeMuLnheEDaP2B3KvLbHLxYy9sBl
4b0JmjjGy2Hd8/0uwxdOxJ5wcOjG6/wFxF4QNqR7bLVk3hsnzwUdOVSxiHgF
jEOd5qO3PiQWoOnpdL3NM+ZX4s3Oh59NNjoT+8A3Z2PKrljGvsDuY14Hj7Ae
WH+8yFOe9NEYmwCpT1+jRZgreT/wLyRcu6RdSt4PYfePJscuXUbeH9fLOwO3
X2feH6UvHVSCQhfyAci4vb0u+wrNMwWgtsInNofP5geiy+Viq/0UPvlA3FQL
RIfq3MkLoZEMWnu+cCMvhHVmfbPuEPNBiNLNPVz3wIt8EGadnRQSXkjMW4Vr
BrPSbirzq/BBUnGTzNufvAg3qvm8aXI/8iLMvzqcNXMqyAcjI23Lse7EEPLB
cHtc/zKvOpB8CFqEJWWcLIh8CN40961VDoeSD0Wap/ibVKWYfCgKstJlrZUS
8mHoX89pDseoyYfBUN5+fR+nIB8OQ16pfl29knw48jy0t3L08eQjUNV1XrTq
XBz5CBSUTbDUlq0mL0bHTF7/rYAU8mLkn666++SBnrwEVg/TnoUidYwhwQ9H
frv5jimLnpfgraZXzlusN48xN+oFLzJC/0qjXgpx4/ivjzenUy+F5kps6nJ7
1ktRv9tKPK8vg3op+kWqq7avdlAfCXF1e45ow3bqI1EfGt0lz91G/SjbV104
IKV5XCT+rW/rGs4n5kVhY/Y/P7fvpfmIQrxZ0Ne1I5v6KKxfYCi+rKb1uChc
ylx4QBCyk3oZIvcLBkPO0nkgQ8of+2rKfDOpl8HsnJz5rpuJehk8E1fMbXDK
pV6OvxEcNxyUQ70cDcb3Rx7MoPkmOWJOnJ7e28nWl+N5epT9aTGdj6dApWVh
r+0pdn4FygUdawc1RuoVGOo5WNNSTPvhFNBt4+KXtNB985R4ezBRYa7dSr0S
opmFtyuXsPtX4mnEiVOeh9n9K2GUmyJ1i7dQr0Kq0y/CoffY/akg6u0YMc8m
Nqkwzsbg+Gsj61W4H3dmcE0N69UQBvgnfevB/n81jNJE3Ylcuk+TGh1Ti1p9
BLQ/Tg1pwt6eiXdYr8HAye8+df+KGBoUbVxhMWTJeg2kG6pv5LL3ldPgzvnV
ErOEvX9aJJYe6xZNZutrMWBTNu/PLFrPpMX+iofqWjlbXwuXx1OS+R6sj4bu
p1TnJD17/6PR4nq2OXUC7ccUjV674yvlBTSfi4a3fgaMe1gfg6Od/Im1Crb/
GLhOC1KNTKLnTTG4+snmj9s48lwMUtxXd1s8YuePhbONt9y/NMP3PyLT7rs=

         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1]], 
        LineBox[CompressedData["
1:eJw1kAtQVFUch68oIORzSEnRQQZaUVae8dLF/S27KAq4T/YNiooiCqSQYyq6
ToCaBSQghAmoNUZBgGggMbWCioMSPgERJEaCwbQcHBeIMavhf+7MnTvffOc7
9/yPy+YURbwVx3Ep/73/fycfNwh2X36/17hYOMk8CErFc4MXuhK7Q+BstLM0
uRAvh3WL1cUFXYz5uLRvo2//Ix6xJxSJNq6NsYy90THtvVPCPsY+cPo7aKA6
jE/sCx6v2+lMigexH07eqZrTeoX5D+D88WeFDjpvYn9IwpcaH0kZB2BQYYy2
xPgQB6JhVtxqudmPOAj+N3LzH+cxDsb3PQ4hSiPjldBkiBYfDgwkXgXVSpsp
mY0BxAL0L+7MnrjiTxyCjpEa7fzsIOLVqE+Ptd9zjbEQo9utLzRoGAPFSY+G
FF2CSTYBLyZ4Uy1HiTkR5PPtTtXfZF6EpK0NGVOUQvKhOLwndyi+m9gUir7Q
wFjPMubFeP6Hlfp1joi8GAPXvhh0OEfMSdBmuu3T5ismL4G2StUrKZeQD0Pl
FZvlZ5vDyIeh+P54xGDtWvJrkLC+6WVnZgT5NeAHN+rbfibm1qLnusP1Bx5S
8mtx26VIt/KhjHw4tmVbjkd9pCAfjvA7E6k5abSeWwf+zBknHPly8uvwrq3f
wroy1q/HIcuqopASYtN6vDy61/TiCO3HRSCtLvf5j9VK8hHY+2Xt2dmqaPKR
MNvZiXpma8hHwn7AvuPhh7SeiwJ/hVOGupbtHwXRrMt+SQfY/hvwzMPGUWLL
zrcB+5uqBnb5EnNSaDdHFsqT2f+l2BsVN70yjO0vQ4CsfbdbFjFk6M/vtvUu
1NN6GSrrdUFL0tSTbJbB7a7wcHm9ino5fgq22+JwkTzkaM5/03rZk9gkx2+K
PvF9V5rPLAevpz9ewGmpVyB9s2/O41ryUOCTQy27yjzYfSiw7/S54ZmpOuoV
GCk60jo2Sswp8XTReAW3gBhKvMrpHEytYOdXIsCxtNT/CLFZieHm8B3zGHMq
GDMLhp2uGqhX4VKfWv7nNCP1Kuw/kaw/GElsViF+p8R7lmcM9dHIDM9aZGjf
RH00bPk1C9K1cdRHo06V+mpXdzz10eh+PZHne2wL9Wo05Hg9LSmg9VAj78Rf
eY1nWK/G6DvVyUjbRr0a1qqKru1D26nX4LTibuALRQL1Goz98/uT518TmzTo
7lv1tjpjB/UaCH+4NTanjvVafLVo4+iKb7ZSr4X9phm99/fQ+UxaVOYeHdvm
TN6sRc3V8opxP2JOh0rZgYPTb7Feh6IbNiFx39G8Jh38O89LvVxYr8PbHqv2
JwWs1+Pb1yPj3vk0H/SQOE8dmPuG2KTHgzqbAkELuz89Aj9tE6czzxlwvPme
OSeRzW9A8+epzuVKNr8B16ulof3FxGYDpEujRFkXEqk3QmyZbbw2QQwjRMMO
J73m0X2ZjDjOj01238Luz4i8dkHrvSLWx+DevpZfTc6sj8Ea3s2MlNvs/zFI
cM/7ZUk2eXMMli2L6nh2nvWxkFstsRhKdgr/Bec+5iE=
         "]]}}, {{
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               DiskBox[{0, 0}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.009166666666666668], 
                 AbsoluteThickness[1.6], 
                 RGBColor[1, 0, 0]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[10]], CompressedData["
1:eJw1kntUk3UchydipEfTjFRQvIMemyQTEHHCh8vGYMg22H2AzJRE8MI2AWHq
BMTbwQsRFJiCoCe5VJ4ZpqK+iqUiOiM9RplhSCaYKB5DPF7iHL6/nfP+8Zzn
fb6/y95py9bGrhjK4/HWDjxDBh4nHvvNxGNd/tTRJa7Bg+yFpDfuOY3HJhHP
RkxzdYE/byLxHDRYalP/KHcj5kP/8K52Z5MHsTfOmKZ+YaxlPA/Dyr86KVrJ
2AdNP1U9LdVOIxZAP7mvp9fAeD6qQsIjW+4w9sXQ854vCqNnEPtBU9Dy5OUs
xv64KLrrok9ivACuD37YavnSizgAU6Z04M12T+KFEDVk+m9wZj4QR8+Iy/ZV
zyZeBGtvm2P/zY+IhTj1bJzJ7Tnzi/E2v/PzkVY+cRCCc9ekb01kHAxsO7Bw
bxnrgVUHSwJUqR8Psg1QBHWfcIr2IR8CwbmVVy4Y5pEPQfS9/WmJ8+aTD8XV
qrbwzVeZD0XFqylaYZE3+TBk3dpcv/ESzbOFoa46KDFXwOaHo937fLPHKAH5
cFzXCSX76v3Ii6CX97gGvPQlL4Jrtr3RuI95MeKM04vr7y8kL8bE0yOilhQR
8yJwxeLQTBrDfAQ+TC09pQwMJS/BtRoBb6wqhLwEMy/35UwYA/KRyMpYf6Aj
JYp8JHyf2F8V1ISTj0KTqLySU4rJR+FtY/dyTZ+UvBQZAbJvzRoZeSkKczKV
zYfl5KPxaBWnL07QkY+GperG1V2cmvwSWAoqTCvsGvJLUOBvuJlrSiYfgyPt
ZyURZ5LIx6Cw0sXZULmUvAytE3iPboalk5dh+/Ejd57eN5GXY3RnxnMpzIMM
OX4s+/36u7Ycel+OIade89e7rhtkbsALX2ZJ/86gXgHZiWHfHGzMpF4B/aVE
8wIP1itg3zZaNqM7i3oFHkm0l91fb6E+FrKaG7mS1Zupj4VdGt+uyttE/QB7
HDm3R0HzuFj8Z29p79tOzIvDmo3//nJjJ81HHJIdwu72LRupj8MqT0vpRR2t
x8XhQvasPcKofOqViN0t7Ik6TeeBEul/7qqtDM6mXgkHPy37PV8b9UoEpCya
3uCVR70K/yAyqU+cS70KDdYP+u+Pp/k2FRIOHR/X1cbWV+FFZpzHcRmdj6fG
YeeiLvdj7PxqVAlbl/fordSr0ftgb21TKe2HU8O4iUue20T3zdPgnZ4UtaNu
A/UaSCYU3To8l92/Bs9iDh0LKGb3r4FVZYs1zllPvRZmr19Fve+z+9NC0tXa
75hMbNNiqJtl2m8nWK/FvaSTPctqWa+DKCw09Tt/9v/rYFWkGA/l0X3adGgd
U9IcJKT9cTooVu58MPw26/V4fPT7z/y+JoYeJWsWOfU6s14Pxeqaa3nse+X0
uH12qdwhZ9+fASkVBzokI9n6Bjx2q5zxVw6tZzNgd3Wnrk7F1jfA+8moNIE/
6+Nh/NnMTzWx7z8eTT6nG80utB9bPLomHVysKqT5XDwCTeNh3cH6BOxvEwyv
U7P9J8BnrFjbP4LetyXg8qfrPmnhyHMJSPdb2uH0kJ0/EXy3QFVoRVbw/zk3
7r0=
         "]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.009166666666666668], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 1, 1]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[10]], CompressedData["
1:eJw1kHtQlFUYhz9AQUhFh5QUGWS0FWXlGjdZ3N+yi6CAe2XvoKh4F1KIIRVd
J1DJAhJQwlTUGqMgQCQuMbUCioMSXgERJUbCwbQcHBaIMXPG93wz3x/PPOc5
57zHfUOKIsmG47iUt7/V29+aY99iCHbXfvjI6Cp8xzwIzopnh8xfROwBgZvR
3tLsTrwMU9usL83rYczH5Yx1fgMPeMReUGy3XdSUwNgHXVM+OCHsZ+wLl3+D
B6si+MR+4PF6XU6neBL74/itylntDcx/BLdPvzjppPMhDoAkaonxgZRxIIYU
xjhLvC9xEBpnJq6Um/2JgxFwLb/wYQHjEPzY5xSmNDJeAU2WyPVgUBBxKFQr
bK2ymwKJBRhw7c6dbAggDkPXSLV2bm4w8UrUZyY47GllLMTYlqkXGzWMgZJd
D54qegTv2AS8mOTZWI4QcyLI59qfqL/OvAi7NjVmWSmF5MNxcE/+06ReYlM4
+sODErxKmRfj+V/W6tE8EXkxBlu/GnI6T8xJ0GG66dvhJyYvgbZS9UhSJiEf
gYoG22XnWiLIR6Dk7kT0UE0k+VXYuqb5ZXd2NPlV4Ic06Tt+JeYi0XfV6eo9
Tyn5SNx0L9atuC8jH4XNuZac2E8U5KMQdWsyNS+N1nOrwZ8x/ZgzX05+Nd63
859fV8r6NThgCS0OO0NsWoOXR9JNLw7Rflw00uryn/9cpSQfjfSva845quLI
x8Bsby/qc9SQj4HDoEPX/Y9pPRcL/nKXLHUN2z8Wopm1/rv2sf3X4pmnrbPE
jt1vLfY2Vw7u9CPmpNBuiDkpT2bnS5EemzitIoLtL0OgrHP34sPEkGGgsNfO
56Se1stQUa8LXpimfsdmGRbfFh4sq1dRL8cvIfYbnS6Rhxwtha/ba72ITXL8
oegX311E85nl4PUNJAk4LfUKZG7wy3tYQx4KfHagbWepJ3sPBTJOnR+ekaqj
XoGR4kPt42PEnBJPFkyUc/OIocSrvO6h1HJ2fyUCnc+eDThEbFZiuCVq2xzG
nArG7KJhlysG6lW43K+W/z3FSL0Ke48l6/fHEJtVSNoh8ZnpFU99HLKjDi8w
dK6nPg52/Op5mdpE6uNQp0p9tbM3ifo49I5OFvgd3Ui9Go153k/OFNF6qFFw
7J+CptOsV2PsvapkpG2mXo2pqvKeLU+3UK/BKcXtoBeKrdRrMP7fn4+ff0ts
0qC3P/RNVdY26jUQ/nRjfFYd67X4ZsG6seXfbaJeC4f10x/d3UP3M2lRkX9k
fLMbebMW1VfKyif8iTkdKmT79k+7wXodiq/ZhiX+QPOadAjoviD1dme9Dm/6
rDsfF7Fej+9HRyZ8Cmk+6CFxsxmc/ZrYpMe9OtsiQRt7Pz2CPu8QZzLPGZDT
csect53Nb0DLl6luZUo2vwFXq6ThAyXEZgOkS2JFhy9up94IscXR2DpJDCNE
w07HvefQe5mMyOEnJHtsZO9nREGnoP1OMevjcSej7XeTG+vjsYp3PSvlJjs/
Hls9Cn5bmEveHI+lS2O7nl1gfQLk1gsthjM7hP8D/aLmIw==
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {7.708333333333333, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{7.708333333333333, 120.}, {0, 0.009907219999999998}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"p=0.1 PW\"", "\"p=0.1 MiniSAT\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "10", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], ",", 
                    RowBox[{"Offset", "[", "10", "]"}]}], "}"}]}], "}"}]}], 
           ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.832889562022188*^9},
 CellLabel->
  "Out[164]=",ExpressionUUID->"9e06770b-a72e-416b-8f1e-604a7b7a1284"]
}, Open  ]],

Cell["\<\
Interestingly, it seems that the \[OpenCurlyDoubleQuote]critical values\
\[CloseCurlyDoubleQuote] observed by P&W were critically difficult for their \
algorithm, but did not represent generally hard problems (at least from \
MiniSAT\[CloseCurlyQuote]s perspective).\
\>", "Text",
 CellChangeTimes->CompressedData["
1:eJwd0GtIk3EUBnBbpX4QBa11McnlpmxlhMUcY6bDinRrU5lCYGFbW6KCZSTL
MKzmldpqedlyvip4mWtG6EKTaUMiyVRylsYSUUyD0MgLZuWl//N+OPzg+XA4
z2Epc1PUDC8vLz4ZaLX5/vquXRC7xGtLUHpMtgaH2Hm0/hbbVuDtBXGcp4cR
RGSanBxoqdBwYYHbng2bWZs5MEM3Gy4g7n00zIW8rt7Pp4nX9LMTUPRhqSqX
2DQWUQNdjHTdWOmC2Lx8oQxq1laW4f3iA6tw8ETDOnwWatmic67slrOM3Ml/
TLtYtN0AJ/PmGyFz9402WD565jmcU+6Zhn39EbSOP+X3eok58QW1ME/wtR66
9h9qgINd6sg+ol6eGgVZum0R/LL1TwItUVlJUGFlpkEqLEQFjevfaDMd57Og
W3E0H7I3z3bCjvxO2km/QcpFTBey66Eo9sGkm7gh9NCqZqaYY8S/c/xg6HRc
PQwjpyjaO6xYHkzXNkbB1TiOAp4blqXBI9Eqn0/EcPMOX3h5ZFcA9B+4GASz
Z4+z4Y+qgJPQWOESwG7/eRF8zfcugknykkp4M0Frgr5+6lbI2B5qp/e52l7A
343SjHH0NRg00DMgUdbpyd9E0yroLZzOhOa5MC2M6zAUwhJ7XynsecqphoL3
Ma0wuXjCDnUHrQ44kOD0oYhveCY/yNz4yYTdWUP74NIKpxJahddrYU1IS0wL
UfYuOh72ugsT4YzpigQqqUtyOJ66mAL72/VFrUT3qscAc8ruVsEnD+so+FGd
2ASnSmOboSam+iW0GVWvYIhx5C2UiiWjkB+4M9RKPEUFc+F/FA7alQ==
  "],
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"ad5d36a7-4cab-45da-8c39-a9bac62de7cb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fig4alt", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Print", "[", "#", "]"}], ";", "#"}], ")"}], "&"}], "@", 
      RowBox[{"{", 
       RowBox[{"p", ",", 
        RowBox[{"Mean", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"PWtime", "[", 
            RowBox[{"200", ",", "p"}], "]"}], ",", "100"}], "]"}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"0.02", ",", "0.98", ",", "0.02"}], "]"}]}], "}"}]}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.832889013287203*^9, 3.832889115296154*^9}, {
  3.832889699459345*^9, 3.8328897355984364`*^9}, {3.8328897840342703`*^9, 
  3.832889791885552*^9}},
 CellLabel->
  "In[166]:=",ExpressionUUID->"c28c305f-94d7-4867-b2a9-9fbf84b05861"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fig4altsat", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Print", "[", "#", "]"}], ";", "#"}], ")"}], "&"}], "@", 
      RowBox[{"{", 
       RowBox[{"p", ",", 
        RowBox[{"Mean", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"PWtimeSAT", "[", 
            RowBox[{"200", ",", "p"}], "]"}], ",", "100"}], "]"}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"0.02", ",", "0.98", ",", ".02"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.832889306746599*^9, 3.832889311180461*^9}, {
  3.832890292159676*^9, 3.832890320150371*^9}},
 CellLabel->
  "In[167]:=",ExpressionUUID->"0b06f158-e814-45b8-aae6-319015317ed9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Fig4alt", ",", "Fig4altsat"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Cyan"}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "10"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<n=200 PW\>\"", ",", "\"\<n=200 MiniSAT\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8328881855514812`*^9, 3.832888238973255*^9}, {
  3.832889551001042*^9, 3.832889560736554*^9}, {3.832890379422855*^9, 
  3.832890399887664*^9}},
 CellLabel->
  "In[168]:=",ExpressionUUID->"d22d7a3a-2a26-49d6-93c8-4ca7e86ddadd"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJwtUnlI01EAHmYKKwrEAsUUV6ZGKjr/kEK/sEIRRVxGSqs8mEMU00IEC53h
TLOYlllalsMlQ2mtvKaVubnNEp2ZztlwsmneNza7KNvv5/vg8XjXd/E8U65y
eHYMBiPQNqj5hrMswpJfBY+tNYX8diJ21hLU8dMvJSbIoHAXLsUpZBgPThUl
SIrJeSt0+3NvNYkKUVtDoROlGO27lylAJ32/G4ZI3sB5YyFsC9uOEi6sw3mn
zUXkvRqejgKhd2wxmIaG7FBmH0rdTii9M0pA09V8AvvfkHo+rwy+XJHK6jOA
0oL4pPiqcuJHh0pu85+hlgpIbK8NDZ8RrQr6fsFSiWVabxgb8r+s7NCHCGZT
GMGd1N+vy2urif4oFM+j9CL5Y/RafWwKevjNclhNmU+wh/ZjQFSA4+D6ozpw
aMFxTPpfrk+R1JO8X/FgM2TJoBVjKp8iNCLE+Ur6uq+E+J2AU2uMa4ixETmU
vWwTBMnnUl1ipKSfSRQ2ORXs7ZeCQcOM4+GbgQ7Xm0keMwT2+hzVi5eItNAC
yNy4e6zo6SuSz4IAnXZO/FOOChUVYApZvxz8pV9aQMdlT2Olnj3jOtyOnTjT
qN72mv7R1U7yf4N9TLdi3NQBD8qO+wxG1LkZh852kT5mcHFLKSx49hb8NAqz
6F8IC9d4vCP9zGHsfsdGsr4bFJuzbA7CtjZZmuED6WseB7NO8txO9WCLorPO
Y0rH4jdk9JD+FiAelQ5b9ykRRn+ARRy1Nx3xFqlIn4to8X0TyDT1QrjzgRDX
qIhQCdSk32Wwl8ZuNvpoMDhAYRm7ZWd2efVqSN8riHYUX7Mr0+IAbXAVsaHG
uO1BLel/FUlBzMTIEi1oOu4auCPv/SZSPuI/GKCIcw==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1]], 
        LineBox[CompressedData["
1:eJwtUmlIk2EAntIftSy8oiBr5DE1MHGUge7JTJyi5vGnY0peGUK5UkQmSeEm
lh2ORNKwNGe0KbpvCWmWeOXVZpbaPDqcX0tdS5ekUim27/N94OXlvZ6Ll5ua
nZBhy+FwAqyDmQtcmiIMknI87Jg4S4suYmutQInrZHn0UC5a3WU/4lubwJ2M
ThTQeeS8BSWq2Nce0muoqmTQBvNBO8/jDjfQxt7vQH7/2mZcSxGsC+tOF4Sl
f6aanYrJ+16kR4bwu1Q3Ya+vE4fY90Mzs+y2+/wtsHSVg6ju1Euvqu7CR3Sv
e4WnxV56h+R6kJz4GcYb3Xqj76wcCutrfd0IbBoN6c4R92Fm9d7jw1ff0dNl
5eAHMhiFP23TuZ1bQfTHIA++k9XfU4meFZ5VYRzeewq8Yw7UwIH1o8dvnkW5
1vwYCazgBGRtugVzWA3JO4mMhlOp9a+qMSthCKcwzefmFCc/In4/QeHf1zoY
XoMrjD3xZ9jbDojOiWtJP18wLq9Q6ni14LCYQZVLUHCAspbkmcG2Mir8Qc8T
CA2sAKKEoWGh3DqSz4CkHHP4mXQFyrqZALNw0g8XbbxTgI0bSGNj6eVJN2M9
tuLQ+OUtGxM+fUbyf0PS5rzEy0OJ/YwddyN8RvzTLnFUpA8jhv9J27XOKmRe
YPAdE5YjmX5aFelnDjtT8tcjTzSAYXNpmkNa+8djKfvUpK95vDg0nRzSQmGV
oVuZR3yMzrE4lyL9LeCtXVdEnICCgP0AJkhpm0JLLEX6NOG2OLI3qp2CbOsD
ITtVGOt1WU36NWOIiutLNKmh0zIwI3P5cMqyI0X6/omB0mZT1l8KrqzBRTw/
ustNYKFI/4tYN66iUKABSydaAj8gzzPPT4P/qZSDZg==
         "]]}}, {{
        Directive[
         PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               DiskBox[{0, 0}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.011000000000000001`], 
                 AbsoluteThickness[1.6], 
                 RGBColor[1, 0, 0]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[10]], CompressedData["
1:eJwtUn0s1GEcvxDb1WoztTExV0IL4/xhNT5NNWbMXFqsq7wMMyZqZlPjNCdS
O0qKUm4uu7GuK29HJXfOKeMkzunm7I68v0+nt5V+v5/ns33/eN4+b3vcEq/y
kq1ZLJYfNbuosaLmhoMs1JxXCdetNYX8dhx21hLUpqZdiouVQeEiXIpWyDAe
kCSKlRSR8xZo9+fcahQVoKaaRgdKMNp3L0OADuZ+F/RhyQPnDQWgFtSOEo6c
w7mnTYXkvRpudgKhR1QR2Pr6rCB2H0qcTyg90ovB0FV/AvffkHo+txRefJHK
4jmAkvyY+JjKMuJHiwp+05+h5nJIqNf6+s+IUPl/v2CuwDKjN4wN+V9OVtBD
BHBpjOBO0u/XZTVVRH8UiufhOpH8MXosnpSCDt6zPE5jxhPsYfzoEe5rN7j+
qBY8RnAckz6X6xIldSTvVzzYDFzSa8SYyqMJDQh0uJK27iUhfidg3xLpFGho
QDZtL8sIQcK5JMdIKelnEgWN9vl7+6VgMTDheMimn+31JpLHBIGNLlv14iXC
zIwAMjbuHit8+orkM8NXq5kT/5SjXEUHmELmL1sf6ZdmMHG501ip4844Dbdh
J840qrbdp390tpH832AT2aUYN7bDlbbjMoMRdU76obOdpI8ZXNxSCvOfvUVq
Co1Z9C8Eh/S6viP9zGHsfvtGgq4LNJuDbA7C1lZZiv4D6WseBzNPJjuf6sYW
TWeZx5SWk1qf3k36W4B4VDps2adEMPMBFnHUxnjEQ6QifS6i2euNH9vYA+HO
B0J0gyJUJVCTfpfBXRq72eDZi8EBGsvYLTtj7d7TS/peQYSd+JpVqQYHGIOr
iAoyRG8Pakj/q4j3Z8eFFWvA0PHXwB957z2R+BH/ASZMiHU=
         "]]}, {
        Directive[
         PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.011000000000000001`], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 1, 1]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[10]], CompressedData["
1:eJwtUmlIk2Ec36wvall4RUHWyGNqYOIoA90vM3GKmseXjil5ZQjlShGZJIWb
WHY4EknD0pzSpqivCWmWeOXVZpbaPDqca6lr6ZJUKsXe9/X5wf/Dc/0uHl5S
RmzqNg6H40sPlx4renIdG0L10hI86pg4ZxBfwtZaiUKnyZKIoSy0ush/xLQ2
gDcZESc0ZJPzFhSqo167yq6jvIxBG8yHrN1O2N5EG3u/Azn9a5vRLfmgF/RO
F0RFf6Ya7QvI+16khAUKutS3YKOrlgTa9KN5Ztl5z4XbYOnKBlHRqZNdU9+D
p/h+9wpfg32GndIb/griZxhvtOv1XrMKKOnXuuoRcOv1KQ6hD2Bm9d7jw1ev
0TPFJRD4MRiFj4HbuYNXSvTHoAi4m97fU4aeFT6tMA6PvbkekQcrYcv60eE3
36Jaa3yCWFZwAvI27YI5uJLknURq3emkmlcVmJUyhFOYFvAyCxIeE7+foPTp
ax0MqcRVxp7kM2ysBsTnJVWkny8YV5SqtPwqcFjMoNzRP8BXVUXyzGB7MRXy
sOcpRHpWAOGioOAgXjXJp0d8pjnkbIoSxd1MgFnY64bzN94pwcb1M2Bj6eUp
Z2MNtuIY8MtDPiaqfUbyf0P85rzU3VWFA4wdFyM8R3ySL3PUpA8jhv/J2jUO
aqRdZPAdE5ajad4aNelnDrsSc9bDTtaBYXNsmENy+8fjifubSF/zeHF4OiGw
hcIqQ7cyj5hIrV1BFkX6W8Bb667QaCEFIfsBTJAZuHmWKIr0acIdSVhveDsF
+dYHQkaSKMr9ShPp14whKrovztQErYaBGWnLRxKX7SjS908MFDWa0v9ScGIN
LuL5sd3OQgtF+l/EunEVecJmsHTiJQh8s92yvZvxH7dAg2g=
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {1.0729083998554472`*^-18, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{1.0729083998554472`*^-18, 0.98}, {0, 0.1905169699999999}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"n=200 PW\"", "\"n=200 MiniSAT\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "10", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], ",", 
                    RowBox[{"Offset", "[", "10", "]"}]}], "}"}]}], "}"}]}], 
           ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.832891063627789*^9},
 CellLabel->
  "Out[168]=",ExpressionUUID->"66272ea3-5530-4bdf-9f1e-b2f0053e7a63"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fig4altX", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Print", "[", "#", "]"}], ";", "#"}], ")"}], "&"}], "@", 
      RowBox[{"{", 
       RowBox[{"p", ",", 
        RowBox[{"Mean", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"PWtime", "[", 
            RowBox[{"200", ",", "p"}], "]"}], ",", "100"}], "]"}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"0.005", ",", "0.1", ",", "0.001"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.832889013287203*^9, 3.832889115296154*^9}, {
   3.832889699459345*^9, 3.8328897355984364`*^9}, {3.8328897840342703`*^9, 
   3.832889791885552*^9}, {3.8328910872916718`*^9, 3.832891108810165*^9}, 
   3.832891145226872*^9, {3.832891202887541*^9, 3.832891218012045*^9}, {
   3.8328914346353283`*^9, 3.832891434728218*^9}},
 CellLabel->
  "In[173]:=",ExpressionUUID->"ef89116f-233d-4a17-a952-8bd6e477d652"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fig4altsatX", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Print", "[", "#", "]"}], ";", "#"}], ")"}], "&"}], "@", 
      RowBox[{"{", 
       RowBox[{"p", ",", 
        RowBox[{"Mean", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"PWtimeSAT", "[", 
            RowBox[{"200", ",", "p"}], "]"}], ",", "100"}], "]"}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"0.005", ",", "0.1", ",", "0.001"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.832889306746599*^9, 3.832889311180461*^9}, {
   3.832890292159676*^9, 3.832890320150371*^9}, {3.832891127639312*^9, 
   3.8328911483613987`*^9}, 3.8328912287871027`*^9, {3.83289143933939*^9, 
   3.8328914394466953`*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"97362890-75e4-4632-90ac-d4ab4fda7f1a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Fig4altX", ",", "Fig4altsatX"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Cyan"}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "10"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<n=200 PW\>\"", ",", "\"\<n=200 MiniSAT\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8328881855514812`*^9, 3.832888238973255*^9}, {
  3.832889551001042*^9, 3.832889560736554*^9}, {3.832890379422855*^9, 
  3.832890399887664*^9}, {3.832891149946957*^9, 3.8328911522144136`*^9}},
 CellLabel->
  "In[175]:=",ExpressionUUID->"ccde5ec1-b7ae-48fb-9170-0e1b6ef7a133"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJwtlHs0lGkAxq2sOtm2y1q6bE61KMV245RuT9JlGVZMNJHWSTkdddJ021aT
vrlgXJKEysplXIqRZowYKhI7h1FyaxFOpx2aisqo2aTUfvN5v3PmzH/P+1x+
7zt/b5jPfmMjI6Mg+mf4P21evO1Z+HF0+m+waLzvjdGI0DvHL56CeGpbwHkT
H/z50nb5pCIerhcHiL9k+OBzga7Vcy+FhWq7xbI13lj31OvcpcMCTFjxYlNp
mDfG9UT4qDSZzepho9LtO+Ml0VF4FSE/6JzJJvpifHNy/asZAjbWlNafrMqM
xYuwgCrJLDbCmfPiwYqSVzcmsqG0ihzwViag5HJqUOxjNjk/EclhGSGcD75I
r5snO3rgAkYHCpZNV/sRP0n4ql3dnH/JD90fmQNh36edsb1rJ/GXjPzpqTYj
xf6Ys7TX2pSfgjcbV+zsVwXiNuM3FZUi1zDd0B4E7FtrUIToCGe3uXUw8X8Z
Rx9eqYtjhSDtCvPh7nKnoY1DoSRPGqR3d6peXuaiq+kDW5P3F7zWZvOee58k
faZj5YPpLIdJQswy8fveoeQqsibe3/CoKwYVTN4MsHc3eHAPp2GXMyOItl/L
KJ1YSvJnQVNb+7xg6Q14rIpxCerPwosPkn9zH5eRPrLR59Fy5eHWUtBitGI2
tArjffuyasCkOSyBIvr5I92yWsQd0n4q0EmQNserWzdYRvrKgalVsOWTdyos
ibagI+QgK9zZNvR1MekvFxNsp9QonGRozN5S9m4sFz1xQerAjjzMZvrMg0ZY
HsrqzoGhrZkm+bh9vt9XtDqD8JAPBz+rN46aNEzuyDmyfvI1hHwWU9VhafBn
+r6GzIl71B7SFBQa4k67jpDfup6l2ieR/q/jTJNAb+2bCEbOogDBC45lfvov
CeNzFICTkzTSF54Apu6fCrFq+yOudVQcxussRLLvOacEq0QY2mteIMXb/oGh
p4/Pkb2kcHH1r4rhxcJu9/n7+kVF8E8arbRJjyX7FSHU0bz1xLoYNNBqs+kd
XKfOZ2vcYzGT2fMGovMKM0wHhDhw4TUPTsXouGf+2tUlkvBcjGqzG/IRs0jQ
5ujIN7HUwbPqkloEDmPwJvyKNnuW9EZhBw0PPSm4dztdtt4Rkf1luCgIqZp3
IhK5dHsdOTIY19QIzayEhAcZnPf7zue28PF+rP3US1s5LNuiJHUdIsKHHDNM
6pvlQgE2MwDIEZy+wHEjl49Bhhc53md7mv5iL0TyeCAMfx3ELIpP7lcJ4lv/
Cas9TaGPsVeC3IUNqr/dKMQzPJXgVJZTT5ulAI4rDZ8CliLPEaPVfPQwfCkw
t2lQfOYZH6J7apogBR7M7HULTKEIbwq8a5rbLsuj0EavT3cCzrb9+nYzAeGv
FBaBbkq5Lx8/M8CW4pW4emxAwic8liJeVdEy9ImPY8wAtzB8b8Xnejs+ue+3
oA0ay6zl8VGrX0QvfAvuJl6qq39QOMjwWgae2r9zSiWFH4SMQXCS7PUhigjy
PpThuPaI+wN9BIIN7urL8HuveJf+CQUzhudy+Kxt3PLUmw/F1bfXVKxy8Nzt
XGXfUuQ9KUdnA6uOp6dgzAQux5ePh9oSWijCuxKmKREabSoFn3FgoJH+uEPX
epbwr4RfeV138joKEkPcdiWUm7iLVeVn4c7chwqMvm+2qfCiMGyQ41Qgf67U
R2BJkfeqAjZmTqnDPhT+B2UE9Wk=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1]], 
        LineBox[CompressedData["
1:eJwtlHlMk2cAxqEyBLwWJAR1ElHBg6jZxA1BfTIVPHCodVTFi6MCKQyZPWmh
RS1eQ7EC4hCFctqCFShCqysCouFwoojzYqKj6jyQgAcKOPf15f2Spv98ed7n
+H2vW9gu9k6WlZVVCPOz/MucdCueSAVojxtyrvHZjgE57w9BmgROheHsmKxQ
xL/w+NauNAEmm+VOdzaEYUjT2/ZTWBJezkgZbOoPwaLOtUcyY/eiY0TnwK3X
oRjWUyL8Iv/OwOwwXFw1muV5YD+aKtfOPloXRvUPIqNQtnSSOxc+lY2impzD
2P6q56N3Szik5LwU5HReXTA5mQuDa/Kr9YajMOgClVfquPT8Y1CPXGLrGbgT
2Q1TynZHqfBm7wj2Kp8I6uc4xnkFPcs+GoGHn8iB8Fu8xkmZE0H9pcO6Y3p3
17tITJr393TbPRl4+9J470MsD5eI3xMw+0ke+Zh42ML1tSjCzlGTX781mvo/
iW6W031TSzSyficP0kdaXoihebLgm934NO8GD/dv9G/oKjwF1Jo6PUqiaZ/Z
eBKli3M9FoMJNpyxcypO48Wjh5Lcrl9gJHnPoLN+LefVylhsXkgEIdt8643m
SxzNnwtVkE93uDkOa3449GPI01w8GP3azlG9m/ahRmsXb9mqX/lgxBhFNbY1
3dQ4soQgaWLzsCHxmv2iqwL8FvN8UNObh/mxM5UzNgppX/m415Dj5ewngucB
ZyZCPg6WcKJc3IW0vwIYJtcW9U8VoEXtV/X2cwFy3Setb9PyMZH0WQjTHlaP
+TYflrZcbIpwKXVlEtR8ykMRLiYnX42t5cPhbn7cYodidEz4LqTOzEcw6bsY
LfXWan07H1pL3K/Poih1Z8Soc3za/1lw/VUu5WMEIHLOGrxT7irhpQkwPIcG
fJ56GXePAKTub7QIdM0b73NCgOE6tUj1H3P5v5MCWNq7ObUE2swbix+8EdC9
SuD+6aNbvbUQs7am1r+fWQprdfwsh7lCul8p/vVgO2dAiCZGbeK8c7CpchH1
K4VwIXueQ+lgQvTxp0JEqboTsEAHtv9NzhyWiPKsg9Z23dIcuQiMOSbyeXiP
YLnthQibiMHzuPw4r3SpWIyfGXiYSTHWGD74YLmY7l8Gd7eWUBlHjAKmvbv5
Zfhzq3BjkF5MeSgDrzY4fdtmMd59bpe88CjHQGuH7/rzYspHORQBKcXOH8VY
TgAoh++hvxqerJPgNeGlHO6BDbp5DvFIHw4EEWvsjrmDEvp9VcBxKLKyzzUe
ZmKvAlZ1OZ5bFsQjhfBUAZcDjdMy98XDa77l0cMsf3l9cKQUHYQvPfzt/pEb
jkuhrG1mCNJjfkbELqsoKeVND85+aV+mXorbzPpMJ1gWJJx+Syul/FXCnKof
8PKWYRoBthK8Mw5BpiUyymMlDFyDjvNeBj4Z4AK2+d0euNsko9/7BXxvtHML
dkjAlfczmYUv4FI7+3DkRDmiCa9VkKgEaQsdFRi/jxjE0LoQe1Oogt4PVbje
K+xkr1Yg3OKusQr2wVk1AZEKjCI8V+PUuCMfVDWJ0J/uKb4WUA3ry83NDc8T
6X1SjX0FQ2E1dxLBIoGrsUP10HaKTE55NyBFWTMm/aAc7GFg0JbWKn9WIKf8
G9Bv77fj2WM58ixx2w1o9G7b4hWgwGryPRjR2iP+crhegT6L3CYj3n7V/Klg
VBK9r4xIb+vN7XNMwv9JLOKN
         "]]}}, {{
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               DiskBox[{0, 0}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.009166666666666668], 
                 AbsoluteThickness[1.6], 
                 RGBColor[1, 0, 0]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[10]], CompressedData["
1:eJwtlHs0lGkAxiWrTrZtay1dNqdalGK7cUq3J+myDCsmmkjrpJyOOk3TbVtN
+uaCcUkSKiuXcSlGmjEaQ0Vi57iU3FqE02mHpqJCzSal9pvP+53z/fu8z+X3
vvP3cn32TzQyMgqi/wn0b0z/p82Ltj0LO44O/w0WDfe9MRoeeuf4xVOQTGsN
OG/igz9f2i6fXMjH9aIAyZd0H3zOH2rx3EthYb3dYvkab6x76nXu0mEhJq54
samE641xPTE+qk1ms7rZKHf71nhJVCRehSsOOmewib4EE06ufzVDyMaaktqT
FRkxeMENqJDOYiOMOS8OrEhFZUMCG2qriH5vdTyKL6cExTxmk/MTkMRND+F8
8EVazTz50QMXMNqfv2x6vR/xk4ivutVNeZf80PWRORD2vboZ2zt3En9JyJue
YjNS5I85S3usTQXJeLNxxc4+TSBuM35TUC525Q4N7kHAvrUGRYiPcHabWwcT
/5dx9OGVmlhWCFKvMB/uLnca3DgYSvKkQnZ3p+blZR46Gz+wtbl/wWttFv+5
90nSZxpWPpjOcpgswiwTv+8ciq8ic9L9DY86o1HG5E0He3edB+9wKnY5M4Jo
/VVFDUlkJH8mtNXVz/OX3oDHqmiXoL5MvPgg/TfnsYr0kYVej+YrD7eWgBaj
FbOgUxrv25dZBSbNYSmUUc8fDS2rRuwh3af8ISlS53h1DQ2oSF/ZMLUKtnzy
ToMlURZ0hGxkhjnbhr4uIv3lYKLt1CqlkxwNWVtU78Zy0B0bVB/YnovZTJ+5
0IpKQ1ld2TC0NdMkD7fP9/mKV6cTHvLg4Gf1xlGbiint2UfWT7mGkM8SqpKb
Cn+m72vImLSn3kOWjAJD3O+vI+S3zmcp9omk/+s40yjUW/smgJGzyEfwgmMZ
n/5LxPgc+eBkJ470hsWDqfunAqza/ohnHRmL8ToLkOR7zineKgGG9poWyPC2
r3/w6eNzZC8ZXFz9K6L5MbDbff6+flEh/BNHy23SYsh+hQh1NG85sS4adbTa
bHoH12nz2Vr3GMxk9ryBqNyCdNN+EQ5ceM2HUxHa75m/dnWJIDwXodLshmLE
LAK0OTryTSx18Ky4VC8GhzF4E36Fmz2LeyKxg4aHnhS8ux0uW++Iyf5yXBSG
VMw7EYEcur32bDmMq6pEZlYiwoMczvt95/OaBXg/1nbqpa0Clq2R0pp2MeFD
gRkmtU0KkRCbGQAUCE5b4LiRJ8AAw4sC77M8TX+xFyFpPBCGvw5gFiUg96sY
cS3/cKtPU+hl7BUjZ2Gd5m83CnEMT8U4lenU3WophONKw6eEpdhzxGi1AN0M
X0rMbRyQnHkmgPhePU2QEg9m9rgFJlOENyXeNc5tk+dSaKXXpzsBZ9t+fZuZ
kPBXAotAN7XCV4CfGWBL8EpSOdYvFRAeSxCnKWse/CTAMWaAWxi+t+JzrZ2A
3Pdb0AWNZVTzBajWL6IXvgV3Ey/N1T8oHGR4VYFf798xtZzCDyLGIDiJ9voQ
ZTh5H1Q4rjvi/kAfjmCDu1oVfu+R7NI/oWDG8FwKn7UNW556C6C8+vaahlUK
vrudq/wbirwnpeioY9Xw9RSMmcCl+PLxUGt8M0V4V8M0OVyrS6HgMw4MtLIf
dwy1nCX8q+FXWtOVtI6C1BC3TQ31Jt5iTelZuDP3oQyj75tsyrwoDBvkOGXI
myvzEVpS5L0qg42ZU8qwD4X/AXlM9Ws=
         "]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.009166666666666668], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 1, 1]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[10]], CompressedData["
1:eJwtlHlQ00ccxSFQBLw6yDColZEqeDDqtGKLoL6pClWxqLFExYsjAhMoUnOS
QIIavIpiBMQiCuE0ASMQhEQbBESHw4oi1ouKlqj1QAY8UMDaX5bdmf1v5+17
7/vZdQ/fyd5hY2VlFcpsa2azmC1z1v34WCpAR/ywS63vNgzKeX8I0iVwLopg
x2aHIeG55zf2ZYkw2S53vr0+HMOavvafwpPxYkbqUPNAKBZ1rTmcFbcHnTZd
gzdfhWFET4mIC/zbg7PDcWHlGJbX/n1orloz+0h9ONU/gMwi2dLJHlz4VjWJ
anMPYdvL3g8+rRGQkvtSkdt1ZcGUFC4Mbikv1xmOwKALUl6u59L7j0I9aomd
V9AO5DROLd8VrcLrPTbslb6R1M8xjPcOfppzJBIPPpIL4b94tbMyN5L6y4B1
5/Se7rdRmDzv7+l2uzPx5oXx7vs4Hi4Sv8dh9pc89DXxsJnrZ1GEvZOmoGFL
DPV/Aj0s53um1hhk/04WMkZZDsTSPNnwy2l6kn+dh3vXB9Z3F50E6kxdnqUx
tM8cPI7WxbsdjcVEW864OZWn8PzhA0le9y8wkryn0dWwhvNyRRw2LSSCkG26
+VrzOZ7mz4Mq2LcnwhyP1d8f/CH0SR7uj3ll76TeRftQo62bt2zlr3wwYoyi
Glubb2icWEKQNHH5WJ901WHRFQF+i302pOnLx/y4mcoZG4S0rwLcbcz1dvEX
wWu/CxOhAAdKOdGuHkLaXyEMU+qKB74WoFXtX/3mUyHyPCava9fyMYn0WQTT
blav+RYflrZcbYtxMW1FMtR8ykMxLqSkXImr48PxTkH8YscSdE78NrTezEcI
6bsErQ3Wan0HH1pL3C/PoDhtR+Tos3za/xlwA1SuFWMFIHIuGrxV7izlpQsw
Mg4N+Dz1Mu5uAUjdX2kR5JY/wfe4ACN1apEWMPbSfycEsLR34+tSaLOuL77/
WkDnVQqPjx/cG6yFmLUlreHdzDJYqxNmOc4V0vmV4V9PtksmhGhm1CbNOwvb
alfRgFIIVzLPsygbSow59kSIaFVPIhbowA64wZnDElGeddDarV2aKxeBMcdE
PgcfG5b7HoiwkRg8h0uP8suWisX4mYGHGSnGGSOG7i8X0/mXw8O9NUzGEaOQ
ae9OQTn+3CLcEKwXUx7KwasLydi6SYy3nzokzz0rMNjW6bfunJjyUQFFYGqJ
ywcxlhMAKuB38K/Gx2sleEV4qYBHUKNunmMCMkYCQcQat33ukIS+r0o4DUdV
9bslwEzsVcKqPtdr84IEpBKeKuG6v2la1t4EeM+3LD3M8hfXhkZJ0Un40iPA
/h+54ZgUyroWhiA95mdG7rSKllLe9ODsk/Zn6aW4xUyf6QTLgoXTb2qllL8q
mNP0g94+MkwjwFaBd9ox2LRERnmsgoFr0HHeycAnAziPrf63Bu80y+h7P4/v
jPbuIY6JuPxuJjPh87jYwT4UNUmOGMJrNSQqQfpCJwUm7CUGMbw21MEUpqD/
QzWu9Qm72KsUiLC4a6qGQ0h2bWCUAqMJzzU4Of7we1VtEvSnekuuBtbA+lJL
S+OzJPqf1GBv4XB47e0ksEjgGmxXPbCbKpNT3g1IVdaOzTggB3sEGLSnt8mf
Fsop/wYMOPhvf/pIjnxL3A4DmnzaN3sHKrCKvAcj2nrFnw81KNBvkdtoxJsv
Wj4Wjk6m/5URGe19ef1OyfgfXXTijw==
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.0030208333333333337`, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.0030208333333333337`, 0.1}, {0, 0.17931676999999996`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"n=200 PW\"", "\"n=200 MiniSAT\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "10", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], ",", 
                    RowBox[{"Offset", "[", "10", "]"}]}], "}"}]}], "}"}]}], 
           ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.832892403311646*^9},
 CellLabel->
  "Out[175]=",ExpressionUUID->"8f65c098-32cb-46d5-a4ec-7529f9bdfd3c"]
}, Open  ]],

Cell[TextData[{
 "Zooming in on the P&W generated random graphs, we sure see that they are \
hard for P&W\[CloseCurlyQuote]s algorithm, but not for MiniSAT.  For ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "200"}], TraditionalForm]],ExpressionUUID->
  "e5e82aa3-393d-4479-9670-026d7eb75cdc"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "=", "0.0375"}], TraditionalForm]],ExpressionUUID->
  "b83a05aa-00a8-44b3-833a-8ccf5f136dca"],
 ", the graph will have about ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"3", " ", "\[Times]", 
       SuperscriptBox[
        RowBox[{"66", " "}], "2"], " ", "\[Times]", "0.0375"}], ")"}], "=", 
     " ", "490"}]}], TraditionalForm]],ExpressionUUID->
  "28c185d5-3113-4325-b51a-0f526afd75e6"],
 " edges, so ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"m", "/", "n"}], "=", "2.45"}], TraditionalForm]],ExpressionUUID->
  "d8c768f6-7e6c-41f8-a095-e9ec05703b7c"],
 ".  This seems to be about the threshold (maybe 2.4) for 3-colorability of \
random graphs.  Yet for more edges, these graphs are easy.\n\nFinally, let\
\[CloseCurlyQuote]s examine random unstructured graphs selected for being \
solvable.  P&W is not good at these, even though it handles well its own \
graphs with the same edge/vertex ratios!  So they really are harder than the \
P&W-generated graphs.  Surprising!"
}], "Text",
 CellChangeTimes->CompressedData["
1:eJwd0H0s1HEcB3CpsLlR1FGyyFMUa6pzsxM3PXE6smNro3TnZNhIyy6lqTxX
d+XxLueweThPZWgeOrpZdevCcoomE/PQqmOeJpWHvu/fH5+9ts8f733eH3t+
YqjQ0MDAwIcMVNabLHwX6dlq9uoiDDrKXYV9jsmUZvL6TYtberbfaJehJZEu
VTlBeV6MK0zVNcbDavuNBBiVMeXMJO593O8K3dq7P58iXhNPjUDWh8WiRGLV
kEsJVBtGZAxl69mypQs5MGZ1eQnez9y3ArXHKtbgMzv5JrV35d5U5ZA7GU8o
59K3KuBY8mwlpO+8XgdzB083wBn+ngnY0+tC2fYn9143McE/tRQmM7+WQ7X1
gQqobRe69xDFwWGe0D5jiwW/bP7jQLlnXAjkKenhUOFgK4D5a9OUsW3n46CO
dyQFOm6caYUtKa2UYzStQk2M8HYshyzfB2M64rr3KKVgcpw+RPw7w7CBqrbo
g9B9XEF5297XDUaIKj3hip8TD57t54bDQ14C409EZ9k2E3h5YIc5NNNcsoTx
Ux6O8GeR+XGYn6dmwg6zWRbsZBilw5DgrEJ4I0AkhSY0YS003OprovLUdc/h
78qgqGH0lUhi4KiGwy8Tk7+xJgTQyHsiFspmHETQr0WSBrMae7JhV4FTMWS+
96mFFzNHGmHGfmUb1ASojBXE125SGqSvz9NhR1yfFVxcdiqESu+kUlhiW+NT
Q+S+8/KH3bq0QDgpvcqBfEVkMBwOmwuFvU3i9FqibmVUAhNy7hbBp4/KFPCj
MLAKjmf7VsMYn+JmWJ8veAlt8wfewCA2ZxAyLLbbKYknFDauMEnd87COeNJU
I4bFsmgtnOfe+QZ5tLdTsNNUMguthzx+weZz03NQ/8NidwN6zr6ygpEuTeIX
xIJJVhHU7Tq8oCZeqbFchv8BFe8bGg==
  "],
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"220449f5-c371-4736-8df9-3d18d043256e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PWtimerand", "[", 
   RowBox[{"n_", ",", "f_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"G", ",", "c", ",", "t", ",", "sat"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"G", "=", 
      RowBox[{"RandomGraph", "[", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"Round", "[", 
          RowBox[{"f", " ", "n"}], "]"}]}], "}"}], "]"}]}], ";", 
     RowBox[{"sat", "=", 
      RowBox[{"ColoringSAT", "[", 
       RowBox[{"G", ",", "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{"SatisfiableQ", "[", "sat", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"G", "=", 
         RowBox[{"RandomGraph", "[", 
          RowBox[{"{", 
           RowBox[{"n", ",", 
            RowBox[{"Round", "[", 
             RowBox[{"f", " ", "n"}], "]"}]}], "}"}], "]"}]}], ";", 
        RowBox[{"sat", "=", 
         RowBox[{"ColoringSAT", "[", 
          RowBox[{"G", ",", "3"}], "]"}]}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", "c"}], "}"}], "=", 
      RowBox[{"Timing", "[", 
       RowBox[{"PetfordWelshColoring", "[", 
        RowBox[{"G", ",", "3"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{"VerifyColoring", "[", 
         RowBox[{"G", ",", "3", ",", "c"}], "]"}], "]"}], ",", 
       RowBox[{"Print", "[", "\"\<Miscolored\>\"", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "t"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.832883800408869*^9, 3.832883956942649*^9}, {
  3.83289098137402*^9, 3.832891006274527*^9}},
 CellLabel->
  "In[176]:=",ExpressionUUID->"1617a21f-6d09-4d3a-b2ed-bd01ebe781df"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PWtimeSATrand", "[", 
   RowBox[{"n_", ",", "f_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"G", ",", "v", ",", "t", ",", "sat"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"G", "=", 
      RowBox[{"RandomGraph", "[", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"Round", "[", 
          RowBox[{"f", " ", "n"}], "]"}]}], "}"}], "]"}]}], ";", 
     RowBox[{"sat", "=", 
      RowBox[{"ColoringSAT", "[", 
       RowBox[{"G", ",", "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{"SatisfiableQ", "[", "sat", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"G", "=", 
         RowBox[{"RandomGraph", "[", 
          RowBox[{"{", 
           RowBox[{"n", ",", 
            RowBox[{"Round", "[", 
             RowBox[{"f", " ", "n"}], "]"}]}], "}"}], "]"}]}], ";", 
        RowBox[{"sat", "=", 
         RowBox[{"ColoringSAT", "[", 
          RowBox[{"G", ",", "3"}], "]"}]}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", "v"}], "}"}], "=", 
      RowBox[{"Timing", "[", 
       RowBox[{"SatisfiableQ", "[", "sat", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "t"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.832883800408869*^9, 3.832883956942649*^9}, {
   3.832886158336025*^9, 3.832886220782627*^9}, {3.832890693546173*^9, 
   3.8328907530279703`*^9}, {3.832890928428234*^9, 3.832890954603011*^9}, {
   3.8328933731152067`*^9, 3.832893374917075*^9}, 3.832893441602647*^9},
 CellLabel->
  "In[187]:=",ExpressionUUID->"23f271e4-6fee-45f5-86ea-ca80196f8cd7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FigAltSAT", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Print", "[", "#", "]"}], ";", "#"}], ")"}], "&"}], "@", 
      RowBox[{"{", 
       RowBox[{"f", ",", 
        RowBox[{"Mean", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"PWtimeSATrand", "[", 
            RowBox[{"200", ",", "f"}], "]"}], ",", "10"}], "]"}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"f", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"2.2", ",", "2.45", ",", "0.05"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8329483925782623`*^9, 3.83294839777326*^9}},
 CellLabel->
  "In[207]:=",ExpressionUUID->"09e45639-fec4-4501-aa88-c2ea671f28a2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "too", " ", "slow", " ", "to", " ", "run", " ", "more", " ", "than", " ", 
    "just", " ", "10", " ", "samples", " ", 
    RowBox[{"each", "!"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"FigAlt", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Print", "[", "#", "]"}], ";", "#"}], ")"}], "&"}], "@", 
        RowBox[{"{", 
         RowBox[{"f", ",", 
          RowBox[{"Mean", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"PWtimerand", "[", 
              RowBox[{"200", ",", "f"}], "]"}], ",", "10"}], "]"}], "]"}]}], 
         "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"2.2", ",", "2.45", ",", "0.05"}], "]"}]}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.832889013287203*^9, 3.832889115296154*^9}, {
   3.832889699459345*^9, 3.8328897355984364`*^9}, {3.8328897840342703`*^9, 
   3.832889791885552*^9}, {3.8328910872916718`*^9, 3.832891108810165*^9}, 
   3.832891145226872*^9, {3.832891202887541*^9, 3.832891218012045*^9}, {
   3.8328914346353283`*^9, 3.832891434728218*^9}, {3.832892591212291*^9, 
   3.832892634532983*^9}, {3.832892785474237*^9, 3.832892809577394*^9}, 
   3.832893306327592*^9, {3.832893344701783*^9, 3.832893345299377*^9}, {
   3.8328934154155693`*^9, 3.83289342744245*^9}, {3.8328934746111517`*^9, 
   3.8328934747446613`*^9}, {3.8328935217860413`*^9, 3.832893527010594*^9}, {
   3.832893581025503*^9, 3.832893588488082*^9}, {3.8328936317991257`*^9, 
   3.832893632262425*^9}, {3.832894498955234*^9, 3.832894503626441*^9}, {
   3.832904902367795*^9, 3.832904914878757*^9}, {3.8329481881083508`*^9, 
   3.83294822171103*^9}, {3.8329484599761257`*^9, 3.832948461253353*^9}},
 CellLabel->
  "In[208]:=",ExpressionUUID->"3e0fc30e-c6ca-4318-be60-97cb89eac7aa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"FigAlt", ",", "FigAltSAT"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Cyan"}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "10"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<n=200 PW\>\"", ",", "\"\<n=200 MiniSAT\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8328881855514812`*^9, 3.832888238973255*^9}, {
   3.832889551001042*^9, 3.832889560736554*^9}, {3.832890379422855*^9, 
   3.832890399887664*^9}, {3.832891149946957*^9, 3.8328911522144136`*^9}, {
   3.832948482676531*^9, 3.832948493916225*^9}, 3.8329525440237207`*^9},
 CellLabel->
  "In[210]:=",ExpressionUUID->"c0536ddd-0370-40d6-b882-0a10b6a5d554"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[{{2.2, 1.4215420480155359`}, {2.25, 0.08253197610327295}, {
         2.3000000000000003`, 2.3538526050492345`}, {2.35, 
         2.426394281530011}, {2.4000000000000004`, 2.9154343833241554`}, {
         2.45, 1.9127607430185982`}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1]], 
        LineBox[{{2.2, -5.186686550376852}, {2.25, -5.236657986161309}, {
         2.3000000000000003`, -5.1991962756802295`}, {
         2.35, -5.03211432577338}, {
         2.4000000000000004`, -4.673995214418619}, {
         2.45, -4.972790527122906}}]}}, {{
        Directive[
         PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               DiskBox[{0, 0}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.012833333333333334`], 
                 AbsoluteThickness[1.6], 
                 RGBColor[1, 0, 0]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[10]], {{{2.2, 1.4215420480155359`}}, {{2.25, 
         0.08253197610327295}}, {{2.3000000000000003`, 
         2.3538526050492345`}}, {{2.35, 2.426394281530011}}, {{
         2.4000000000000004`, 2.9154343833241554`}}, {{2.45, 
         1.9127607430185982`}}}]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.012833333333333334`], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 1, 1]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[10]], {{{2.2, -5.186686550376852}}, {{
         2.25, -5.236657986161309}}, {{
         2.3000000000000003`, -5.1991962756802295`}}, {{
         2.35, -5.03211432577338}}, {{
         2.4000000000000004`, -4.673995214418619}}, {{
         2.45, -4.972790527122906}}}]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {2.194791666666667, -5.874605477441236}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {
       Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{2.194791666666667, 2.45}, {-5.874605477441236, 
      2.9154343833241554`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, 
       Charting`ScaledTicks[{Log, Exp}]}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"n=200 PW\"", "\"n=200 MiniSAT\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "10", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], ",", 
                    RowBox[{"Offset", "[", "10", "]"}]}], "}"}]}], "}"}]}], 
           ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.832950623082171*^9, 3.832952544776519*^9},
 CellLabel->
  "Out[210]=",ExpressionUUID->"951df8cd-94c9-4e53-8d64-bfbe7ef66cb1"]
}, Open  ]],

Cell["\<\
Plotting P&W-generated graphs vs the actual f=m/n (for P&W algorithm only), \
we confirm that this way of generating graphs really results in easier graphs \
for the same ratio.  P&W seems to be on average about 100x faster, while \
MiniSAT is maybe only 5x faster (solving P&W-generated random colorable \
graphs, vs solving random n-m graphs selected for being colorable).\
\>", "Text",
 CellChangeTimes->CompressedData["
1:eJwd0n0s1HEcB3BR3MYo6sjDIk9RrFTY7cRND546MmxtlBwybB5aJqWpzmN1
V56Fw/Jwnso8zEPoZuoiDzlFOyY6tMozk+Sh7/v3x2ev7fPHZ5/3Zx+DgAjP
IHk5OTkWKSisoi39iJ1jiVjry9DtBHsd9hlFU6oWVO2o35ljOUjb5DWI9Nx2
Y1iQFmwG4yQ1YbDMYDsc+nNlJrbEQ0/7zaB5c8eXc8SbPNkoZH5czooglg6b
5kCRvC93OHmOlbdyOQUGr6+uwIeJh9dg78niDfhCv2CH6puxb7enkD2tn1HO
J+wWw/Ho2RJI3xdVCVOHzlfDmYCDk7Czy5Sy8W/qgw5iuGNcPoy2HSuCIi3d
YtjbHGTRSeS5e1tBA+4uE37d+ecKC6xCPaCXkO4DBYZ6HJi+MU0Z0ugUCiVe
x2Og0faFBlgf00A5rtIrEBF9GUZFkGn/aFxC3GJIKTlTE/Rh4uaMtQ5sbww8
Ai0mBJR3DezNoW9siRVcczD2ghf72T7wqA1H6TPRJG8PDV4b2KsGVcVXNWCY
zNII/spSOw3T00S2sEV1lglbrRUToId7Uia85RybC2kqQRVQfrevlponqnwF
/5S4+Y8gL58fDKVi14BCHrkbc5IDFRmTITBvxjAWOtTz42FSTWcybMswzoa2
PXYV8EriaA3kagsbodi5XUlAfGueqwLpWwt02BLapwmXV40zoZARmQ9z9Mrt
yons9zaOsEMS7wKncm+4wgCBnzsc8Z73hF21vIQKomRNyofhKfez4PMnhQL4
KcilFE4k25fBYLvsOliVzmmCeukD3dCN5ToErdUV9IXEMwIdMxgp6nxcSTyr
LObB7LzAXrjAvvcNeqm8k8FWZf4s1Bq2/A3rLk3Pw7mf6geqkXP2jSb0M63l
vSZmTDGzoGT/sSUR8Xq5xipc9Hae6Ua+D7JFuGkzKBUTdZtejlGe+q7ZD6O4
2lDTaVeBxSd/ONhDg/8B3vE+4w==
  "],
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"41238c95-c0f4-4944-978b-03e498508e16"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PWtimeF", "[", 
   RowBox[{"n_", ",", "p_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"G", ",", "c", ",", "t", ",", 
      RowBox[{"n3", "=", 
       RowBox[{"Round", "[", 
        RowBox[{"n", "/", "3"}], "]"}]}], ",", "f"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"G", "=", 
      RowBox[{"PetfordWelshRandomGraph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n3", ",", "n3", ",", "n3"}], "}"}], ",", "p"}], "]"}]}], 
     ";", 
     RowBox[{"f", "=", 
      RowBox[{"N", "[", 
       RowBox[{
        RowBox[{"EdgeCount", "[", "G", "]"}], "/", 
        RowBox[{"VertexCount", "[", "G", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", "c"}], "}"}], "=", 
      RowBox[{"Timing", "[", 
       RowBox[{"PetfordWelshColoring", "[", 
        RowBox[{"G", ",", "3"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{"VerifyColoring", "[", 
         RowBox[{"G", ",", "3", ",", "c"}], "]"}], "]"}], ",", 
       RowBox[{"Print", "[", "\"\<Miscolored\>\"", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"f", ",", "t"}], "}"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.832883800408869*^9, 3.832883956942649*^9}, {
  3.832940766437525*^9, 3.8329407945024853`*^9}, {3.832940844850543*^9, 
  3.832940846259369*^9}, {3.832946019964923*^9, 3.8329460580096893`*^9}},
 CellLabel->
  "In[202]:=",ExpressionUUID->"d39370e9-d8a4-48a4-af8a-625f2e5f15f9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PWtimeSATF", "[", 
   RowBox[{"n_", ",", "p_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"G", ",", "v", ",", "t", ",", 
      RowBox[{"n3", "=", 
       RowBox[{"Round", "[", 
        RowBox[{"n", "/", "3"}], "]"}]}], ",", "sat", ",", "f"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"G", "=", 
      RowBox[{"PetfordWelshRandomGraph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n3", ",", "n3", ",", "n3"}], "}"}], ",", "p"}], "]"}]}], 
     ";", 
     RowBox[{"sat", "=", 
      RowBox[{"ColoringSAT", "[", 
       RowBox[{"G", ",", "3"}], "]"}]}], ";", " ", 
     RowBox[{"f", "=", 
      RowBox[{"N", "[", 
       RowBox[{
        RowBox[{"EdgeCount", "[", "G", "]"}], "/", 
        RowBox[{"VertexCount", "[", "G", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", "v"}], "}"}], "=", 
      RowBox[{"Timing", "[", 
       RowBox[{"SatisfiableQ", "[", "sat", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"f", ",", "t"}], "}"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.832883800408869*^9, 3.832883956942649*^9}, {
  3.832886158336025*^9, 3.832886220782627*^9}, {3.832955518521422*^9, 
  3.8329555392844887`*^9}},
 CellLabel->
  "In[211]:=",ExpressionUUID->"a50805b9-36dc-4574-b014-dbe076c98e84"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"double", "-", 
       RowBox[{"check", " ", "the", " ", "same", " ", 
        RowBox[{"edge", "/", "vertex"}], " ", "ratio", " ", "generated", " ", 
        "via", " ", "P"}]}], "&"}], 
     RowBox[{"W", "'"}], "s", " ", 
     RowBox[{"method", ".", "  ", "f"}]}], "=", 
    RowBox[{
     RowBox[{"m", "/", "n"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"3", "*", 
          RowBox[{"66", "^", "2"}], "*", "p"}], ")"}], "/", "n"}], " ", "so", 
       " ", "p"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "*", 
         RowBox[{
          RowBox[{"n", "/", "3"}], "/", 
          RowBox[{"66", "^", "2"}]}]}], "..."}], " ", "but", " ", "here", " ",
        "f", " ", "has", " ", 
       RowBox[{
        RowBox[{"std", " ", "~", " ", "0.2"}], "."}]}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "So", " ", "tally", " ", "by", " ", "actual", " ", "f", " ", "rather", " ",
     "than", " ", "parameter", " ", "dictating", " ", "mean", " ", 
    RowBox[{"f", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"FigAltX", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"RandomReal", "[", "]"}], "<", "0.01"}], ",", 
             RowBox[{"Print", "[", "#", "]"}]}], "]"}], ";", "#"}], ")"}], 
         "&"}], "@", 
        RowBox[{"PWtimeF", "[", 
         RowBox[{"200", ",", 
          RowBox[{"f", " ", 
           RowBox[{"200", "/", 
            RowBox[{"(", 
             RowBox[{"3", " ", 
              RowBox[{"66", "^", "2"}]}], ")"}]}]}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"2.2", ",", "2.45", ",", 
           RowBox[{"0.01", "/", "100"}]}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8329405008800488`*^9, 3.832940699281986*^9}, {
  3.8329408533444157`*^9, 3.832940889118843*^9}, {3.832940954541895*^9, 
  3.832940954609262*^9}, {3.832946130171626*^9, 3.832946213987679*^9}},
 CellLabel->
  "In[203]:=",ExpressionUUID->"983b2f80-41f5-446b-9813-b13c71c8b334"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FigAltSATX", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"RandomReal", "[", "]"}], "<", "0.01"}], ",", 
           RowBox[{"Print", "[", "#", "]"}]}], "]"}], ";", "#"}], ")"}], 
       "&"}], "@", 
      RowBox[{"PWtimeSATF", "[", 
       RowBox[{"200", ",", 
        RowBox[{"f", " ", 
         RowBox[{"200", "/", 
          RowBox[{"(", 
           RowBox[{"3", " ", 
            RowBox[{"66", "^", "2"}]}], ")"}]}]}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"f", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"2.2", ",", "2.45", ",", 
         RowBox[{"0.01", "/", "100"}]}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.832889013287203*^9, 3.832889115296154*^9}, {
   3.832889699459345*^9, 3.8328897355984364`*^9}, {3.8328897840342703`*^9, 
   3.832889791885552*^9}, {3.8328910872916718`*^9, 3.832891108810165*^9}, 
   3.832891145226872*^9, {3.832891202887541*^9, 3.832891218012045*^9}, {
   3.8328914346353283`*^9, 3.832891434728218*^9}, {3.832892591212291*^9, 
   3.832892634532983*^9}, {3.832892785474237*^9, 3.832892809577394*^9}, 
   3.832893306327592*^9, {3.832893344701783*^9, 3.832893345299377*^9}, {
   3.8328934154155693`*^9, 3.83289342744245*^9}, {3.8328934746111517`*^9, 
   3.8328934747446613`*^9}, {3.8328935217860413`*^9, 3.832893527010594*^9}, {
   3.832893581025503*^9, 3.832893588488082*^9}, {3.8328936317991257`*^9, 
   3.832893632262425*^9}, {3.832946324153363*^9, 3.832946354159861*^9}, {
   3.8329555490679903`*^9, 3.8329555681845818`*^9}},
 CellLabel->
  "In[212]:=",ExpressionUUID->"91efc5d2-72ab-4b80-b7db-fd8eb8fcce6f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"FigAltX", ",", "FigAltSATX"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Cyan"}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "False"}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "10"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<n=200 PW\>\"", ",", "\"\<n=200 MiniSAT\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8328881855514812`*^9, 3.832888238973255*^9}, {
   3.832889551001042*^9, 3.832889560736554*^9}, {3.832890379422855*^9, 
   3.832890399887664*^9}, {3.832891149946957*^9, 3.8328911522144136`*^9}, {
   3.83289453224055*^9, 3.832894537823287*^9}, 3.832945319993029*^9, {
   3.83294628250841*^9, 3.8329462829645767`*^9}, 3.8329463602985077`*^9, {
   3.832948280972413*^9, 3.832948282341133*^9}},
 CellLabel->
  "In[213]:=",ExpressionUUID->"05d12138-bcc9-47d9-a4f7-7de63746a717"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               DiskBox[{0, 0}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[
                  Rational[1, 360]], 
                 AbsoluteThickness[1.6], 
                 RGBColor[1, 0, 0]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[10]], CompressedData["
1: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
Q0l/3SnHcBzw/72aW75oyjMQ3yjE/Py8gAZ8qtigrjfBhAX8/dNnjTr/52yI
H4oy11IiJqZAj7ksHbKpXJYB8cv1XNaqqvn8iu9vTE7Bw4O30HiWhXyO3DA5
x+WPJ3FPltWyXgKPn5+Hud5+UtePBTyffXit3tV/Ct5/S8EG+ZxDwxA/TDaJ
Sz7zZIE/pbitN/KfQPUrr/uppeZZdMDnLq+3UqE38OC/LzmEktFclI9OYTUO
DavgIX4WrP55zrwJD/z8e/S737T5/IKPn0tluVPr2b/V+f4lHFg6anXzD9Qj
vPVsmXgOBfgLPoSs/GpbH+ib/QVSVlv02XC/i7sVZHPm8z++/beHFJ9/9LgZ
9LPL0d9FQyRosB7KWtaZ/b+7uHw83i92oyQ+lAL85ahk59DJJ0xe4F+6VkXg
pPkxiDlySA9O8/9+x2E5Bfxb8quYbZ/2FJePXzWSubm4m8JgX29nH2BxMSxY
H50DCRHRCqheYcRIbEnZgfKXzXJm5d9rByHfw8aa1e9vxcB87hCMrk8xFwR/
XfdxIv3J8CCXPx8RcQNfBDWQPjS9wmfm41syrLf6r3o3zKk50P/2hHxxiM3D
Qj6gUyIm1vdJEMYn/fm1TV89i8fXH72IF49oqKHxKxF/vvmT2QR6uMrlCmf2
CjzEh560Jbbx5+YAH9dmDdBf9TEgX4gbU0rLpOFhvasajcQKs5tA/9nc94Os
Qpjg8v09Wk092zUMB3jpu8Faq2YlCz7bbhdsaoikgh6k1ZX77eN9IcBD1wLb
QLIDBfSYFqUFuxPbibBeimfTnS5loPz6XnCUbmUY8pfa/2Rj5E3IPLF/4YbI
ORV7mXf8hgDgUfvXL6+9FBkwP/dGqd1q90mwHhl3n+2qvkKC9xdMPmSfe4AJ
/qTyKd3eUFEE8gHPeCejj/fJEK/6Lj15x9FB9q+42tMw7THK39+HuE5njOIh
X9A6WrPj8CAafxNz7bMYWTrgjVHWmLH4Nwy87xRNK2ZZ8xTwabFSE23XXhzk
c4tHNpx8O0aE8YT5GL7ZW4CF6wdiSNOkaCr4y++3zzdlzvNhvl7DPNN4+ngZ
4u+Vj274v7uM8GTaNWSr0SM65OMjVtvwBl6ovnz5uYr6yygWzJ+rs2fUR71B
iA+K41v/O1WOBz46mb8htFhIAPhXoEqMsdJXAXj+G6vgiF8Fg5CPs6lVP8Zs
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
8p9FKsoXVsSh/p8/+b3Lvz9H/UkBr4flZBcNQvw63cbKCZFH+7s8tdv/tO1F
eu6rW1s+h8qxwN9vPqBe8PdDepu2AMtnJAWNf3f8oTqv0wyIX7k9jgsbNAVA
f29cr9DfqzwM69diWjj8U5QK9jf0ytntOQn1Xy3LKGlq80b7CwsX3Wo2cxkE
/zCOlCR5Z7Zx+etToxT7S/SnEMyPdJyt/yVnMtjbSVLqz7YR1N+4jrRZq0qZ
BfqteLOW/+w5Iow38u0hL5YVAeI1YeP54mYK0rP2/JdVcm1wCuovyekyWhLW
E6AnXLBXqmFlIvzT21XLczyEgfmuUmJFKVwRgPkzpLo89+JhgA+ttPvwn9jt
KeArt0zoCikSBPBPutaDCmFLVN94lrlmUEAZA3qZ+5UXm2S7c6AerNOXYhBi
Tob9ZBMxzqnW54XhfRzr3f32DyI95kNsgm6TMdIfTJYapO2IwsH4lv+k847W
EeB6s+SWaHsOEdYz1anIRvyTAI+vd4V/Ol2lHCsCfK6x54r4MrlZqGcpharW
2buifLDik8JdO5E56Mfd8c4n+msTCfKJ7lXWxavnxxND/usg8/lN7fIP6hWo
n0K1Rk3d7g0G4onBY9L5IDID7Z+yvLDV14cC+HrrRkmjWwgR4tNll2+CtGNo
PQWWDi4tWk+H9RNN4mU82T8M+30kfgv+ubqMAPqCKC1xj5vWBPink+x/HpJL
KfD8xVdKzYk0LOgJI/vJT18qsMD/hCw/7rz2dRL6MdJSNZgJRxA+pXf4FJ6w
x0N++kFx2tn6POpHbTqnGyt8exL6KXMPFvXWlA9Cf9TaH/fXvHGdgfrlr5fT
tznz4+PXm7I/6S3QO4j847+tkfrtImzIP45Oa/K4xnTQI04+Ue74Uj2D+jdP
iskQOExYj/64WXJGNqpP3i42vlhBQPXdnh8CqsJ7qDD/3DUMF/tDiC9jW/YS
j3xDfKuo6LWMDJEO679Ze1U+bi8d7OvRi/eZQflsnvA/ACNwcrEaT+bqUL2f
TYk6NEZB/dDPg8Pr9qWSePPgNG+A83/fY9NCOIn2943Vpb/31kL1v/Fl4ocb
PpKh3u61vifrzBwe+mUPzdXvu7qBjvI7J4kpnCzKJ824y57e+I7iYa1j2Pew
n2j/xSuzMmbQp0mo36V2soqbRuhw/dupvZeOswRgfh7czwm8cZEO9tfZODty
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
ZO7/ACT65zk=
         "]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[
                  Rational[1, 360]], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 1, 1]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[10]], CompressedData["
1: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
l+/d0zUm76f8EPLR2M8NqfAxo98Sf20eWlI43ojN+B/Er/AHqD/AX2oa5rKv
t1K+7nm06PvxNpQflJKykX7aQfXxUQf2nh78hfLzpv12J2yfSPiC/hL4m9El
qm4Z/hzBwF6AF+O/8m7v+NKf+IVV4xHTFyLET89vME3RS6d8K/torJLuCJLf
U7GM1XVbiJ+jXwx89sK4rNEvRhLfKvHsfGVrQOctq6Sit9iDzjN3V5lFexT5
A9HGEfXnTYlPePEahVTmk75aHZnrpz6a/EOik33wgcGUD9XyX8ubLE/1mnzH
ptUF7yj+CzhhPvpmD9+CvSocGb1ZQpWej/4f2L+Ok+B2+B4eo98bzsRF8QLo
827HyozmDqZ4JETaXypFkvgB4jvkG+QeilodTSZ+emdvXsjSFcTfxP2Pi4w9
SfZV72Aeuf4C2SP6MZWvuBbkRojxH250jn5mRvG55y11/WxRHuOfR0456t9/
JJ1349ULtwIlqL6Kfnnor0vBo/xhs8l/ZCqVSZ7cRPUd2fdsTd490o+x8775
Z4+nfF9TYl5XvTb1O53oN/jI5p7fY3/I50N+Tg0Wc+/6yDJ4+G6TqVrUHNIv
9G/g+Y9s7dqLbSi/EdGUNL9NjOrrFwIUqw61yDB4XuJaEBeeRvIeZiT1pkSU
9Gt6LGeUUBXJV0uieUCXFe2/6e2CE0mxlJ8T37bm605H4v8Gia+NjsWQ/sPe
sd+jg3dNOedO/Jbl5nRM4jrh8ZFWlsmtj2zmfOCvob/yp5bN2OJDfBr9teBX
wmyHaUGhLMG63gSeGJOvhf13XNxkZurCZr5v99QbnX7nKd5BfzL4Nu5rIJ/Q
sq1f9errsow8YjdFuE2xpf1c8fIMdbhB97fA16C/jf3GlT3aTPzkcNeBKwsO
En8tPTHyzcQWii9+2mZHjHtJfBP8Efzq9Mev3jrDKR+JeAL23PnQ15WbTt9/
ZPWEpiuP2MzzG0wXHjDuR/1KSwb5d9b2xC+I79A/jnhoqE3IFZ9flC9KuOa5
f+gkut/1ccJ0zX2DyJ/wmxImNIWRPumEK1+qkCT/+i1y7M9uDpfhl5++S8dM
m0710NwGmaal8yk/v9Vd7cGNInpeqeFMZ6toDoNH2yet9NT4QPEs8p2wT9Qr
IO+9qyKWRy0m+/s0892gV1nUj4v4CfiA/DX2v/uc/IUGb3o++kuQP8B9HJxH
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
U23WKZ0ivrQ2LaHj3GGu4P8ATJnqQw==
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {1.9154228855721396`, -6.268907633414699}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {
       Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{1.9154228855721396`, 
      2.890547263681592}, {-6.268907633414699, 1.1731348653376903`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, 
       Charting`ScaledTicks[{Log, Exp}]}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"n=200 PW\"", "\"n=200 MiniSAT\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {10, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {10, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "10", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], ",", 
                    RowBox[{"Offset", "[", "10", "]"}]}], "}"}]}], "}"}]}], 
           ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8329453204804583`*^9, {3.832948272956728*^9, 3.832948283139213*^9}, 
   3.8329558479014997`*^9},
 CellLabel->
  "Out[213]=",ExpressionUUID->"86eb9cb6-e1c2-4da8-bd40-99b3cb0a48a7"]
}, Open  ]],

Cell["\<\
It is also fair to comment that the PW algorithm is sometimes decent, only \
say 10x worse than MiniSAT, which is pretty good!  But on the hardest \
problems, it can be 1000x slower...\
\>", "Text",
 CellChangeTimes->CompressedData["
1:eJwd0H0s1HEcB3CpsDGKOvKwyFMUiwqzE5eePB0ZtjZKDhk2Dy2T0lTnsbor
nIecw/Jwnso8zEPoZupKKCe0Y6JDqzwzSR76vn9/fPbaPn+893l/DIKivEPk
5eTkzpKBwiqlxR/xswwRY20Juh9nrsFeo1hKVX7VtvrtWYaTtE1eg0jLazeG
/IxQM5ggqYmAZQZbkTCQLTOxIx580mcGzZs7hs4Qb3BkI5D+cYkXRSwdNM2F
Inl/9mDqLCN/2SMNhq6tLMMHyYdWYc+J4nX4XJ+/Te3NmLfa08idNk8p55J2
iuFY7EwJpO2NqYTpA+eq4XTQgQnY2WVK2fg3/X4HMdI5oQDG2o0WQZGWbjHs
aQ6x6CRyPH2toQF7hw6/bv9zg3zrcC/oI6T5QYGhHgtmrk9RhjVeCocSn2Nx
0GjrfAOsj2ugHFPpEYiI/vZGRZDu+HBMQty0l1KyJsdpg8SNaRsd2N4YfBha
jAso7xg4mkP/+BJruOpk7AMv9DH94BFbluIXokn+LiV4tX+PGlQVX9GAETJL
I/iLp3YSZmaI7GCL6gwdttooJEEvz5RseNMlPg8qqYRUQPmd3loqT1T5Ev4p
cQ8cRl8uNxRKxW5BhRzyN/oECyrYT4TB/GnDeOhUz02EKTWdqbAtyzgH2n1w
qICXk0dqIFtb2AjFLu2KAuIb8zwVSNucp8GW8F5NuLRinA2F9tEFMFev3KGc
yHxn6ww7JImucDLvuhsMEgR4wmHfOW/YVctJqiBKVqVcGJl2jwefPS4UwM8h
rqVwPNWxDIY65NTBqkxWE9TL7O+G7gy3AWijvltfSDwl0DGD0aLOR5XE08pi
DszJD+6B88y736CPylsZbFXmzkCtQcvfsO7i1Byc/am+vxo9Z15rwgDTWs4r
YtYknQcl+44uiojXyjVW4IKvy3Q3+r2XLcAN209SMVG36cUopdV3zT4Yw9aG
VloOTUPEYIUuSjluWyus9Fjsgv8BNrlJsw==
  "],
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"127734f9-2eae-48bc-b7d4-223e0673b284"]
}, Open  ]]
},
WindowSize->{1304, 858},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
InputAliases->{"intt" -> RowBox[{"\[Integral]", 
     RowBox[{"\[SelectionPlaceholder]", 
       RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], "dintt" -> 
  RowBox[{
     SubsuperscriptBox[
     "\[Integral]", "\[SelectionPlaceholder]", "\[Placeholder]"], 
     RowBox[{"\[Placeholder]", 
       RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], "rintt" -> 
  RowBox[{
     UnderscriptBox["\[Integral]", 
      RowBox[{"\[SelectionPlaceholder]", "\[Element]", "\[Placeholder]"}]], 
     "\[Placeholder]"}], "sumt" -> RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
      "\[Placeholder]"], "\[Placeholder]"}], "prodt" -> RowBox[{
     UnderoverscriptBox["\[Product]", 
      RowBox[{"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
      "\[Placeholder]"], "\[Placeholder]"}], "dt" -> RowBox[{
     SubscriptBox["\[PartialD]", "\[Placeholder]"], " ", 
     "\[SelectionPlaceholder]"}], "cbrt" -> 
  RadicalBox[
   "\[SelectionPlaceholder]", "3", SurdForm -> True, MultilineFunction -> 
    None], "surd" -> 
  RadicalBox[
   "\[SelectionPlaceholder]", "\[Placeholder]", SurdForm -> True, 
    MultilineFunction -> None], "ket" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Ket"], "bra" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Bra"], "braket" -> 
  TemplateBox[{"\[SelectionPlaceholder]", "\[Placeholder]"}, "BraKet"], 
  "delay" -> TemplateBox[{"\[SelectionPlaceholder]"}, "SystemsModelDelay"], 
  "grad" -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], "\[Placeholder]"}], 
  "del." -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], ".", 
     "\[Placeholder]"}], "delx" -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], "\[Cross]", 
     "\[Placeholder]"}], "del2" -> RowBox[{
     SubsuperscriptBox["\[Del]", "\[SelectionPlaceholder]", 2], 
     "\[Placeholder]"}], "kd" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "KroneckerDeltaSeq"], "algs" -> 
  TemplateBox[{}, "Algebraics"], "bools" -> TemplateBox[{}, "Booleans"], 
  "comps" -> TemplateBox[{}, "Complexes"], "ints" -> 
  TemplateBox[{}, "Integers"], "pris" -> TemplateBox[{}, "Primes"], "rats" -> 
  TemplateBox[{}, "Rationals"], "reals" -> TemplateBox[{}, "Reals"], "pints" -> 
  TemplateBox[{}, "PositiveIntegers"], "npints" -> 
  TemplateBox[{}, "NonPositiveIntegers"], "nnints" -> 
  TemplateBox[{}, "NonNegativeIntegers"], "nints" -> 
  TemplateBox[{}, "NegativeIntegers"], "prats" -> 
  TemplateBox[{}, "PositiveRationals"], "nprats" -> 
  TemplateBox[{}, "NonPositiveRationals"], "nnrats" -> 
  TemplateBox[{}, "NonNegativeRationals"], "nrats" -> 
  TemplateBox[{}, "NegativeRationals"], "preals" -> 
  TemplateBox[{}, "PositiveReals"], "npreals" -> 
  TemplateBox[{}, "NonPositiveReals"], "nnreals" -> 
  TemplateBox[{}, "NonNegativeReals"], "nreals" -> 
  TemplateBox[{}, "NegativeReals"], "dlim" -> RowBox[{
     UnderscriptBox["\[Limit]", 
      RowBox[{"\[SelectionPlaceholder]", 
        UnderscriptBox["\[Rule]", 
         TemplateBox[{}, "Integers"]], "\[Infinity]"}]], "\[Placeholder]"}], 
  "dMlim" -> RowBox[{
     UnderscriptBox["\[MaxLimit]", 
      RowBox[{"\[SelectionPlaceholder]", 
        UnderscriptBox["\[Rule]", 
         TemplateBox[{}, "Integers"]], "\[Infinity]"}]], "\[Placeholder]"}], 
  "dmlim" -> RowBox[{
     UnderscriptBox["\[MinLimit]", 
      RowBox[{"\[SelectionPlaceholder]", 
        UnderscriptBox["\[Rule]", 
         TemplateBox[{}, "Integers"]], "\[Infinity]"}]], "\[Placeholder]"}], 
  "notation" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongLeftRightArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "notation>" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongRightArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "notation<" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongLeftArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "symb" -> RowBox[{"Symbolize", "[", 
     TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], "]"}], 
  "infixnotation" -> RowBox[{"InfixNotation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], ",", 
       "\[Placeholder]"}], "]"}], "addia" -> RowBox[{"AddInputAlias", "[", 
     RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "pattwraper" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "NotationPatternTag"], 
  "madeboxeswraper" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "NotationMadeBoxesTag"], "rxn" -> 
  RowBox[{"\[Placeholder]", " ", 
     OverscriptBox["\[RightArrow]", 
      RowBox[{" ", "\[Placeholder]", " "}]], " ", "\[Placeholder]", " "}], 
  "revrxn" -> RowBox[{"\[Placeholder]", " ", 
     UnderoverscriptBox[
     "\[RightArrowLeftArrow]", "\[Placeholder]", "\[Placeholder]"], " ", 
     "\[Placeholder]", " "}]},
FrontEndVersion->"12.2 for Mac OS X x86 (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"adc233cc-86a9-4ef1-836f-39bc3daaf4b1"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 255, 4, 67, "Section",ExpressionUUID->"feb81284-dba6-470d-9997-9b6da9c00e2d"],
Cell[838, 28, 902, 14, 51, "Text",ExpressionUUID->"8fcc14f5-fd80-460a-a06a-76044aaebe14"],
Cell[1743, 44, 659, 12, 89, "Input",ExpressionUUID->"a2fd125c-d676-40ea-b617-822bef79cf83",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[2439, 61, 330, 5, 67, "Section",ExpressionUUID->"af216e18-9615-4b10-af94-70efc167390b"],
Cell[2772, 68, 1124, 20, 97, "Text",ExpressionUUID->"580f51c3-c72e-4df5-89bf-ec75c6687395"],
Cell[3899, 90, 2820, 68, 131, "Input",ExpressionUUID->"14661e0a-a7c3-485e-aba1-d4fcfdd869bb",
 InitializationCell->True],
Cell[6722, 160, 3895, 90, 194, "Input",ExpressionUUID->"21219c1b-bdc0-4005-acc2-859eb486598c",
 InitializationCell->True],
Cell[10620, 252, 1348, 32, 110, "Input",ExpressionUUID->"894eee33-08bb-4be1-9c4c-de6ee58f7a7b",
 InitializationCell->True],
Cell[11971, 286, 1395, 29, 235, "Text",ExpressionUUID->"93b629c8-fea7-46df-9e5d-6cc75430f6f3"],
Cell[13369, 317, 2713, 73, 152, "Input",ExpressionUUID->"6de3ae31-5188-4fec-990e-21dbf0a89e58",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[16119, 395, 624, 11, 67, "Section",ExpressionUUID->"17105c81-5444-40de-9deb-c36a223389e5"],
Cell[16746, 408, 1812, 32, 166, "Text",ExpressionUUID->"2e917c37-4df6-4796-80b2-86f92cc94ba6"],
Cell[18561, 442, 2671, 69, 152, "Input",ExpressionUUID->"b63cbb21-cb2e-4b53-907c-003ae51b7dd2",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[21257, 515, 355, 7, 30, "Input",ExpressionUUID->"00eda19e-f33f-4a74-88af-795aa99492fa"],
Cell[21615, 524, 2763, 52, 173, "Output",ExpressionUUID->"b3110746-5697-4d52-9181-cbb88a25cd1d"]
}, Open  ]],
Cell[24393, 579, 1337, 24, 74, "Text",ExpressionUUID->"d7fafa0a-b250-4b03-8b74-686e5f659ca4"],
Cell[CellGroupData[{
Cell[25755, 607, 394, 9, 30, "Input",ExpressionUUID->"db715e95-0b84-4f43-bb86-54bdd33d0e23"],
Cell[26152, 618, 203, 3, 34, "Output",ExpressionUUID->"6aa7bf3c-4be0-41aa-b217-0cc23e863e0a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26392, 626, 398, 9, 30, "Input",ExpressionUUID->"0fa8675e-b038-4449-b94c-938ea9c0dace"],
Cell[26793, 637, 174, 2, 34, "Output",ExpressionUUID->"cc85a3e0-dd7d-4e46-abec-97c2a739c6e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27004, 644, 385, 9, 30, "Input",ExpressionUUID->"5dbf20b0-fc0e-4322-95df-a346e92b77db"],
Cell[27392, 655, 202, 3, 34, "Output",ExpressionUUID->"0dbe34e1-170f-4fd6-ad65-e35777857925"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27631, 663, 385, 9, 30, "Input",ExpressionUUID->"31761565-56a6-4c57-8550-e696fb0e5bd1"],
Cell[28019, 674, 203, 3, 34, "Output",ExpressionUUID->"27480fc5-591f-40f5-b239-1b0e0d1fc774"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28259, 682, 457, 11, 30, "Input",ExpressionUUID->"1a898ea3-50f3-4f9c-9aaa-6a8bf629eb7f"],
Cell[28719, 695, 326, 6, 34, "Output",ExpressionUUID->"f654f0e7-1922-47c9-8cb4-6f0b37e21228"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29082, 706, 408, 10, 30, "Input",ExpressionUUID->"a00968d5-1e62-477e-876e-aea961f350d4"],
Cell[29493, 718, 180, 2, 34, "Output",ExpressionUUID->"39352188-6b3c-45ca-b2df-81efac5aaf2e"]
}, Open  ]],
Cell[29688, 723, 13023, 287, 773, "Text",ExpressionUUID->"d6b99f1c-1d07-4724-b850-96bf2e330eb7"],
Cell[CellGroupData[{
Cell[42736, 1014, 334, 8, 30, "Input",ExpressionUUID->"23b765d6-bdef-401e-8400-0b301f079a25"],
Cell[43073, 1024, 2888, 53, 309, "Output",ExpressionUUID->"2b2b91dc-0d03-4317-93a5-4eb8b1507740"]
}, Open  ]],
Cell[45976, 1080, 1781, 46, 152, "Input",ExpressionUUID->"131bad42-6906-4d65-a8e1-0e4af0e682fc",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[47782, 1130, 8420, 208, 425, "Input",ExpressionUUID->"0bee7547-20cc-4714-be27-f6701ab6c659",
 InitializationCell->True],
Cell[56205, 1340, 26317, 503, 63, "Output",ExpressionUUID->"5e1fac26-f98e-42e6-b594-b4ab5676b3b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82559, 1848, 316, 6, 30, "Input",ExpressionUUID->"0593190c-865f-4b7b-bf0b-661ef3159cb1"],
Cell[82878, 1856, 723, 13, 34, "Output",ExpressionUUID->"18607abe-50dd-4c06-83c6-22844bd21510"]
}, Open  ]],
Cell[83616, 1872, 2161, 43, 46, "Input",ExpressionUUID->"740d3dec-ddb2-491f-ab15-c2793d0a1780",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[85802, 1919, 417, 8, 30, "Input",ExpressionUUID->"de6f8fc6-e72c-4caf-a020-49ae3598cbf3"],
Cell[86222, 1929, 466, 6, 34, "Output",ExpressionUUID->"33a31a37-3d14-4ba4-a81f-78038ab89047"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86725, 1940, 572, 15, 30, "Input",ExpressionUUID->"b8fec741-9b05-4236-b766-4857c73470cb"],
Cell[87300, 1957, 5798, 128, 316, "Output",ExpressionUUID->"78c5f6f7-a9a0-434d-adc2-11ef3cdacc39"]
}, Open  ]],
Cell[93113, 2088, 552, 10, 74, "Text",ExpressionUUID->"0126d238-3177-4efa-a2d1-721e8394c13c"],
Cell[CellGroupData[{
Cell[93690, 2102, 749, 19, 94, "Input",ExpressionUUID->"52b5ff38-9261-46ca-bfdc-6ff68aea3625"],
Cell[94442, 2123, 226, 3, 34, "Output",ExpressionUUID->"0a41ab3a-23aa-48f4-ab3c-1c547e222d0c"]
}, Open  ]],
Cell[94683, 2129, 1661, 44, 131, "Input",ExpressionUUID->"de12b9dc-82f9-4565-ad35-fa8e2ac4e2eb",
 InitializationCell->True],
Cell[96347, 2175, 970, 26, 30, "Input",ExpressionUUID->"2c6cff34-9464-4c2f-8364-1987b5fb1f6d"],
Cell[97320, 2203, 968, 26, 30, "Input",ExpressionUUID->"502bf88c-868d-48a4-863c-c4655eab5e21"],
Cell[98291, 2231, 1017, 27, 30, "Input",ExpressionUUID->"1d404312-ab2a-42a0-b8d2-d2f99fd44715"],
Cell[CellGroupData[{
Cell[99333, 2262, 873, 20, 52, "Input",ExpressionUUID->"130651ea-2460-4ccd-a335-cc0527ebbb10"],
Cell[100209, 2284, 21002, 460, 240, "Output",ExpressionUUID->"98531fee-2086-4790-bce6-a5a8cfc1084c"]
}, Open  ]],
Cell[121226, 2747, 929, 27, 30, "Input",ExpressionUUID->"851b3d3c-2f96-4bf8-b54e-ee1e53e95942"],
Cell[CellGroupData[{
Cell[122180, 2778, 2522, 68, 115, "Input",ExpressionUUID->"9b218be6-45da-4beb-9bca-57dfbc62ebcf"],
Cell[124705, 2848, 30543, 654, 150, "Output",ExpressionUUID->"a55d9932-26d1-425b-8ff2-7bccad8fde85"]
}, Open  ]],
Cell[155263, 3505, 2696, 59, 170, "Text",ExpressionUUID->"1d9a7091-be82-4df0-985d-687781c423e4"],
Cell[157962, 3566, 1140, 31, 110, "Input",ExpressionUUID->"640df091-c3e0-41a3-99f3-46df5006b7f0",
 InitializationCell->True],
Cell[159105, 3599, 985, 28, 30, "Input",ExpressionUUID->"393a3abc-0c56-4eda-b576-6a781a24525a"],
Cell[CellGroupData[{
Cell[160115, 3631, 734, 19, 52, "Input",ExpressionUUID->"38bd6003-698f-497c-8f5a-f8db3bf6343b"],
Cell[160852, 3652, 16048, 347, 256, "Output",ExpressionUUID->"032f471b-642a-4da6-a364-37c7cd6dcdce"]
}, Open  ]],
Cell[176915, 4002, 1243, 23, 74, "Text",ExpressionUUID->"dc3a4b80-c216-411a-8ec3-a8477ef1401b"],
Cell[178161, 4027, 794, 25, 30, "Input",ExpressionUUID->"ac381352-63a7-4b13-a62d-03f43534d6ec"],
Cell[178958, 4054, 800, 25, 30, "Input",ExpressionUUID->"661258d9-878d-412d-82aa-cff555cec7a5"],
Cell[CellGroupData[{
Cell[179783, 4083, 783, 20, 52, "Input",ExpressionUUID->"5d787d41-d27c-47de-ba32-79a8f9db7714"],
Cell[180569, 4105, 20811, 435, 240, "Output",ExpressionUUID->"9e06770b-a72e-416b-8f1e-604a7b7a1284"]
}, Open  ]],
Cell[201395, 4543, 1277, 23, 74, "Text",ExpressionUUID->"ad5d36a7-4cab-45da-8c39-a9bac62de7cb"],
Cell[202675, 4568, 916, 27, 30, "Input",ExpressionUUID->"c28c305f-94d7-4867-b2a9-9fbf84b05861"],
Cell[203594, 4597, 868, 26, 30, "Input",ExpressionUUID->"0b06f158-e814-45b8-aae6-319015317ed9"],
Cell[CellGroupData[{
Cell[204487, 4627, 838, 21, 52, "Input",ExpressionUUID->"d22d7a3a-2a26-49d6-93c8-4ca7e86ddadd"],
Cell[205328, 4650, 18111, 389, 246, "Output",ExpressionUUID->"66272ea3-5530-4bdf-9f1e-b2f0053e7a63"]
}, Open  ]],
Cell[223454, 5042, 1094, 29, 30, "Input",ExpressionUUID->"ef89116f-233d-4a17-a952-8bd6e477d652"],
Cell[224551, 5073, 1001, 28, 30, "Input",ExpressionUUID->"97362890-75e4-4632-90ac-d4ab4fda7f1a"],
Cell[CellGroupData[{
Cell[225577, 5105, 888, 21, 52, "Input",ExpressionUUID->"ccde5ec1-b7ae-48fb-9170-0e1b6ef7a133"],
Cell[226468, 5128, 21450, 445, 243, "Output",ExpressionUUID->"8f65c098-32cb-46d5-a4ec-7529f9bdfd3c"]
}, Open  ]],
Cell[247933, 5576, 2487, 55, 145, "Text",ExpressionUUID->"220449f5-c371-4736-8df9-3d18d043256e"],
Cell[250423, 5633, 1883, 51, 152, "Input",ExpressionUUID->"1617a21f-6d09-4d3a-b2ed-bd01ebe781df",
 InitializationCell->True],
Cell[252309, 5686, 1757, 46, 131, "Input",ExpressionUUID->"23f271e4-6fee-45f5-86ea-ca80196f8cd7",
 InitializationCell->True],
Cell[254069, 5734, 822, 25, 30, "Input",ExpressionUUID->"09e45639-fec4-4501-aa88-c2ea671f28a2"],
Cell[254894, 5761, 2026, 44, 73, "Input",ExpressionUUID->"3e0fc30e-c6ca-4318-be60-97cb89eac7aa"],
Cell[CellGroupData[{
Cell[256945, 5809, 963, 22, 52, "Input",ExpressionUUID->"c0536ddd-0370-40d6-b882-0a10b6a5d554"],
Cell[257911, 5833, 15653, 348, 243, "Output",ExpressionUUID->"951df8cd-94c9-4e53-8d64-bfbe7ef66cb1"]
}, Open  ]],
Cell[273579, 6184, 1540, 27, 74, "Text",ExpressionUUID->"41238c95-c0f4-4944-978b-03e498508e16"],
Cell[275122, 6213, 1675, 45, 131, "Input",ExpressionUUID->"d39370e9-d8a4-48a4-af8a-625f2e5f15f9",
 InitializationCell->True],
Cell[276800, 6260, 1452, 41, 110, "Input",ExpressionUUID->"a50805b9-36dc-4574-b014-dbe076c98e84",
 InitializationCell->True],
Cell[278255, 6303, 2409, 68, 94, "Input",ExpressionUUID->"983b2f80-41f5-446b-9813-b13c71c8b334"],
Cell[280667, 6373, 1781, 41, 30, "Input",ExpressionUUID->"91efc5d2-72ab-4b80-b7db-fd8eb8fcce6f"],
Cell[CellGroupData[{
Cell[282473, 6418, 1088, 24, 52, "Input",ExpressionUUID->"05d12138-bcc9-47d9-a4f7-7de63746a717"],
Cell[283564, 6444, 72176, 1269, 241, "Output",ExpressionUUID->"86eb9cb6-e1c2-4da8-bd40-99b3cb0a48a7"]
}, Open  ]],
Cell[355755, 7716, 1358, 25, 51, "Text",ExpressionUUID->"127734f9-2eae-48bc-b7d4-223e0673b284"]
}, Open  ]]
}
]
*)

